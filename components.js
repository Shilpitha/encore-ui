angular.module('demoApp')
.value('components', [
    {
        "name": "configs",
        "moduleName": "'encore.ui.configs'",
        "displayName": "Configs",
        "srcFiles": [
            "src/configs/configs.module.js",
            "src/configs/scripts/devicePaths.js",
            "src/configs/scripts/feedbackApi.js",
            "src/configs/scripts/routesCdnPath.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 26, 2015 @ 14:39 (UTC-0500)",
        "rawLastModified": "2015-10-26 14:39:08 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>Common configs used throughout Encore.</p>\n",
            "js": "",
            "html": "",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "grid",
        "moduleName": "'encore.ui.grid'",
        "displayName": "Grid",
        "srcFiles": [
            "src/grid/grid.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "deprecated",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/deprecated.svg\" alt=\"deprecated\"></a></p>\n<h1>Notice!</h1>\n<p>This feature will soon be deprecated in favor of the <a href=\"#/components/layout\">responsive layout module</a>. This new module implements a more intuitive, semantic, attribute-based syntax for creating responsive designs making use of flexbox.</p>\n<h1>Description</h1>\n<p>While EncoreUI was initially designed to be an AngularJS widget library, we recognize that teams will want to use a CSS layout framework. We have added the <a href=\"http://purecss.io/grids/\">Grids module from Yahoo!&#39;s Pure CSS framework</a> for teams to easily build out a grid or column system as part of EncoreUI. We chose this lightweight framework for its emphasis on flex based layouts.</p>\n<h1>Usage</h1>\n<p>No additional installation is required. We have automatically included <code>grids-min.css</code> into the encore-ui CSS libraries.</p>\n<p>Note that most of the grid layouts you will use will be in the context of <code>rxPage</code> inside <code>rxApp</code>. For this reason we will be using the regular grids only, and not responsive grids.</p>\n<p>The code sample below will probably give the clearest context of how grids work. Note that the <code>.pure-g</code> also has a <code>clear</code> class attached because title containers on <code>rxPage</code> components are defaulted to float left.</p>\n<p>You&#39;ll find that the grid components will not have borders or padding within the grid units themselves. If you need white space between grid columns, adding a <code>columns</code> class to the <code>.pure-g</code> container will give padding of 1.5ems per each individual cell, or 3ems together.</p>\n",
            "js": "",
            "html": "<rx-page title=\"'Customized Page Title'\">\n\n    <h3 class=\"clear\">Two u-1-2 modules</h3>\n    <div class=\"pure-g clear\">\n        <div class=\"pure-u-1-2\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n        <div class=\"pure-u-1-2\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n    </div>\n\n    <h3>Three u-1-3 modules</h3>\n    <div class=\"pure-g clear\">\n        <div class=\"pure-u-1-3\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n        <div class=\"pure-u-1-3\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n        <div class=\"pure-u-1-3\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n    </div>\n\n\n    <h3>Two u-1-2 modules with a columns class</h3>\n    <div class=\"pure-g columns clear\">\n        <div class=\"pure-u-1-2\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n        <div class=\"pure-u-1-2\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n    </div>\n\n    <h3>Three u-1-3 modules with a columns class</h3>\n    <div class=\"pure-g columns clear\">\n        <div class=\"pure-u-1-3\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n        <div class=\"pure-u-1-3\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n        <div class=\"pure-u-1-3\">\n            <table class=\"table\">\n                <thead>\n                    <th>Header 1</th>\n                </thead>\n                <tbody><tr><td>Cell 1</tr></tbody>\n            </table>\n        </div>\n    </div>\n\n</rx-page>\n",
            "less": ".pure-g.columns > div {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    padding-left: 1.25em;\n    padding-right: 1.25em;\n\n    &:first-child {\n        padding-left: 0;\n    }\n    &:last-child {\n        padding-right: 0;\n    }\n}\n\n",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "hotkeys",
        "moduleName": "'encore.ui.hotkeys'",
        "displayName": "Hotkeys",
        "srcFiles": [
            "src/hotkeys/hotkeys.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Sep 16, 2015 @ 15:10 (UTC-0500)",
        "rawLastModified": "2015-09-16 15:10:41 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This component is simply a reference guide to using <a href=\"http://chieffancypants.github.io/angular-hotkeys/\">the angular-hotkeys plugin</a> from within EncoreUI.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('hotkeysCtrl', function ($scope, hotkeys) {\n    $scope.volume = 5;\n\n    hotkeys.add({\n        combo: 'ctrl+up',\n        description: 'Turn up the volume!',\n        callback: function () {\n            $scope.volume += 1;\n        }\n    });\n\n    hotkeys.add({\n        combo: 'ctrl+down',\n        description: 'Turn it down!',\n        callback: function () {\n            $scope.volume -= 1;\n        }\n    });\n\n    var showHFSHE = function () {\n        var videoSrc = '//www.youtube.com/embed/Dach1nPbsY8?autoplay=1';\n\n        var iframe = document.createElement('iframe');\n        iframe.src = videoSrc;\n\n        var container = document.getElementById('hfshe');\n        container.appendChild(iframe);\n        container.style.display = 'block';\n    };\n\n    hotkeys.add({\n        combo: 'up+up+down+down+left+right+left+right+a+b',\n        callback: showHFSHE\n    });\n});\n",
            "html": "<style type=\"text/css\">\n    #hfshe {\n        display: none;\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: rgba(0, 0, 0, 0.9);\n    }\n    #hfshe iframe {\n        width: 560px;\n        height: 315px;\n        border: 0;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        margin-top: -158px;\n        margin-left: -280px;\n    }\n</style>\n\n<div ng-controller=\"hotkeysCtrl\">\n    <p>Press `?` to see the shortcut cheat-sheet.</p>\n\n    <p>Current Volume: <span ng-bind=\"volume\"></span></p>\n\n    <div id=\"hfshe\"></div>\n</div>",
            "less": "",
            "midway": "describe('hotkeys', function () {\n    var volume, body;\n\n    before(function () {\n        demoPage.go('#/components/hotkeys');\n        volume = element(by.binding('volume'));\n        body = element(by.css('body'));\n    });\n\n    it('should turn volume up and down using hotkeys', function () {\n        expect(volume.getText()).to.eventually.equal('5');\n\n        // turn it up\n        var ctrlUp = protractor.Key.chord(protractor.Key.CONTROL, protractor.Key.ARROW_UP);\n        body.sendKeys(ctrlUp);\n\n        expect(volume.getText()).to.eventually.equal('6');\n\n        // turn it down\n        var ctrlDown = protractor.Key.chord(protractor.Key.CONTROL, protractor.Key.ARROW_DOWN);\n        body.sendKeys(ctrlDown);\n        body.sendKeys(ctrlDown);\n\n        expect(volume.getText()).to.eventually.equal('4');\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "layout",
        "moduleName": "'encore.ui.layout'",
        "displayName": "Layout",
        "srcFiles": [
            "src/layout/layout.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>Encore UI includes a grid system forked from <a href=\"https://material.angularjs.org/#/layout/container\">Angular Material&#39;s layout module</a> with minor usability enhancements to provide an assortment of attribute-based layout options based on the flexbox layout model. Included are intuitive attribute based styles that ease the creation of responsive row and/or column based page layouts.</p>\n",
            "js": "angular.module('demoApp')\n.controller('layoutController', function ($scope) {\n    $scope.layout = 'row';\n    $scope.align = { first: 'center', second: 'middle' };\n    $scope.options1 = ['left', 'center', 'right', 'spread', 'justify'];\n    $scope.options2 = ['top', 'middle', 'bottom', 'stretch'];\n\n    // Swap the first 3 items in each array and set new value\n    $scope.swap = function (option) {\n\n        if ($scope.layout === option) {\n            return;\n        }\n\n        var swap = $scope.options2.slice(0, 3).concat($scope.options1.slice(3));\n        $scope.options2 = $scope.options1.slice(0, 3).concat($scope.options2.slice(3));\n        $scope.options1 = swap;\n        swap = $scope.options1[$scope.options1.indexOf($scope.align.second)] || 'spread';\n        $scope.align.second = $scope.options2[$scope.options2.indexOf($scope.align.first)] || 'stretch';\n        $scope.align.first = swap;\n    };\n});\n",
            "html": "<div class=\"layout-demo\">\n\n    <!-- Overview -->\n    <a id=\"Overview\"></a>\n\n    <h2>Overview</h2>\n\n    <p>Angular Material's responsive CSS layout is built on <a href=\"http://www.w3.org/TR/css3-flexbox/\" target=_blank>flexbox.</a></p>\n\n    <p>The layout system is based upon element attributes rather than CSS classes. Attributes provide an easy way to set a value (eg <code>layout=\"row\"</code>) and help separate concerns: attributes define layout, and classes define styling.</p>\n\n\n    <!-- Layout Attribute -->\n    <a id=\"Attribute\"></a>\n\n    <h2>Layout Attribute</h2>\n\n    <p>Use the <code>layout</code> attribute on an element to arrange its children horizontally in a row (<code>layout=\"row\"</code>), or vertically in a column (<code>layout=\"column\"</code>).</p>\n\n    <h3>Row Layout</h3>\n\n    <div layout=\"row\">\n      <div class=\"box dark-blue\">I'm left.</div>\n      <div class=\"box light-blue\">I'm right.</div>\n    </div>\n\n    <h3>Column Layout</h3>\n    <div layout=\"column\">\n      <div class=\"box dark-blue\">I'm above.</div>\n      <div class=\"box light-blue\">I'm below.</div>\n    </div>\n\n    <p>See <a href=\"#/components/layout#Options\">Options</a> for information on responsive layouts and other options.</p>\n\n\n    <!-- Grid System-->\n    <a id=\"Grid\"></a>\n\n    <h2>Grid System</h2>\n\n    <p>To customize the size and position of elements in a layout, use the <code>flex</code>, <code>flex-offset</code>, and <code>flex-order</code> attributes.</p>\n\n\n    <h3>Flex Attribute</h3>\n\n    <div layout=\"row\">\n      <div flex class=\"flex-box dark-blue\">\n        [flex]\n      </div>\n      <div flex class=\"flex-box light-blue\">\n        [flex]\n      </div>\n      <div flex class=\"flex-box dark-green\">\n        [flex]\n      </div>\n    </div>\n\n    <p>Add the <code>flex</code> attribute to a layout's child element, and it will flex (stretch) to fill the available area.</p>\n\n\n    <h3>Flex Percent Values</h3>\n\n    <div layout=\"row\" layout-wrap>\n      <div flex=\"33\" class=\"flex-box dark-blue\">\n        [flex=\"33\"]\n      </div>\n      <div flex=\"55\" class=\"flex-box light-blue\">\n        [flex=\"55\"]\n      </div>\n      <div flex class=\"flex-box orange\">\n        [flex]\n      </div>\n      <div flex=\"66\" class=\"flex-box light-green\">\n        [flex=\"66\"]\n      </div>\n      <div flex=\"33\" class=\"flex-box dark-green\">\n        [flex=\"33\"]\n      </div>\n    </div>\n\n    <p>A layout child's <code>flex</code> attribute can be given an integer value from 0-100. The element will stretch to the percentage of available space matching the value.</p>\n\n    <p>The <code>flex</code> attribute value is restricted to 33, 66, and multiples of five. For example: <code>flex=\"5\"</code>, <code>flex=\"20\"</code>, \"<code>flex=\"33\"</code>, <code>flex=\"50\"</code>, <code>flex=\"66\"</code>, <code>flex=\"75\"</code>, ....</p>\n\n    <p>See the <a href=\"#/components/layout#Options\">layout options</a> for more information on responsive flex attributes.</p>\n\n\n    <h3>Flex Order Attribute</h3>\n\n    <div layout=\"row\" layout-margin>\n      <div flex flex-order=\"3\" class=\"flex-box dark-blue margin-left\">\n        [flex-order=\"3\"]\n      </div>\n      <div flex flex-order=\"2\" class=\"flex-box light-blue margin-right margin-left\">\n        [flex-order=\"2\"]\n      </div>\n      <div flex flex-order=\"1\" class=\"flex-box dark-green margin-right\">\n        [flex-order=\"1\"]\n      </div>\n    </div>\n\n    <p>Add the <code>flex-order</code> attribute to a layout child to set its position within the layout. Any value from 0-9 is accepted.</p>\n\n    <p>Note that the <code>flex-order</code> attribute is not compatible with the <code>layout-margin</code> attribute. This is because the CSS selector engine selects based on DOM markup order and the <code>layout-margin</code> attribute makes use of <code>:first-child</code> and <code>:last-child</code> to apply margins to only the inner elements in the container. As a work-around, <code>[flex-order].left-margin</code> and <code>[flex-order].right-margin</code> classes are availabe to manually add margins. The most likely use cases for these classes is for programatic ordering of children.</p>\n\n    <table>\n        <tr>\n            <td>flex-order</td>\n            <td>Sets element order.</td>\n        </tr>\n        <tr>\n            <td>flex-order-sm </td>\n            <td>Sets element order on devices less than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-order-gt-sm</td>\n            <td>Sets element order on devices greater than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-order-md</td>\n            <td>Sets element order on devices between 600px and 960px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-order-gt-md</td>\n            <td>Sets element order on devices greater than 960px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-order-lg</td>\n            <td>Sets element order on devices between 960px and 1200px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-order-gt-lg</td>\n            <td>Sets element order on devices greater than 1200px wide.</td>\n        </tr>\n    </table>\n\n\n    <h3>Flex Offset Attribute</h3>\n\n    <div layout=\"row\">\n      <div flex flex-offset=\"33\" class=\"flex-box dark-blue\">\n        [flex offset=\"33\"]\n      </div>\n      <div flex class=\"flex-box light-blue\">\n        [flex]\n      </div>\n    </div>\n\n    <p>Add the <code>offset</code> attribute to a layout child to set its offset percentage within the layout. Values must be multiples of <code>5</code>, or <code>33</code>, <code>34</code>, <code>66</code>, <code>67</code>.</p>\n\n    <table>\n    <tr>\n        <td>offset</td>\n        <td>Sets element offset.</td>\n    </tr>\n    <tr>\n        <td>offset-sm</td>\n        <td>Sets element offset on devices less than 600px wide.</td>\n    </tr>\n    <tr>\n        <td>offset-gt-sm</td>\n        <td>Sets element offset on devices greater than 600px wide.</td>\n    </tr>\n    <tr>\n        <td>offset-md</td>\n        <td>Sets element offset on devices between 600px and 960px wide.</td>\n    </tr>\n    <tr>\n        <td>offset-gt-md</td>\n        <td>Sets element offset on devices greater than 960px wide.</td>\n    </tr>\n    <tr>\n        <td>offset-lg</td>\n        <td>Sets element offset on devices between 960px and 1200px wide.</td>\n    </tr>\n    <tr>\n        <td>offset-gt-lg</td>\n        <td>Sets element offset on devices greater than 1200px wide.</td>\n    </tr>\n    </table>\n\n\n    <!-- Child Alignment -->\n    <a id=\"ChildAlignment\"></a>\n\n    <h2>Child Alignment</h2>\n\n    <p>The <code>layout-align</code> attribute takes two parameters in any order. Parameters <code>top</code>, <code>middle</code>, <code>bottom</code>, <code>left</code>, <code>right</code>, and <code>center</code> determine the alignment of child elements and may be combined in sensible ways (ie <code>top left</code> works but <code>top bottom</code> would not).</p>\n\n    <p>Parameters <code>stretch</code>, <code>justify</code>, and <code>spread</code> determine the justification of child elements. <code>Stretch</code> grows child elements perpendicular to layout axis (ie <code>layout=\"row\"</code> stretches up and down). <code>Justify</code> and <code>spread</code> space out child elements evenly perpendicular to layout axis either with or without side padding, respectively</p>\n\n    <p>Only one parameter is required for the attribute. For example, <code>layout=\"row\" layout-align=\"center\"</code> would make the elements center horizontally and use the default behavior vertically.\n\n    <p><code>layout=\"column\" layout-align=\"right middle\"</code> would align children along the center vertically and along the right horizontally.</p>\n\n    <table>\n        <tr>\n            <td>layout-align</td>\n            <td>Sets child alignment.</td>\n        </tr>\n        <tr>\n            <td>layout-align-sm</td>\n            <td>Sets child alignment on devices less than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>layout-align-gt-sm</td>\n            <td>Sets child alignment on devices greater than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>layout-align-md</td>\n            <td>Sets child alignment on devices between 600px and 960px wide.</td>\n        </tr>\n        <tr>\n            <td>layout-align-gt-md</td>\n            <td>Sets child alignment on devices greater than 960px wide.</td>\n        </tr>\n        <tr>\n            <td>layout-align-lg</td>\n            <td>Sets child alignment on devices between 960px and 1200px wide.</td>\n        </tr>\n        <tr>\n            <td>layout-align-gt-lg</td>\n            <td>Sets child alignment on devices greater than 1200px wide.</td>\n        </tr>\n    </table>\n\n    <div ng-controller=\"layoutController\">\n        <p>See below for more examples: <code>layout=\"{{layout}}\" layout-align=\"{{align.first}} {{align.second}}\"</code></p>\n\n        <div layout=\"{{layout}}\" layout-align=\"{{align.first}} {{align.second}}\" class=\"small-box-container\">\n          <div class=\"small-box light-blue\">one</div>\n          <div class=\"small-box dark-blue\">two</div>\n          <div class=\"small-box light-green\">three</div>\n        </div>\n\n        <div class=\"layout-examples\" layout=\"row\" layout-align=\"top spread\">\n\n            <div layout=\"column\">\n                <span>Layout Direction</span>\n                <label>\n                    <input type=\"radio\" ng-model=\"layout\" value=\"row\" ng-click=\"swap('row')\"> row\n                </label>\n\n                <label>\n                    <input type=\"radio\" ng-model=\"layout\" value=\"column\" ng-click=\"swap('column')\"> column\n                </label>\n            </div>\n\n            <div layout=\"column\">\n                <span>Alignment in Layout Direction</span>\n\n                <label ng-repeat=\"option in options1\" for=\"{{align1}}\">\n                    <input type=\"radio\" name=\"align1\" ng-model=\"align.first\" ng-value=\"option\"> {{option}}\n                </label>\n            </div>\n\n            <div layout=\"column\">\n                <span>Alignment in Perpendicular Direction</span>\n\n                <label ng-repeat=\"option in options2\" for=\"{{align2}}\">\n                    <input type=\"radio\" name=\"align2\" ng-model=\"align.second\" ng-value=\"option\"> {{option}}\n                </label>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- Options -->\n    <a id=\"Options\"></a>\n\n    <h2>Options</h2>\n\n    <h3>Responsive Layout</h3>\n\n    <div layout=\"row\" layout-sm=\"column\">\n      <div flex class=\"grow-box dark-blue\">\n        I'm above on mobile, and to the left on larger devices.\n      </div>\n      <div flex class=\"grow-box light-blue\">\n        I'm below on mobile, and to the right on larger devices.\n      </div>\n    </div>\n\n    <p>See the <a href=\"#/components/layout#Attribute\">Attribute</a> section for a basic explanation of layout attributes.</p>\n    <p>To make your layout change depending upon the device size, there are other <code>layout</code> attributes available:</p>\n\n    <table>\n        <tr>\n            <td>layout</td>\n            <td>Sets the default layout on all devices.</td>\n        </tr>\n        <tr>\n            <td>layout-sm</td>\n            <td>Sets the layout on devices less than 600px wide (phones).</td>\n        </tr>\n        <tr>\n            <td>layout-gt-sm</td>\n            <td>Sets the layout on devices greater than 600px wide (bigger than phones).</td>\n        </tr>\n        <tr>\n            <td>layout-md</td>\n            <td>Sets the layout on devices between 600px and 960px wide (tablets in portrait).</td>\n        </tr>\n        <tr>\n            <td>layout-gt-md</td>\n            <td>Sets the layout on devices greater than 960px wide (bigger than tablets in portrait).</td>\n        </tr>\n        <tr>\n            <td>layout-lg</td>\n            <td>Sets the layout on devices between 960 and 1200px wide (tablets in landscape).</td>\n        </tr>\n        <tr>\n            <td>layout-gt-lg</td><td>Sets the layout on devices greater than 1200px wide (computers and large screens).</td>\n        </tr>\n    </table>\n\n\n    <h3>Layout Margin, Padding, and Fill</h3>\n\n    <div layout=\"row\" layout-margin layout-fill layout-padding>\n      <div flex class=\"grow-box dark-blue\">I'm on the left, and there's an empty area around me.</div>\n      <div flex class=\"grow-box light-blue\">I'm on the right, and there's an empty area around me.</div>\n    </div>\n\n    <p><code>layout-margin</code> adds margin around each <code>flex</code> child. It also adds a margin to the layout container itself.</p>\n    <p><code>layout-padding</code> adds padding inside each <code>flex</code> child. It also adds padding to the layout container itself.</p>\n    <p><code>layout-fill</code> forces the layout element to fill its parent container.</p>\n\n\n    <h3>Wrap</h3>\n\n    <div layout=\"row\" layout-wrap>\n      <div flex=\"33\" class=\"grow-box dark-blue\">[flex=33]</div>\n      <div flex=\"66\" class=\"grow-box light-blue\">[flex=66]</div>\n      <div flex=\"66\" class=\"grow-box light-green\">[flex=66]</div>\n      <div flex=\"33\" class=\"grow-box dark-green\">[flex=33]</div>\n    </div>\n\n    <p><code>layout-wrap</code> allows <code>flex</code> children to wrap within the container if the elements use more than 100%. By default, flex elements do not wrap.</p>\n\n\n    <h3>Responsive Flex &amp; Offset Attributes</h3>\n\n    <div layout=\"row\">\n      <div flex=\"66\" flex-sm=\"33\" class=\"grow-box dark-blue\">\n        I flex to one-third of the space on mobile, and two-thirds on other devices.\n      </div>\n      <div flex=\"33\" flex-sm=\"66\" class=\"grow-box light-blue\">\n        I flex to two-thirds of the space on mobile, and one-third on other devices.\n      </div>\n    </div>\n\n    <p>See the <a href=\"#/components/layout#Grid\">Grid</a> section for a basic explanation of flex and offset attributes.</p>\n\n    <table>\n        <tr>\n            <td>flex</td>\n            <td>Sets flex.</td>\n        </tr>\n        <tr>\n            <td>flex-sm</td>\n            <td>Sets flex on devices less than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-gt-sm</td>\n            <td>Sets flex on devices greater than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-md</td>\n            <td>Sets flex on devices between 600px and 960px wide..</td>\n        </tr>\n        <tr>\n            <td>flex-gt-md</td>\n            <td>Sets flex on devices greater than 960px wide.</td>\n        </tr>\n        <tr>\n            <td>flex-lg</td>\n            <td>Sets flex on devices between 960px and 1200px.</td>\n        </tr>\n        <tr>\n            <td>flex-gt-lg</td>\n            <td>Sets flex on devices greater than 1200px wide.</td>\n        </tr>\n    </table>\n\n\n    <h3>Hide and Show Attributes</h3>\n\n    <div layout layout-align=\"center center\" class=\"small-box-container\">\n      <div hide-sm class=\"grow-box dark-blue\">\n        I'm hidden on mobile and shown on larger devices.\n      </div>\n      <div hide-gt-sm class=\"grow-box dark-green\">\n        I'm shown on mobile and hidden on larger devices.\n      </div>\n    </div>\n\n    <table>\n        <tr>\n            <td>hide</td>\n            <td><code>display: none</code></td>\n        </tr>\n        <tr>\n            <td>hide-sm</td>\n            <td><code>display: none</code> on devices less than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>hide-gt-sm</td>\n            <td><code>display: none</code> on devices greater than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>hide-md</td>\n            <td><code>display: none</code> on devices between 600px and 960px wide.</td>\n        </tr>\n        <tr>\n            <td>hide-gt-md</td>\n            <td><code>display: none</code> on devices greater than 960px wide.</td>\n        </tr>\n        <tr>\n            <td>hide-lg</td>\n            <td><code>display: none</code> on devices between 960px and 1200px.</td>\n        </tr>\n        <tr>\n            <td>hide-gt-lg</td>\n            <td><code>display: none</code> on devices greater than 1200px wide.</td>\n        </tr>\n        <tr>\n            <td>show</td>\n            <td>Negates hide.</td>\n        </tr>\n        <tr>\n            <td>show-sm</td>\n            <td>Negates hide on devices less than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>show-gt-sm</td>\n            <td>Negates hide on devices greater than 600px wide.</td>\n        </tr>\n        <tr>\n            <td>show-md</td>\n            <td>Negates hide on devices between 600px and 960px wide..</td>\n        </tr>\n        <tr>\n            <td>show-gt-md</td>\n            <td>Negates hide on devices greater than 960px wide.</td>\n        </tr>\n        <tr>\n            <td>show-lg</td>\n            <td>Negates hide on devices between 960px and 1200px.</td>\n        </tr>\n        <tr>\n            <td>show-gt-lg</td>\n            <td>Negates hide on devices greater than 1200px wide.</td>\n        </tr>\n    </table>\n</div>\n",
            "less": "// Adapted from https://github.com/angular/material/commits/master/src/core/style/layout.scss\n// commit 4216d242d78f1bdadd89ebd59e1d80b9cc4f2978\n\n@import 'mixins';\n@import 'vars';\n\n/*\n * Layout\n */\n\n[layout] {\n    .box-sizing(border-box);\n    display: flex;\n}\n\n[layout=\"column\"] {\n    flex-direction: column;\n}\n\n[layout=\"row\"] {\n    flex-direction: row;\n}\n\n[layout-padding],\n[layout-padding] > [flex] {\n    padding: @layout-gutter-width / 2;\n}\n\n[layout-wrap] {\n    flex-wrap: wrap;\n}\n\n[layout-fill] {\n    margin: 0;\n    min-height: 100%;\n    width: 100%;\n}\n@-moz-document url-prefix() {\n    [layout-fill] {\n        margin: 0;\n        width: 100%;\n        min-height: auto;\n        height: inherit;\n    }\n}\n\n\n// Used to concatenate selectors with '-' delimiter or without if no value provided\n// Only works for variable name @selector\n.concat-selector(@base, @value) when not (@value = null) {\n    @selector: ~'@{base}-@{value}';\n}\n.concat-selector(@base, @value) when (@value = null) {\n    @selector: ~'@{base}';\n}\n\n\n// Vertical and horizontal margins, except on outside and on flex-ordered elements\n.layout-margin-for-name(@divisor, @suffix: null) {\n    .concat-selector('flex', @suffix);\n    [layout-margin] > [@{selector}]:not([flex-order])  {\n        margin: (@layout-gutter-width / @divisor);\n        &:first-child { margin-left: 0; }\n        &:last-child { margin-right: 0; }\n    }\n}\n\n\n.flex-order-for-name(@suffix: null) {\n    .concat-selector('flex-order', @suffix);\n    [@{selector}].margin-right {\n        margin-right: @layout-gutter-width / 2;\n    }\n    [@{selector}].margin-left {\n        margin-left: @layout-gutter-width / 2;\n    }\n    .loop (@i) when (@i < 10) {\n        [@{selector}=\"@{i}\"] { order: @i; }\n        .loop (@i + 1);\n    }\n    .loop (0);\n}\n\n.layout-for-name(@name) {\n    @selector: ~'layout-@{name}';\n    [@{selector}] {\n        .box-sizing(border-box);\n        display: flex;\n    }\n    [@{selector}=\"column\"] {\n        flex-direction: col;\n    }\n    [@{selector}=\"row\"] {\n        flex-direction: row ;\n    }\n}\n\n.offset-for-name(@suffix: null) {\n    .concat-selector('flex-offset', @suffix);\n    .loop (@i) when (@i < 20) {\n        @offset: @i * 5;\n        [@{selector}=\"@{offset}\"] {\n            margin-left: ~\"@{offset}%\";\n        }\n        .loop (@i + 1);\n    }\n    .loop (1);\n\n    [@{selector}=\"33\"], [@{selector}=\"34\"] {\n        margin-left: 33.33%;\n    }\n    [@{selector}=\"66\"], [@{selector}=\"67\"] {\n        margin-left: 66.66%;\n    }\n}\n\n\n.flex-properties-for-name(@suffix: null) {\n    .concat-selector('flex', @suffix);\n\n    [@{selector}] {\n        .box-sizing(border-box);\n        flex: 1;\n    }\n\n    // (0-20) * 5 = 0-100%\n    .loop (@i) when (@i < 21) {\n        @flex: @i * 5;\n        [@{selector}=\"@{flex}\"] {\n            flex: 0 0 ~'@{flex}%';\n        }\n        [layout=\"row\"] > [@{selector}=\"@{flex}\"] {\n            max-width: ~'@{flex}%';\n        }\n        [layout=\"column\"] > [@{selector}=\"@{flex}\"] {\n            max-height: ~'@{flex}%';\n        }\n        .loop (@i + 1);\n    }\n    .loop (0);\n\n    [@{selector}=\"33\"], [@{selector}=\"34\"] {\n        flex: 0 0 33.33%;\n    }\n    [@{selector}=\"66\"], [@{selector}=\"67\"] {\n        flex: 0 0 66.66%;\n    }\n\n    [layout=\"row\"] {\n        > [@{selector}=\"33\"], > [@{selector}=\"34\"] {\n            max-width: 33.33%;\n        }\n        > [@{selector}=\"66\"], > [@{selector}=\"67\"] {\n            max-width: 66.66%;\n        }\n    }\n    [layout=\"column\"] {\n        > [@{selector}=\"33\"], > [@{selector}=\"34\"] {\n            max-height: 33.33%;\n        }\n        > [@{selector}=\"66\"], > [@{selector}=\"67\"] {\n            max-height: 66.66%;\n        }\n    }\n}\n\n\n.layout-align-for-name(@suffix: null) {\n    .concat-selector('layout', @suffix);\n\n    [@{selector}=\"row\"] {\n        .concat-selector('layout-align', @suffix);\n\n        &[@{selector}~=\"left\"]    { justify-content: flex-start; }\n        &[@{selector}~=\"center\"]  { justify-content: center; }\n        &[@{selector}~=\"right\"]   { justify-content: flex-end; }\n        &[@{selector}~=\"justify\"] { justify-content: space-between; }\n        &[@{selector}~=\"spread\"]  { justify-content: space-around; }\n\n        &[@{selector}~=\"top\"]     { align-items: flex-start; }\n        &[@{selector}~=\"middle\"]  { align-items: center; }\n        &[@{selector}~=\"bottom\"]  { align-items: flex-end; }\n        &[@{selector}~=\"stretch\"] { align-items: stretch; }\n    }\n\n    [@{selector}=\"column\"] {\n        .concat-selector('layout-align', @suffix);\n\n        &[@{selector}~=\"top\"]     { justify-content: flex-start; }\n        &[@{selector}~=\"middle\"]  { justify-content: center; }\n        &[@{selector}~=\"bottom\"]  { justify-content: flex-end; }\n        &[@{selector}~=\"justify\"] { justify-content: space-between; }\n        &[@{selector}~=\"spread\"]  { justify-content: space-around; }\n\n        &[@{selector}~=\"left\"]    { align-items: flex-start; }\n        &[@{selector}~=\"center\"]  { align-items: center; }\n        &[@{selector}~=\"right\"]   { align-items: flex-end; }\n        &[@{selector}~=\"stretch\"] { align-items: stretch; }\n    }\n}\n\n// Flex attributes for layout children\n// ------------------------------\n\n.layout-margin-for-name(2);\n.flex-properties-for-name();\n.layout-align-for-name();\n.flex-order-for-name();\n.offset-for-name();\n\n// Adapted from https://github.com/angular/material/commits/master/src/core/style/layout.scss\n// commit 4216d242d78f1bdadd89ebd59e1d80b9cc4f2978\n\n/*\n * Responsive attributes\n */\n\n[layout-padding] {\n    & > [flex-sm],\n    & > [flex-lt-md] {\n        padding: @layout-gutter-width / 4;\n    }\n\n    & > [flex-gt-sm],\n    & > [flex-md],\n    & > [flex-lt-lg] {\n        padding: @layout-gutter-width / 2;\n    }\n\n    & > [flex-gt-md],\n    & > [flex-lg] {\n        padding: @layout-gutter-width / 1;\n    }\n}\n\n.layout-margin-for-name(4, sm);\n.layout-margin-for-name(4, lt-md);\n.layout-margin-for-name(2, gt-sm);\n.layout-margin-for-name(2, md);\n.layout-margin-for-name(2, lt-lg);\n.layout-margin-for-name(1, gt-md);\n.layout-margin-for-name(1, lg);\n\n\n/**\n * `hide-gt-sm show-gt-lg` should hide from 600px to 1200px\n * `show-md hide-gt-sm` should show from 0px to 960px and hide at > 960px\n * `hide-gt-md show-gt-sm` should show everywhere (show overrides hide)`\n */\n\n\n// SMALL SCREEN\n@media (max-width: (@layout-breakpoint-sm - 1)) {\n    [hide-sm],\n    [hide] {\n        &:not([show-sm]):not([show]) {\n            display: none;\n        }\n    }\n\n    .flex-order-for-name(sm);\n    .layout-align-for-name(sm);\n    .layout-for-name(sm);\n    .offset-for-name(sm);\n    .flex-properties-for-name(sm);\n}\n\n// BIGGER THAN SMALL SCREEN\n@media (min-width: @layout-breakpoint-sm) {\n    .flex-order-for-name(gt-sm);\n    .layout-align-for-name(gt-sm);\n    .layout-for-name(gt-sm);\n    .offset-for-name(gt-sm);\n    .flex-properties-for-name(gt-sm);\n}\n\n// MEDIUM SCREEN\n@media (min-width: @layout-breakpoint-sm) and (max-width: (@layout-breakpoint-md - 1)) {\n    [hide],\n    [hide-gt-sm] {\n        &:not([show-gt-sm]):not([show-md]):not([show]) {\n            display: none;\n        }\n    }\n    [hide-md]:not([show-md]):not([show]) {\n        display: none;\n    }\n\n    .flex-order-for-name(md);\n    .layout-align-for-name(md);\n    .layout-for-name(md);\n    .offset-for-name(md);\n    .flex-properties-for-name(md);\n}\n\n// BIGGER THAN MEDIUM SCREEN\n@media (min-width: @layout-breakpoint-md) {\n    .flex-order-for-name(gt-md);\n    .layout-align-for-name(gt-md);\n    .layout-for-name(gt-md);\n    .offset-for-name(gt-md);\n    .flex-properties-for-name(gt-md);\n}\n\n// LARGE SCREEN\n@media (min-width: @layout-breakpoint-md) and (max-width: (@layout-breakpoint-lg - 1)) {\n    [hide],\n    [hide-gt-sm],\n    [hide-gt-md] {\n        &:not([show-gt-sm]):not([show-gt-md]):not([show-lg]):not([show]) {\n            display: none;\n        }\n    }\n    [hide-lg]:not([show-lg]):not([show]) {\n        display: none;\n    }\n\n    .flex-order-for-name(lg);\n    .layout-align-for-name(lg);\n    .layout-for-name(lg);\n    .offset-for-name(lg);\n    .flex-properties-for-name(lg);\n}\n\n// BIGGER THAN LARGE SCREEN\n@media (min-width: @layout-breakpoint-lg) {\n    [hide-gt-sm],\n    [hide-gt-md],\n    [hide-gt-lg],\n    [hide] {\n        &:not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show]) {\n            display: none;\n        }\n    }\n\n    .flex-order-for-name(gt-lg);\n    .layout-align-for-name(gt-lg);\n    .layout-for-name(gt-lg);\n    .offset-for-name(gt-lg);\n    .flex-properties-for-name(gt-lg);\n}\n\n\n.layout-demo {\n    .base-box {\n        height: 50px;\n        color: white;\n        font-weight: bold;\n        padding: 20px;\n        text-shadow: 0 0 4px rgba(100, 100, 100, 1);\n    }\n\n    .box {\n        &:extend(.layout-demo .base-box);\n        width: 150px;\n        margin: 10px 15px;\n    }\n\n    .flex-box {\n        &:extend(.layout-demo .base-box);\n        width: auto;\n    }\n\n    .dark-blue {\n        background-color: @blue;\n    }\n    .light-blue {\n        background-color: @light-blue;\n    }\n    .dark-green {\n        background-color: @green;\n    }\n    .light-green {\n        background-color: @light-green;\n    }\n    .orange {\n        background-color: @orange;\n    }\n\n    .small-box-container {\n        width: 95%;\n        height: 300px;\n        margin: 0 auto 10px;\n        box-shadow: 0 0 5px 0 rgba(0,0,0,0.6);\n    }\n\n    .small-box {\n        &:extend(.layout-demo .base-box);\n        height: auto;\n        width: auto;\n        text-align: center;\n    }\n\n    .grow-box {\n        &:extend(.layout-demo .base-box);\n        height: auto;\n    }\n\n    .layout-examples {\n        input[type=\"radio\"] {\n            margin-right: 6px;\n        }\n\n        label {\n            margin: 10px 0 0 10px;\n        }\n    }\n}\n",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "metadata",
        "moduleName": "'encore.ui.metadata'",
        "displayName": "Metadata",
        "srcFiles": [
            "src/metadata/metadata.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "deprecated",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/deprecated.svg\" alt=\"deprecated\"></a></p>\n<h1>NOTICE!</h1>\n<p>This feature is deprecated in favor of the <a href=\"#/components/rxMetadata\">rxMetadata</a> component and <strong>will be removed</strong> in a future release of the framework.</p>\n<p>This component provides styles and a demo for displays of metadata.</p>\n",
            "js": "",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div class=\"metadata\">\n     <dl>\n         <dt>Status:</dt>\n         <dd>Active</dd>\n         <dt>RCN:</dt>\n         <dd>RCN-555-555-555</dd>\n         <dt>Type:</dt>\n         <dd>Cloud</dd>\n         <dt>Service Level:</dt>\n         <dd>Managed &rarr; Managed</dd>\n         <dt>Service Type:</dt>\n         <dd>DevOps &rarr; SysOps</dd>\n         <dt>Plan Change Status:</dt>\n         <dd>Pending</dd>\n         <dt>Service Team:</dt>\n         <dd><a href=\"#\">Link</a></dd>\n     </dl>\n </div>\n",
            "less": "/*\n * metadata\n */\n.metadata {\n    overflow: hidden;\n    font-size: 16px;\n    color: #727272;\n    line-height: 1.6em;\n\n    dl {\n        margin: 0;\n        clear: both;\n    }\n\n    dt {\n        float: left;\n        font-weight: 700;\n        text-align: left;\n        clear: left;\n        margin-right: 1em;\n    }\n    dd {\n        font-weight: 400;\n        text-align: left;\n        margin: 0;\n        display: list-item;\n        list-style-type: none;\n        list-style-image: url(\"\");\n    }\n}\n",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "progressbar",
        "moduleName": "'encore.ui.progressbar'",
        "displayName": "Progressbar",
        "srcFiles": [
            "src/progressbar/progressbar.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 20, 2015 @ 17:48 (UTC-0500)",
        "rawLastModified": "2015-10-20 17:48:13 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>This component may be used to provide feedback on the progress of a workflow or action.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('progressbarCtrl', function ($scope) {\n    // This file is used to help build the 'demo' documentation page and should be updated with example code\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"progressbarCtrl\">\n     <div layout=\"row\">\n        <div flex=\"67\">\n            <progressbar class=\"progress-striped active\" value=\"45\" max=\"100\"></progressbar>\n            <progressbar class=\"progress-striped active\" value=\"22\">22%</progressbar>\n            <progressbar class=\"progress-striped active\" max=\"3\" value=\"2\"><i>2 of 3 servers processed</i></progressbar>\n            <progressbar class=\"progress active\" max=\"3\" value=\"3\"><i>3 of 3 servers processed</i></progressbar>\n        </div>\n    </div>\n</div>\n",
            "less": "@import 'vars';\n\n// Bar animations\n// -------------------------\n// WebKit\n@-webkit-keyframes progress-bar-stripes {\n    from  { background-position: 40px 0; }\n    to    { background-position: 0 0; }\n}\n\n// Spec and IE10+\n@keyframes progress-bar-stripes {\n    from  { background-position: 40px 0; }\n    to    { background-position: 0 0; }\n}\n\n// Bar itself\n// -------------------------\n\n.progress-bar-variant(@color) {\n    background-color: @color;\n\n    // Deprecated parent class requirement as of v3.2.0\n    .progress-striped & {\n        #gradient > .striped();\n    }\n}\n\n// Outer container\n.progress {\n    overflow: hidden;\n    height: @line-height-computed;\n    margin-bottom: @line-height-computed;\n    background-color: @progress-bg;\n    border: 1px solid #ccc;\n    padding: 1px;\n}\n\n// Bar of progress\n.progress-bar {\n    float: left;\n    width: 0%;\n    height: 100%;\n    font-size: @font-size-small;\n    line-height: @line-height-computed;\n    color: #1672b9;\n    text-align: center;\n    background-color: @progress-bar-bg;\n    .transition(width .6s ease);\n}\n\n// Striped bars\n//\n// `.progress-striped .progress-bar` is deprecated as of v3.2.0 in favor of the\n// `.progress-bar-striped` class, which you just add to an existing\n// `.progress-bar`.\n.progress-striped .progress-bar,\n.progress-bar-striped {\n    #gradient > .striped();\n    background-size: 40px 40px;\n}\n\n// Call animation for the active one\n//\n// `.progress.active .progress-bar` is deprecated as of v3.2.0 in favor of the\n// `.progress-bar.active` approach.\n.progress.active .progress-bar,\n.progress-bar.active {\n    .animation(progress-bar-stripes 2s linear infinite);\n}\n\n// Variations\n// -------------------------\n\n.progress-bar-secondary {\n    .progress-bar-variant(@progress-bar-secondary-bg);\n    color: #fff;\n}\n\n.progress-bar-tertiary {\n    .progress-bar-variant(@progress-bar-tertiary-bg);\n    color: #fff;\n}\n\n#gradient {\n\n    // Horizontal gradient, from left to right\n    //\n    // Creates two color stops, start and end, by specifying a color and position for each color stop.\n    // Color stops are not available in IE9 and below.\n    .horizontal(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {\n        background-image: -webkit-linear-gradient(left, @start-color @start-percent, @end-color @end-percent); // Safari 5.1-6, Chrome 10+\n        background-image: -o-linear-gradient(left, @start-color @start-percent, @end-color @end-percent); // Opera 12\n        background-image: linear-gradient(to right, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\n        background-repeat: repeat-x;\n        filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)\",argb(@start-color),argb(@end-color))); // IE9 and down\n    }\n\n    // Vertical gradient, from top to bottom\n    //\n    // Creates two color stops, start and end, by specifying a color and position for each color stop.\n    // Color stops are not available in IE9 and below.\n    .vertical(@start-color: #555; @end-color: #333; @start-percent: 0%; @end-percent: 100%) {\n        background-image: -webkit-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);  // Safari 5.1-6, Chrome 10+\n        background-image: -o-linear-gradient(top, @start-color @start-percent, @end-color @end-percent);  // Opera 12\n        background-image: linear-gradient(to bottom, @start-color @start-percent, @end-color @end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\n        background-repeat: repeat-x;\n        filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)\",argb(@start-color),argb(@end-color))); // IE9 and down\n    }\n\n    .directional(@start-color: #555; @end-color: #333; @deg: 45deg) {\n        background-repeat: repeat-x;\n        background-image: -webkit-linear-gradient(@deg, @start-color, @end-color); // Safari 5.1-6, Chrome 10+\n        background-image: -o-linear-gradient(@deg, @start-color, @end-color); // Opera 12\n        background-image: linear-gradient(@deg, @start-color, @end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+\n    }\n\n    .horizontal-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f) {\n        background-image: -webkit-linear-gradient(left, @start-color, @mid-color @color-stop, @end-color);\n        background-image: -o-linear-gradient(left, @start-color, @mid-color @color-stop, @end-color);\n        background-image: linear-gradient(to right, @start-color, @mid-color @color-stop, @end-color);\n        background-repeat: no-repeat;\n        filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)\",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback\n    }\n\n    .vertical-three-colors(@start-color: #00b3ee; @mid-color: #7a43b6; @color-stop: 50%; @end-color: #c3325f) {\n        background-image: -webkit-linear-gradient(@start-color, @mid-color @color-stop, @end-color);\n        background-image: -o-linear-gradient(@start-color, @mid-color @color-stop, @end-color);\n        background-image: linear-gradient(@start-color, @mid-color @color-stop, @end-color);\n        background-repeat: no-repeat;\n        filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)\",argb(@start-color),argb(@end-color))); // IE9 and down, gets no color-stop at all for proper fallback\n    }\n\n    .radial(@inner-color: #555; @outer-color: #333) {\n        background-image: -webkit-radial-gradient(circle, @inner-color, @outer-color);\n        background-image: radial-gradient(circle, @inner-color, @outer-color);\n        background-repeat: no-repeat;\n    }\n\n    .striped(@color: rgba(255,255,255,.15); @angle: 45deg) {\n        background-image: -webkit-linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);\n        background-image: -o-linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);\n        background-image: linear-gradient(@angle, @color 25%, transparent 25%, transparent 50%, @color 50%, @color 75%, transparent 75%, transparent);\n    }\n}\n\n.animation(@animation) {\n    -webkit-animation: @animation;\n         -o-animation: @animation;\n            animation: @animation;\n}\n",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxAccountInfo",
        "moduleName": "'encore.ui.rxAccountInfo'",
        "displayName": "Rx Account Info",
        "srcFiles": [
            "src/rxAccountInfo/rxAccountInfo.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxAccountInfo/templates/rxAccountInfo.html",
            "templates/rxAccountInfo/templates/rxAccountInfoBanner.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>This component is used to draw an account info box at the top of each page, directly underneath the breadcrumbs.</p>\n",
            "js": "// Note that these factories are only present for the purposes of this demo. In a real application,\n// SupportAccount, Teams, AccountStatusGroup, and Encore will have to be provided from elsewhere,\n// outside of encore-ui. Specifically, we implement them in encore-ui-svcs\n\nangular.module('encore.ui.rxAccountInfo')\n.value('Badges',\n    [\n        {\n            url: 'http://mirrors.creativecommons.org/presskit/icons/cc.large.png',\n            description: 'Enables the free distribution of an otherwise copyrighted work.',\n            name: 'Creative Commons'\n        }, {\n            url: 'http://mirrors.creativecommons.org/presskit/icons/by.large.png',\n            description: ['You must give appropriate credit, provide a link to the',\n                          'license, and indicate if changes were made.'].join(' '),\n            name: 'Attribution'\n        }, {\n            url: 'http://mirrors.creativecommons.org/presskit/icons/nc.large.png',\n            description: 'You may not use the material for commercial purposes.',\n            name: 'Non-Commercial'\n        }, {\n            url: 'http://mirrors.creativecommons.org/presskit/icons/zero.large.png',\n            description: 'Waives as many rights as legally possible, worldwide.',\n            name: 'Public Domain'\n        }\n    ]\n)\n.value('TeamBadges',\n    [\n        {\n            url: 'http://mirrors.creativecommons.org/presskit/icons/share.large.png',\n            description: ['Licensees may distribute derivative works only under a license',\n                          'identical to the license that governs the original work.'].join(' '),\n            name: 'ShareAlike'\n        }, {\n            url: 'http://mirrors.creativecommons.org/presskit/icons/nd.large.png',\n            description: ['Licensees may copy, distribute, display and perform only verbatim',\n                          'copies of the work, not derivative works based on it.'].join(' '),\n            name: 'No-Derivs'\n        }\n    ]\n)\n.factory('SupportAccount', function ($q, Badges) {\n    return {\n        getBadges: function (config, success, failure) {\n            var deferred = $q.defer();\n\n            if (config.accountNumber === '6789') {\n                deferred.reject();\n            } else {\n                deferred.resolve(Badges);\n            }\n\n            deferred.promise.then(success, failure);\n\n            return deferred.promise;\n        }\n    };\n})\n.factory('Teams', function ($q, TeamBadges) {\n    return {\n        badges: function (config) {\n            var deferred = $q.defer();\n\n            if (config.id === '9876') {\n                deferred.reject();\n            } else {\n                deferred.resolve(TeamBadges);\n            }\n\n            deferred.$promise = deferred.promise;\n\n            return deferred;\n        }\n    };\n})\n.factory('Encore', function ($q) {\n    return {\n        getAccount: function (config, success, failure) {\n            var deferred = $q.defer();\n\n            if (config.id === '9876') {\n                deferred.reject();\n            } else if (config.id === '5623') {\n                deferred.resolve({ name: 'DelinquentAccount', status: 'Delinquent', accessPolicy: 'Full' });\n            } else if (config.id === '3265') {\n                deferred.resolve({ name: 'UnverifiedAccount', status: 'Unverified', accessPolicy: 'Full' });\n            } else {\n                deferred.resolve({ name: 'Mosso', status: 'Active', accessPolicy: 'Full' });\n            }\n\n            deferred.promise.then(success, failure);\n\n            return deferred.promise;\n        }\n    };\n})\n.factory('AccountStatusGroup', function () {\n    var warning = ['suspended', 'delinquent'];\n    var info = ['unverified', 'pending approval', 'approval denied', 'teststatus', 'terminated'];\n\n    return function (statusText) {\n        var lower = statusText.toLowerCase();\n        if (_.contains(warning, lower)) {\n            return 'warning';\n        } else if (_.contains(info, lower)) {\n            return 'info';\n        }\n        return '';\n    };\n})\n.controller('rxAccountInfoDemo', function ($scope) {\n        $scope.customMenu = [{\n            title: 'Example Menu',\n            children: [\n                {\n                    href: 'Lvl1-1',\n                    linkText: '1st Order Item'\n                },\n                {\n                    linkText: '1st Order Item (w/o href) w/ Children',\n                    childVisibility: [ 'isUserDefined' ],\n                    childHeader: '<strong class=\"current-search\">Current User:</strong>' +\n                                 '<span class=\"current-result\">{{$root.user}}</span>',\n                    children: [\n                        {\n                            href: 'Lvl1-2-Lvl2-1',\n                            linkText: '2nd Order Item w/ Children',\n                            children: [{\n                                href: 'Lvl1-2-Lvl2-1-Lvl3-1',\n                                linkText: '3rd Order Item'\n                            }]\n                        },\n                        {\n                            href: 'Lvl1-2-Lvl2-2',\n                            linkText: '2nd Order Item w/ Children',\n                            children: [\n                                {\n                                    href: 'Lvl1-2-Lvl2-2-Lvl3-1',\n                                    linkText: '3rd Order Item'\n                                },\n                                {\n                                    href: 'Lvl1-2-Lvl2-2-Lvl3-2',\n                                    linkText: '3rd Order Item'\n                                },\n                                {\n                                    href: 'Lvl1-2-Lvl2-2-Lvl3-3',\n                                    linkText: '3rd Order Item'\n                                },\n                                {\n                                    href: 'Lvl1-2-Lvl2-2-Lvl3-4',\n                                    linkText: '3rd Order Item'\n                                }\n                            ]\n                        },\n                        {\n                            href: 'Lvl1-2-Lvl2-3',\n                            linkText: '2nd Order Item'\n                        }\n                    ]\n                },\n                {\n                    href: 'Lvl1-3',\n                    linkText: '1st Order Item w/ Children',\n                    children: [\n                        {\n                            href: 'Lvl1-3-Lvl2-1',\n                            linkText: '2nd Order Item'\n                        }\n                    ]\n                }\n            ]\n        }];\n    });\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n\n<h3>Account Info Enabled</h3>\n<p>When <code>account-number=\"...\"</code> is passed to <code>&lt;rx-page&gt;</code>, the account info banner will automatically be drawn underneath the breadcrumbs, as shown here.\n</p>\n<div ng-controller='rxAccountInfoDemo'>\n<rx-app collapsible-nav=\"true\" site-title=\"My App\" id=\"custom-rxApp\" menu=\"customMenu\" new-instance=\"true\" hide-feedback=\"true\">\n<rx-page title=\"'Demo Title'\" subtitle=\"subtitle\" status=\"alpha\"\n    account-number=\"12345\" team-id=\"123\">\n    </rx-page>\n</rx-app>\n</div>\n\nThe rest of the examples just show the affect of different conditions on the account info banner, rather than showing an entire <code>rxApp</code> sample again.\n\n<hr />\n\n<h4>Working Account Info</h4>\n<div class=\"demo-working-account\">\n    <rx-account-info account-info-banner='true' account-number=\"12345\"></rx-account-info>\n</div>\n\n<hr />\n\n<h4>Deliquent Account </h4>\n<p>Note the changed styling on \"Account Status\".<p>\n<div class=\"delinquent-account\">\n    <rx-account-info account-info-banner='true' account-number=\"5623\"></rx-account-info>\n</div>\n<hr />\n\n<h4>Working Account Info with Team Badges</h4>\n<div class=\"demo-working-teams unverified-account\">\n    <rx-account-info account-info-banner='true' account-number=\"3265\" team-id=\"123\"></rx-account-info>\n</div>\n\n<hr />\n\n<div>\n    <h4>Can't Load Badges</h4>\n    <rx-notifications stack=\"badgeError\"></rx-notifications>\n    <div class=\"demo-badge-error\">\n        <rx-account-info account-info-banner='true' account-number=\"6789\" notify-stack=\"badgeError\"></rx-account-info>\n    </div>\n</div>\n\n<hr />\n\n<div>\n    <h4>Can't Load Team Badges</h4>\n    <rx-notifications stack=\"teamBadgeError\"></rx-notifications>\n    <div class=\"demo-team-badge-error\">\n        <rx-account-info account-info-banner='true' account-number=\"12345\" team-id=\"9876\" notify-stack=\"teamBadgeError\"></rx-account-info>\n    </div>\n</div>\n\n<hr />\n\n<div>\n    <h4>Can't Load Account Name</h4>\n    <rx-notifications stack=\"nameError\"></rx-notifications>\n    <div class=\"demo-name-error\">\n        <rx-account-info account-info-banner='true' account-number=\"9876\" notify-stack=\"nameError\"></rx-account-info>\n    </div>\n</div>\n\n<hr />\n\n<p>The Account Info box is intended to appear as a banner directly beneath a page's breadcrumbs, and <code>rxPage</code> has been augmented to support this. In the past though, we supported a different format for the Account Info, which you would explicitly place wherever on the page you liked.</p>\n\n<p>This old format is still available. Simply use <code>rx-account-info</code> as above, but leave out the <code>account-info-banner='true'</code> attribute. This style is considered deprecated, and should not be used for new work.</p>\n\n<div class=\"demo-working-account-old\">\n    <rx-account-info account-number=\"12345\"></rx-account-info>\n</div>\n",
            "less": "/*\n * rxAccountInfo\n */\n.rx-account-info {\n    .info-panel {\n        overflow: hidden;\n    }\n    .account-info-wrapper {\n        float: left;\n        margin-right: 5em;\n    }\n    .account-info-label {\n        color: #777777;\n    }\n    .account-info-data {\n        color: #777777;\n        font-size: 26px;\n        img {\n            height: 35px;\n            margin-right: 5px;\n        }\n    }\n\n}\n\n/*\n * rxAccountInfoBanner\n */\n.rx-page {\n    // Account Info Banner\n\n    .account-info-banner {\n        clear: both;\n        background: #d1d1d1;\n        width: 100%;\n        border-top: 1px solid;\n        border-color: #b9b9b9;\n    }\n\n    ul.account-info-text {\n        padding: 5px 50px 5px 12px;\n        overflow: hidden;\n        li {\n            float: left;\n            padding-right: 40px;\n            .label {\n                color: #797979;\n                text-shadow: 0 1px #efefef;\n                font-size: 9px;\n            }\n            .account-data {\n                color: #505050;\n                font-size: 18px;\n                font-weight: 300;\n                .field-select {\n                    width: 140px;\n                    &:before { // background behind arrow\n                        background: #959595;\n                        top: 4px;\n                        height: 80%;\n                    }\n                    &:after { // arrow color\n                        color: #6c6c6c;\n                    }\n                }\n                select {\n                    font-size: 12px;\n                    background: #959595; // select box background\n                    border: 1px solid #6c6c6c;\n                    color: @white;\n                }\n            }\n            .msg-warn {\n                color: #cb2124;\n            }\n            .msg-info {\n                color: #dd7800;\n            }\n        }\n        li.badges {\n            float: right;\n            padding: 0;\n            .account-info-badge {\n                .tooltip {\n                    width: 150px;\n                }\n                img {\n                    width: 35px;\n                    float: left;\n                    margin: 5px 2px;\n                }\n            }\n        }\n    }\n\n    ul.account-info-badges {\n        overflow: hidden;\n    }\n}\n",
            "midway": "var rxAccountInfoPage = encore.rxAccountInfo;\nvar notifications = encore.rxNotify;\nvar expect = require('chai').use(require('chai-as-promised')).expect;\n\ndescribe('rxAccountInfo', function () {\n    var rxAccountInfo;\n\n    before(function () {\n        demoPage.go('#/components/rxAccountInfo');\n        rxAccountInfo = rxAccountInfoPage.initialize($('.demo-working-account rx-account-info'));\n    });\n\n    it('should show element', function () {\n        expect(rxAccountInfo.isDisplayed()).to.eventually.be.true;\n    });\n\n    it('should show the account name', function () {\n        expect(rxAccountInfo.name).to.eventually.equal('Mosso');\n    });\n\n    it('should show the account number', function () {\n        expect(rxAccountInfo.number).to.eventually.equal('12345');\n    });\n\n    it('should show the account access policy', function () {\n        expect(rxAccountInfo.accessPolicy).to.eventually.equal('Full');\n    });\n\n    describe('badges', function () {\n        var badgeNames = ['Creative Commons', 'Attribution', 'Non-Commercial', 'Public Domain'];\n\n        it('should have four badges on the first Account Info box', function () {\n            expect(rxAccountInfo.badge.count()).to.eventually.equal(4);\n        });\n\n        it('should have the correct first badge src via byIndex', function () {\n            var src = 'http://mirrors.creativecommons.org/presskit/icons/cc.large.png';\n            expect(rxAccountInfo.badge.byIndex(0).src).to.eventually.equal(src);\n        });\n\n        it('should have badge names', function () {\n            expect(rxAccountInfo.badge.names).to.eventually.eql(badgeNames);\n        });\n\n        it('should have the right name on the last badge', function () {\n            expect(rxAccountInfo.badge.byIndex(-1).name).to.eventually.equal('Public Domain');\n        });\n\n        it('should have the right description on the last badge', function () {\n            var description = 'Waives as many rights as legally possible, worldwide.';\n            expect(rxAccountInfo.badge.byIndex(-1).description).to.eventually.equal(description);\n        });\n\n        describe('searching', function () {\n\n            it('should search for just one badge by string for an exact match', function () {\n                expect(rxAccountInfo.badge.byName('Attribution').name).to.eventually.equal('Attribution');\n            });\n\n            it('should report that a badge exists', function () {\n                expect(rxAccountInfo.badge.exists('Non-Commercial')).to.eventually.be.true;\n            });\n\n            it('should report that a badge does not exist', function () {\n                expect(rxAccountInfo.badge.exists('Caveat Emptor')).to.eventually.be.false;\n            });\n\n            it('should search for many badges with a regular expression', function () {\n                rxAccountInfo.badges.matchingName(/\\w\\s\\w/).then(function (twoWordBadges) {\n                    expect(twoWordBadges[0].name).to.eventually.equal('Creative Commons');\n                    expect(twoWordBadges[1].name).to.eventually.equal('Public Domain');\n                });\n            });\n\n        });\n\n    });\n\n    var statuses = rxAccountInfoPage.statuses;\n    var statusTypes = rxAccountInfoPage.statusTypes;\n    describe('account with warning status type', function () {\n        var warningAccount;\n\n        before(function () {\n            warningAccount = rxAccountInfoPage.initialize($('.delinquent-account rx-account-info'));\n        });\n\n        it('should have a name', function () {\n            expect(warningAccount.name).to.eventually.equal('DelinquentAccount');\n        });\n\n        it('should have a deliquent status', function () {\n            expect(warningAccount.status).to.eventually.equal(statuses.delinquent);\n        });\n\n        it('should have a warning type', function () {\n            expect(warningAccount.statusType).to.eventually.equal(statusTypes.warning);\n        });\n\n    });\n\n    describe('account with info status type', function () {\n        var infoAccount;\n\n        before(function () {\n            infoAccount = rxAccountInfoPage.initialize($('.unverified-account rx-account-info'));\n        });\n\n        it('should have a name', function () {\n            expect(infoAccount.name).to.eventually.equal('UnverifiedAccount');\n        });\n\n        it('should have a deliquent status', function () {\n            expect(infoAccount.status).to.eventually.equal(statuses.unverified);\n        });\n\n        it('should have a warning type', function () {\n            expect(infoAccount.statusType).to.eventually.equal(statusTypes.info);\n        });\n\n    });\n\n    describe('error messages', function () {\n\n        it('should show an error notification when it cannot load badges', function () {\n            var errorMessage = 'Error retrieving badges for this account';\n            expect(notifications.byStack('badgeError').exists(errorMessage)).to.eventually.be.true;\n        });\n\n        it('should show an error notification when it cannot load account name', function () {\n            var errorMessage = 'Error retrieving account name';\n            expect(notifications.byStack('nameError').exists(errorMessage)).to.eventually.be.true;\n        });\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxActionMenu",
        "moduleName": "'encore.ui.rxActionMenu'",
        "displayName": "Rx Action Menu",
        "srcFiles": [
            "src/rxActionMenu/rxActionMenu.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxActionMenu/templates/rxActionMenu.html"
        ],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 28, 2015 @ 11:12 (UTC-0500)",
        "rawLastModified": "2015-10-28 11:12:56 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>A component to create a configurable action menu.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxActionMenuCtrl', function ($scope, rxNotify) {\n    $scope.add = function () {\n        rxNotify.add('Added!', {\n            type: 'success',\n            repeat: false,\n            timeout: 3\n        });\n    };\n\n    $scope.remove = function () {\n        rxNotify.add('Deleted!', {\n            type: 'error',\n            repeat: false,\n            timeout: 3\n        });\n    };\n});\n",
            "html": "<div>\n    <p>The cog in the first row is dismissable by clicking anywhere, but the second cog can only be dismissed\n    by clicking on the cog itself.\n    </p>\n\n    <h3 id=\"typical-usage\">Typical Usage</h3>\n    <table>\n        <thead>\n            <tr>\n                <th>\n                    Name\n                </th>\n                <th>\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>Globally dismissible</td>\n                <td>\n                    <rx-action-menu id=\"globalDismissal\">\n                        <ul class=\"actions-area\">\n                            <li>\n                                <rx-modal-action\n                                    template-url=\"addActionTemplate.html\"\n                                    classes=\"msg-action\">\n                                    <i class=\"fa fa-plus fa-lg\"></i> Add\n                                </rx-modal-action>\n                            </li>\n                            <li>\n                                <rx-modal-action\n                                    template-url=\"deleteActionTemplate.html\"\n                                    classes=\"msg-warn\">\n                                    <i class=\"fa fa-times fa-lg\"></i> Delete\n                                </rx-modal-action>\n                            </li>\n                        </ul>\n                    </rx-action-menu>\n                </td>\n            </tr>\n            <tr>\n                <td>Only dismissible by clicking on cog</td>\n                <td>\n                    <rx-action-menu global-dismiss=\"false\">\n                        <ul class=\"actions-area\">\n                            <li>\n                                <rx-modal-action\n                                    template-url=\"addActionTemplate.html\"\n                                    classes=\"msg-action\">\n                                    <i class=\"fa fa-plus fa-lg\"></i> Add\n                                </rx-modal-action>\n                            </li>\n                            <li>\n                                <rx-modal-action\n                                    template-url=\"deleteActionTemplate.html\"\n                                    classes=\"msg-warn\">\n                                    <i class=\"fa fa-times fa-lg\"></i> Delete\n                                </rx-modal-action>\n                            </li>\n                        </ul>\n                    </rx-action-menu>\n                </td>\n            </tr>\n                <td>Unorthodox Behaviors (no modals, hidden item)</td>\n                <td ng-controller=\"rxActionMenuCtrl\">\n                    <rx-action-menu id=\"custom\">\n                        <ul class=\"actions-area\">\n                            <li>\n                              <button class=\"btn-link trigger\" ng-click=\"add()\">\n                                  <span class=\"msg-action\"><i class=\"fa fa-plus fa-lg\"></i> Add</span>\n                              </button>\n                            </li>\n                            <li>\n                              <button class=\"btn-link trigger\" ng-click=\"remove()\">\n                                  <span class=\"msg-warn\"><i class=\"fa fa-times fa-lg\"></i> Delete</span>\n                              </button>\n                            </li>\n                            <li ng-show=\"false\">\n                              <button class=\"btn-link trigger\">\n                                  <span class=\"msg-warn\"><i class=\"fa fa-times fa-lg\"></i> Visually Hidden</span>\n                              </button>\n                            </li>\n                        </ul>\n                    </rx-action-menu>\n                </td>\n        </tbody>\n    </table>\n\n    <script type=\"text/ng-template\" id=\"deleteActionTemplate.html\">\n        <rx-modal-form title=\"Delete Action\" submit-text=\"Delete\">\n            <span>Do you want to delete something?</span>\n        </rx-modal-form>\n    </script>\n    <script type=\"text/ng-template\" id=\"addActionTemplate.html\">\n        <rx-modal-form title=\"Add Action\" submit-text=\"Add\">\n            <span>Do you want to add something?</span>\n        </rx-modal-form>\n    </script>\n</div>\n",
            "less": "@import \"vars\";\n\n// containers for actionmenus that spawn modals\n.action-menu-container {\n    position: relative;\n    width: 15px;\n    & > i {\n        cursor: pointer;\n        color: @subduedText;\n        &:hover {\n            color: @subduedTextHover;\n        }\n    }\n}\n\n.actions-area {\n    font-size: 115%;\n    line-height: 2em;\n}\n\n.action-list-hideable {\n    float: left;\n    z-index: 99;\n    position: absolute;\n    top: -10px;\n    right: 15px;\n    min-width: 20em;\n    font-size: 0.9em;\n    border: 4px solid @white;\n    .border-radius(4px);\n    background: @white;\n    text-shadow: rgba(0, 0, 0, 0.09) 1px 1px 1px;\n    box-shadow: rgba(0, 0, 0, 0.35) 1px 1px 4px 0px;\n    padding: 6px;\n\n    &:before {\n        content: \"\\f0da\";\n        text-shadow: rgba(0, 0, 0, 0.35) 1px 1px 1px;\n        font-family: FontAwesome;\n        text-decoration: inherit;\n        color: @white;\n        font-size: 24px;\n        display: block;\n        left: 249px;\n        position: absolute;\n        top: 0;\n        width: 0;\n        z-index: 1;\n    }\n\n    i {\n        margin-right: 5px;\n    }\n}\n\n.action-list {\n    float: right;\n}\n",
            "midway": "var Page = require('astrolabe').Page;\n\nvar actionMenu = encore.rxActionMenu;\nvar rxForm = encore.rxForm;\nvar notifications = encore.rxNotify;\n\ndescribe('rxActionMenu', function () {\n    var globalDismiss, localDismiss, customActions;\n    var customActionMenuItem = function (actionElement) {\n        return Page.create({\n\n            triggerNotification: {\n                value: function () {\n                    rxForm.slowClick(actionElement.$('.trigger'));\n                }\n            }\n\n        });\n    };\n\n    var clickSomewhereElse = function () {\n        $('#typical-usage').click();\n    };\n\n    before(function () {\n        demoPage.go('#/components/rxActionMenu');\n        globalDismiss = actionMenu.initialize($('rx-action-menu#globalDismissal'));\n        localDismiss = actionMenu.initialize($('rx-action-menu[global-dismiss=\"false\"]'));\n        customActions = actionMenu.initialize($('rx-action-menu#custom'), customActionMenuItem);\n    });\n\n    it('should be collapsed by default', function () {\n        expect(globalDismiss.isExpanded()).to.eventually.be.false;\n    });\n\n    it('should expand', function () {\n        globalDismiss.expand();\n        expect(globalDismiss.isExpanded()).to.eventually.be.true;\n    });\n\n    it('should also collapse', function () {\n        globalDismiss.collapse();\n        expect(globalDismiss.isExpanded()).to.eventually.be.false;\n    });\n\n    it('should support global dismiss', function () {\n        globalDismiss.expand();\n        clickSomewhereElse();\n        expect(globalDismiss.isExpanded()).to.eventually.be.false;\n    });\n\n    it('should not globally dismiss if unsupported', function () {\n        localDismiss.expand();\n        clickSomewhereElse();\n        expect(localDismiss.isExpanded()).to.eventually.be.true;\n    });\n\n    it('should only dismiss exactly if supported', function () {\n        localDismiss.collapse();\n        expect(localDismiss.isExpanded()).to.eventually.be.false;\n    });\n\n    it('should find an action that is present and displayed', function () {\n        expect(localDismiss.hasAction('Delete')).to.eventually.be.true;\n    });\n\n    it('should not find an action that is present but not displayed', function () {\n        expect(customActions.hasAction('Visually Hidden')).to.eventually.be.false;\n    });\n\n    it('should not find an action that is neither present nor displayed', function () {\n        expect(localDismiss.hasAction('Non-Existent')).to.eventually.be.false;\n    });\n\n    describe('default action menu items', function () {\n        var actionItem;\n\n        before(function () {\n            actionItem = globalDismiss.action('Add');\n        });\n\n        it('should have two items', function () {\n            expect(globalDismiss.actionCount()).to.eventually.equal(2);\n        });\n\n        it('should have a root element', function () {\n            expect(actionItem.rootElement).to.exist;\n        });\n\n        it('should have text', function () {\n            expect(actionItem.text).to.eventually.equal('Add');\n        });\n\n        it('should include custom functionality for a modal', function () {\n            var modal = actionItem.openModal({});\n            expect(modal.title).to.eventually.equal('Add Action');\n            modal.cancel();\n        });\n\n    });\n\n    describe('custom action menu items', function () {\n        var actionItem;\n\n        before(function () {\n            actionItem = customActions.action('Delete');\n        });\n\n        it('should not have any text', function () {\n            expect(actionItem.text).to.not.exist;\n        });\n\n        it('should not have a root element', function () {\n            expect(actionItem.rootElement).to.not.exist;\n        });\n\n        it('should offer custom functionality', function () {\n            actionItem.triggerNotification();\n            expect(notifications.all.count()).to.eventually.equal(1);\n        });\n\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxActiveUrl",
        "moduleName": "'encore.ui.rxActiveUrl'",
        "displayName": "Rx Active Url",
        "srcFiles": [
            "src/rxActiveUrl/rxActiveUrl.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxActiveUrl/templates/rxActiveUrl.html"
        ],
        "dependencies": [],
        "stability": "deprecated",
        "lastModified": "Sep 21, 2015 @ 13:38 (UTC-0500)",
        "rawLastModified": "2015-09-21 13:38:25 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/hughsk/stability-badges\"><img src=\"http://hughsk.github.io/stability-badges/dist/deprecated.svg\" alt=\"deprecated\"></a></p>\n<p>Adds a class name of &#39;selected&#39; to an LI if the current url matches a pre-defined value</p>\n<p><strong>THIS COMPONENT IS MARKED TO BE REMOVED IN A FUTURE RELEASE.</strong></p>\n",
            "js": "",
            "html": "<ul>\n    <rx-active-url url=\"/servers\">\n        <a href=\"/servers\">Servers</a>\n    </rx-active-url>\n    <rx-active-url url=\"/cbs\">\n        <a href=\"/cbs\">Storage</a>\n        <ul>\n            <rx-active-url url=\"/cbs/volumes\">\n                <a href=\"/cbs/volumes/\">Volumes</a>\n            </rx-active-url>\n            <rx-active-url url=\"/cbs/snapshots\">\n                <a href=\"/cbs/snapshots/\">Snapshots</a>\n            </rx-active-url>\n        </ul>\n    </rx-active-url>\n</ul>",
            "less": "",
            "midway": "// Midway tests for the example/demo component page go here\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxAge",
        "moduleName": "'encore.ui.rxAge'",
        "displayName": "Rx Age",
        "srcFiles": [
            "src/rxAge/rxAge.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 19, 2015 @ 16:58 (UTC-0500)",
        "rawLastModified": "2015-10-19 16:58:15 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p><code>rxAge</code> provides several filters to parse dates.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxAgeCtrl', function ($scope) {\n    var day = 1000 * 60 * 60 * 24;\n    $scope.ageHours = new Date((Date.now() - (day / 2.3))).toString();\n    $scope.ageDays = new Date((Date.now() - (day * 1.5))).toString();\n    $scope.ageMonths = new Date((Date.now() - (day * 40.2))).toString();\n    $scope.ageYears = new Date((Date.now() - (day * 380.1))).toString();\n});\n",
            "html": "<div ng-controller=\"rxAgeCtrl\">\n    <ul>\n        <li>{{ageHours}} &rarr; {{ageHours | rxAge}}</li>\n        <li>{{ageDays}} &rarr; {{ageDays | rxAge}}</li>\n        <li>{{ageMonths}} &rarr; {{ageMonths | rxAge}}</li>\n        <li>{{ageYears}} &rarr; {{ageYears | rxAge}}</li>\n        <li>{{ageHours}} &rarr; {{ageHours | rxAge:true}}</li>\n        <li>{{ageDays}} &rarr; {{ageDays | rxAge:true}}</li>\n        <li>{{ageMonths}} &rarr; {{ageMonths | rxAge:true}}</li>\n        <li>{{ageYears}} &rarr; {{ageYears | rxAge:true}}</li>\n        <li>{{ageHours}} &rarr; {{ageHours | rxAge:1:true}}</li>\n        <li>{{ageDays}} &rarr; {{ageDays | rxAge:2:true}}</li>\n        <li>{{ageMonths}} &rarr; {{ageMonths | rxAge:3:true}}</li>\n        <li>{{ageYears}} &rarr; {{ageYears | rxAge:3:true}}</li>\n    </ul>\n</div>\n",
            "less": "",
            "midway": "var _ = require('lodash');\nvar moment = require('moment');\n\nvar rxAge = encore.rxAge;\n\ndescribe('rxAge', function () {\n    var momentsTable, isoString;\n    var oneHour = 1000 * 60 * 60;\n    var ageStrings = [\n        '10h 26m',\n        '1d 12h',\n        '40d 4h',\n        '380d 2h',\n        '10 hours, 26 minutes',\n        '1 day, 12 hours',\n        '40 days, 4 hours',\n        '380 days, 2 hours',\n        '10 hours',\n        '1 day, 12 hours',\n        '40 days, 4 hours, 48 minutes',\n        '380 days, 2 hours, 24 minutes'\n    ];\n\n    before(function () {\n        demoPage.go('#/components/rxAge');\n        momentsTable = $$('.component-demo ul li');\n    });\n\n    _.forEach(ageStrings, function (testData, index) {\n        it('should still have ' + testData + ' as test data on the page', function () {\n            momentsTable.get(index).getText().then(function (text) {\n                var onPage = text.split('→')[1].trim();\n                expect(onPage).to.equal(testData);\n            });\n        });\n\n        it('should convert ' + testData + ' accurate within the hour', function () {\n            momentsTable.get(index).getText().then(function (text) {\n                isoString = new Date(text.split('→')[0].trim());\n                expect(rxAge.toMoment(testData).valueOf()).to.be.closeTo(moment(isoString).valueOf(), oneHour);\n            });\n        });\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxApp",
        "moduleName": "'encore.ui.rxApp'",
        "displayName": "Rx App",
        "srcFiles": [
            "src/rxApp/rxApp.module.js",
            "src/rxApp/scripts/encoreRoutes.js",
            "src/rxApp/scripts/rxAccountSearch.js",
            "src/rxApp/scripts/rxAccountUsers.js",
            "src/rxApp/scripts/rxApp.js",
            "src/rxApp/scripts/rxAppNav.js",
            "src/rxApp/scripts/rxAppNavItem.js",
            "src/rxApp/scripts/rxAppSearch.js",
            "src/rxApp/scripts/rxAtlasSearch.js",
            "src/rxApp/scripts/rxBillingSearch.js",
            "src/rxApp/scripts/rxHideIfUkAccount.js",
            "src/rxApp/scripts/rxPage.js",
            "src/rxApp/scripts/rxStatusTag.js",
            "src/rxApp/scripts/rxStatusTags.js",
            "src/rxApp/scripts/rxTicketSearch.js",
            "src/rxApp/scripts/rxVisibility.js",
            "src/rxApp/scripts/rxVisibilityPathParams.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxApp/templates/rxAccountSearch.html",
            "templates/rxApp/templates/rxAccountUsers.html",
            "templates/rxApp/templates/rxApp.html",
            "templates/rxApp/templates/rxAppNav.html",
            "templates/rxApp/templates/rxAppNavItem.html",
            "templates/rxApp/templates/rxAppSearch.html",
            "templates/rxApp/templates/rxBillingSearch.html",
            "templates/rxApp/templates/rxPage.html"
        ],
        "dependencies": [
            "rxAppRoutes",
            "rxEnvironment",
            "rxLocalStorage",
            "rxPermission",
            "rxSession",
            "rxLocalStorage"
        ],
        "stability": "unstable",
        "lastModified": "Oct 27, 2015 @ 15:31 (UTC-0500)",
        "rawLastModified": "2015-10-27 15:31:07 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This component is responsible for creating the HTML necessary for a common Encore layout. It builds out the main navigation, plus breadcrumbs and page titles.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxAppCtrl', function ($scope, $location, $rootScope, $window, encoreRoutes, rxVisibility) {\n    $scope.subtitle = 'With a subtitle';\n\n    $scope.changeSubtitle = function () {\n        $scope.subtitle = 'With a new subtitle at ' + Date.now();\n    };\n\n    rxVisibility.addMethod(\n        'isUserDefined',\n        function (scope, locals) {\n            return !_.isEmpty($rootScope.user);\n        }\n    );\n\n    $scope.changeRoutes = function () {\n        var newRoute = {\n            linkText: 'Updated Route',\n            childVisibility: 'true',\n            children: [\n                {\n                    linkText: 'New child route'\n                }\n            ]\n        };\n\n        encoreRoutes.setRouteByKey('accountLvlTools', newRoute);\n    };\n\n    // Fake navigation\n    var customApp = document.getElementById('custom-rxApp');\n    customApp.addEventListener('click', function (ev) {\n        var target = ev.target;\n\n        if (target.className.indexOf('item-link') > -1) {\n            // prevent the default jump to top\n            ev.preventDefault();\n\n            var href = target.getAttribute('href');\n\n            // update angular location (if href has a value)\n            if (!_.isEmpty(href)) {\n                // we need to prevent the window from scrolling (the demo does this)\n                // so we get the current scrollTop position\n                // and set it after the demo page has run '$routeChangeSuccess'\n                var currentScollTop = document.body.scrollTop;\n\n                $location.hash(href);\n\n                $rootScope.$apply();\n\n                $window.scrollTo(0, currentScollTop);\n            }\n        }\n    });\n\n    var searchDirective = 'rx-app-search placeholder=\"Enter User\" model=\"$root.user\" pattern=\"/^([0-9a-zA-Z._ -]{2,})$/\"';\n\n    $scope.customMenu = [{\n        title: 'Example Menu',\n        children: [\n            {\n                href: 'Lvl1-1',\n                linkText: '1st Order Item'\n            },\n            {\n                linkText: '1st Order Item (w/o href) w/ Children',\n                childVisibility: [ 'isUserDefined' ],\n                childHeader: '<strong class=\"current-search\">Current User:</strong>' +\n                             '<span class=\"current-result\">{{$root.user}}</span>',\n                directive: searchDirective,\n                children: [\n                    {\n                        href: 'Lvl1-2-Lvl2-1',\n                        linkText: '2nd Order Item w/ Children',\n                        children: [{\n                            href: 'Lvl1-2-Lvl2-1-Lvl3-1',\n                            linkText: '3rd Order Item'\n                        }]\n                    },\n                    {\n                        href: 'Lvl1-2-Lvl2-2',\n                        linkText: '2nd Order Item w/ Children',\n                        children: [\n                            {\n                                href: 'Lvl1-2-Lvl2-2-Lvl3-1',\n                                linkText: '3rd Order Item'\n                            },\n                            {\n                                href: 'Lvl1-2-Lvl2-2-Lvl3-2',\n                                linkText: '3rd Order Item'\n                            },\n                            {\n                                href: 'Lvl1-2-Lvl2-2-Lvl3-3',\n                                linkText: '3rd Order Item'\n                            },\n                            {\n                                href: 'Lvl1-2-Lvl2-2-Lvl3-4',\n                                linkText: '3rd Order Item'\n                            }\n                        ]\n                    },\n                    {\n                        href: 'Lvl1-2-Lvl2-3',\n                        linkText: '2nd Order Item'\n                    }\n                ]\n            },\n            {\n                href: 'Lvl1-3',\n                linkText: '1st Order Item w/ Children',\n                children: [\n                    {\n                        href: 'Lvl1-3-Lvl2-1',\n                        linkText: '2nd Order Item'\n                    }\n                ]\n            }\n        ]\n    }];\n});\n",
            "html": "<div ng-controller=\"rxAppCtrl\">\n    <h3>Standard rxApp</h3>\n    <rx-app id=\"standard-rxApp\">\n        <rx-page title=\"'Standard Page Title'\">\n            <p class=\"clear\">This is my page content</p>\n            <button ng-click=\"changeRoutes()\" class=\"button\">Change Routes</button>\n        </rx-page>\n    </rx-app>\n\n    <h3>Customized rxApp (collapsible)</h3>\n    <rx-app collapsible-nav=\"true\" site-title=\"My App\" id=\"custom-rxApp\" menu=\"customMenu\" new-instance=\"true\" hide-feedback=\"true\">\n    <rx-page unsafe-html-title=\"'Customized Page <a href=&quot;http://rackspace.com&quot;>Title</a>'\" subtitle=\"subtitle\" status=\"alpha\"\n        account-number=\"12345\">\n            <p class=\"clear\">Click a link in the menu to see the active state change</p>\n            <p>Click the toggle to hide the menu</p>\n            <button ng-click=\"changeSubtitle()\" class=\"changeSubtitle button\">Change Subtitle</button>\n        </rx-page>\n    </rx-app>\n</div>\n\n<!--\nYou'll likely want to implement your HTML in your index.html file as:\n<div ng-app=\"sampleApp\">\n    <rx-app ng-view></rx-app>\n</div>\n\nAnd the template for each view/page will be something like:\n<rx-page title=\"'Example Page'\">\n    Example content\n</rx-page>\n-->\n",
            "less": "/*\n * Common\n */\n@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,100,100italic,300,300italic,400italic,700,700italic\");\n@import url(\"https://fonts.googleapis.com/css?family=Roboto+Mono:400,100,100italic,300,300italic,400italic,700,700italic\");\n@import \"vars\";\n@import (inline) \"normalize.css\";\n\n// Resets for HTML elements\nhtml,\nbody {\n    height: 100%;\n    font-size: @appFontSize;\n    color: @appTextColor;\n    font-family: @appFont;\n}\n\n// Resets for form inputs\ninput,\ntextarea,\nselect {\n    box-shadow: none;\n}\n\n// Set default font\nbutton,\ninput,\nselect,\n.pure-g [class *= \"pure-u\"],\n.pure-g-r [class *= \"pure-u\"] {\n    font-family: @appFont;\n}\n\n// Remove default margin/padding/etc\nheader,\nnav,\nol,\nul,\nli,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nfieldset {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n}\n\n// No list styles for lists\nol,\nul,\nli {\n    list-style: none;\n}\n\n// We want a little bit more line-spacing in paragraphs\np {\n    line-height: @appLineHeight;\n}\n\n// Link Styles\na {\n    text-decoration: none;\n    color: @linkColor;\n}\na:hover,\na:focus {\n    text-decoration: underline;\n    color: @linkColorHover;\n}\n\n// Table Styles\ntable {\n    clear: both;\n    width: 100%;\n    padding: 0;\n    margin: 0;\n    border-collapse: collapse;\n    td,\n    th {\n        border: 1px solid @tableBorder;\n        padding: @tableCellPadding;\n        color: @tableCellText;\n    }\n    thead th {\n        text-align: left;\n        background: @tableHeaderBg;\n        color: @tableHeaderText;\n        border: 1px solid @tableHeaderBorder;\n        &.actions {\n            width: 15px;\n        }\n    }\n    tr {\n        background: @tableBg;\n    }\n    &.table-striped {\n        tr:nth-child(even),\n        tbody:nth-child(odd) > tr {\n            background: @tableBgAlt;\n        }\n    }\n    td.double-chevron-cell {\n        width: 10px;\n        padding: 0 10px;\n        .double-chevron {\n            cursor: pointer;\n            &::after {\n                display: inline-block;\n                color: @subduedText;\n                font-size: 20px;\n                .chevron-mixin;\n            }\n        }\n    }\n    td.expanded {\n        background-color: @subtableBorder;\n        border-bottom-color: @subtableBorder;\n        .double-chevron::after {\n            color: @white;\n            .chevron-mixin(-1);\n        }\n    }\n    .fa-times.delete-x:hover {\n        color: @warnRedHover;\n        cursor: pointer;\n    }\n}\n\n.expanded-container {\n    padding: 0 3px 3px 3px;\n    background-color: @subtableBorder;\n\n    & > * {\n        margin-left: 2%;\n        width: 98%;\n    }\n\n    table.subtable {\n        table-layout: fixed;\n\n        th:first-child {\n            border-left-width: 0;\n        }\n\n        th:last-child {\n            border-right-width: 0;\n        }\n\n        th {\n            border-color: darken(@subtableBorder, 15%);\n            background-color: @subtableBorder;\n            border-top: 0;\n            border-bottom: 0;\n        }\n    }\n    .expanded-content {\n        background-color: @white;\n        margin-top: 3px;\n        .metadata {\n            padding: 5px 10px;\n        }\n    }\n}\n\n/* ===== HEADINGS ===== */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    margin: 1em 0;\n\n    &.subdued {\n        color: @subduedTitle;\n    }\n}\n\nh1 {\n    // same as .title.xl\n    font-size: 28px;\n}\nh2 {\n    // same as .title.lg\n    font-size: 22px;\n}\nh3 {\n    // same as .title\n    font-size: 18px;\n}\nh4 {\n    // same as .title.sm\n    font-size: 16px;\n}\nh5 {\n    // same as .title.xs\n    font-size: 13px;\n}\nh6 {\n    // no legacy equivalent\n    font-size: 10px;\n}\n\n// Heading/Title Styles\n.title {\n    margin: 1em 0;\n\n    // Sizing\n    &.xl { // h1\n        font-size: 28px;\n    }\n    &.lg { // h2\n        font-size: 22px;\n    }\n    & { // h3\n        font-size: 18px;\n    }\n    &.sm { // h4\n        font-size: 16px;\n    }\n    &.xs { // h5\n        font-size: 13px;\n    }\n\n    // Colors\n    &.subdued {\n        color: @subduedTitle;\n    }\n}//.title\n\n// Statuses\n.link-action,\n.link-action a,\n.link-warn,\n.link-warn a {\n    font-size: 1.2em;\n    cursor: pointer;\n}\n\n.link-action:before,\n.link-action a:before {\n    content: \"+ \";\n}\n\n.link-warn:before,\n.link-warn a:before {\n    content: \"- \";\n}\n\n.action-separator {\n    font-size: 1.1em;\n    color: @subduedText;\n}\n\n.msg-action,\n.msg-action a {\n    color: @actionGreen;\n    &:hover,\n    &:focus {\n        color: @actionGreen;\n    }\n}\n\n.msg-warn,\n.msg-warn a {\n    color: @warnRed;\n    &:hover,\n    &:focus {\n        color: @warnRedHover;\n    }\n}\n\n.msg-info,\n.msg-info a {\n    color: @infoOrange;\n    &:hover,\n    &:focus {\n        color: @infoOrangeHover;\n    }\n}\n\n.msg-info-blue,\n.msg-info-blue a {\n    color: @infoBlue;\n    &:hover,\n    &:focus {\n        color: @infoBlueHover;\n    }\n}\n\n// Lists\n.list {\n    li,\n    .item {\n        display: list-item;\n        margin: 5px 0 0 30px;\n    }\n\n    ul&,\n    &.bulleted {\n        li,\n        .item {\n            list-style: disc;\n        }\n    }\n\n    ol&,\n    &.decimal {\n        li,\n        .item {\n            list-style: decimal;\n        }\n    }\n}\n\n// Wells\n.well {\n    background: #eeeeee;\n    padding: 40px 50px;\n    box-shadow: 0 0 0 10px white inset;\n\n    p {\n        line-height: 1.5em;\n        color: @wellText;\n    }\n\n    ul {\n        display: inline-block;\n        text-align: left;\n    }\n}\n\n.modal-well {\n    background-color: #eeeeee;\n    padding: 20px 30px;\n\n    h2 {\n        font-size: 14px;\n    }\n}\n\n// Other Stuff\n.subdued {\n    color: @subduedText;\n}\n\n// Add hover style if a link or inside a link\na.subdued:hover,\na.subdued:focus,\na:hover .subdued,\na:focus .subdued {\n    color: @subduedTextHover;\n}\n\n// Hidden content\n.hidden {\n    visibility: hidden;\n}\n\n// Used to hide content visually but let them still be read\n// by screen readers (removed from the page spacing)\n.visually-hidden {\n    position: absolute !important;\n    clip: rect(1px, 1px, 1px, 1px);\n    padding: 0 !important;\n    border: 0 !important;\n    height: 1px !important;\n    width: 1px !important;\n    overflow: hidden;\n}\nbody:hover .visually-hidden a,\nbody:hover .visually-hidden input,\nbody:hover .visually-hidden button {\n    display: none;\n}\n\n// Clearing Floats\n.clearfix:before,\n.clearfix:after {\n    content: \" \"; /* 1 */\n    display: table; /* 2 */\n}\n\n.clearfix:after {\n    clear: both;\n}\n\n// Clearing siblings\n.clear {\n    clear: both;\n}\n.clear-left {\n    clear: left;\n}\n.clear-right {\n    clear: right;\n}\n\n// Marks content as full width (e.g. to give a button full width).\n// Requires 'display' to be defined as `inline-block` or `block`\n.full-width {\n    width: 100%;\n}\n\n// Center content\n// Requires 'display' to be defined as `inline-block` or `block`\n.centered {\n    text-align: center;\n}\n\n\n/*\n * PLACEHOLDER TEXT STYLING\n * https://css-tricks.com/snippets/css/style-placeholder-text/\n */\n::-webkit-input-placeholder { // Chrome\n    color: @inputPlaceholderColor;\n    font-weight: 300;\n    font-style: italic;\n}\n::-moz-placeholder { // Firefox 19+\n    color: @inputPlaceholderColor;\n    font-weight: 400;\n    font-style: italic;\n}\n\n//DEPRECATED: A \"filter\" style rxSearchBox\n.filter-box {\n    font-style: italic;\n}\n\n@import 'vars';\n@import 'mixins';\n\n.rx-app {\n    @navTransitionDuration: .2s;\n    @appMenuWidth: 300px;\n\n    min-height: 100%;\n    display: flex;\n    flex-direction: row;\n    background: @appBg;\n\n    .rx-app-content {\n        flex: 1 1 0;\n    }\n\n    .rx-app-menu {\n        flex: 0 0 @appMenuWidth;\n        color: #fff;\n        font-size: 15px;\n        font-weight: 300;\n        background: @appMenuBg;\n        line-height: @appLineHeight;\n        padding-bottom: 10em;\n        position: relative;\n\n        .site-title,\n        .nav-section-title {\n            margin: 0;\n            font-size: inherit;\n        }\n    }\n\n    .site-branding {\n        border-top: 1px solid #074285;\n        border-bottom: 1px solid #052953;\n        padding: 5px 20px;\n        overflow: hidden;\n        background: @siteBrandingBg;\n        position: relative;\n\n        .site-title {\n            float: left;\n        }\n        .site-options {\n            float: right;\n            font-size: .8em;\n            margin-top: 1px;\n\n            .site-option {\n                color: @menuLinkLightBlue;\n                display: inline-block;\n                margin-left: 1em;\n                &:hover,\n                &:focus {\n                    color: @white;\n                }\n            }\n        }\n\n        .collapsible-toggle {\n            position: absolute;\n            text-align: center;\n            top: 0;\n            bottom: 0;\n            right: 0;\n            width: 2em;\n            border-left: 1px solid #052953;\n            &:hover {\n                background: lighten(@siteBrandingBg, 10%);\n            }\n        }\n\n        .double-chevron {\n            font-size: 20px;\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            right: 0;\n            left: 0;\n\n            &::before {\n                color: @menuLinkLightBlue;\n                content: \"\\00bb\";\n            }\n\n            &.double-chevron-left::before {\n                content: \"\\00ab\";\n            }\n\n            &:hover &::before {\n                color: @white;\n            }\n        }\n    }\n\n    &.collapsible {\n        .site-branding {\n            padding-right: calc(~\"2em + 20px\");\n        }\n    }\n\n    &.collapsed {\n        .rx-app-menu {\n            flex: 0 0 25px;\n            padding-bottom: 0;\n            position: relative;\n        }\n\n        .site-branding,\n        .collapsible-toggle {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            padding: 0;\n            width: 100%;\n        }\n\n        .site-title,\n        .site-options,\n        .rx-app-nav,\n        .rx-app-help {\n            display: none;\n        }\n\n        .page-body {\n            & > .rx-notifications {\n                left: 25px;\n            }\n        }\n    }\n\n    &.warning-bar {\n        position: absolute;\n        margin-top: 3em;\n        width: 100%;\n    }\n\n    &.warning-bar.preprod {\n        .rx-app-menu {\n            background: @preprodBackground;\n        }\n        .rx-app-nav-item {\n            &.active:not(.has-children) > .item-link {\n                border-top-color: @preprodBorderTop;\n            }\n            .item-link {\n                background: @preprodBackground;\n                border-top: 1px solid @preprodBorderTop;\n                border-bottom: 1px solid @preprodBorderBottom;\n                &:hover,\n                &:focus {\n                    background: @preprodBackgroundFocus;\n                    border-top: 1px solid @preprodBorderBottom;\n                    border-bottom: 1px solid @preprodBorderBottom;\n                }\n            }\n\n            // active nav, w/children (double arrow up, gray bg)\n            &.active.has-children > .item-link {\n                border-top-color: @preprodBorderTop;\n                // used to show BG of arrow (because :after is rotated)\n                &:before {\n                    background: @preprodActiveBackground;\n                }\n                .item-content {\n                    border-bottom: 1px solid #000000;\n                }\n            }\n\n            .item-content {\n                background: @preprodActiveBackground;\n            }\n        }\n    }\n\n    .rx-app-nav {\n        clear: both;\n\n        .nav-section {\n            padding-left: 5px;\n        }\n\n        .nav-section-title {\n            padding: 5px 15px;\n            font-size: 13px;\n        }\n\n        .nav-section-all {\n            background: #407610;\n            border-top: 1px solid #568c26;\n        }\n\n        .nav-section-highlight {\n            background: #0951a3;\n            border-top: 1px solid #00408f;\n        }\n\n        .nav-section-no-title {\n            background: transparent;\n            padding: 0;\n            margin: 0;\n\n            & > .nav-section-title {\n                display: none;\n            }\n        }\n    }\n\n    .rx-app-nav-item {\n        clear: both;\n\n        // common nav styles (inactive nav, no children)\n        .item-link {\n            background: #1a1a1a;\n            border-top: 1px solid #333333;\n            border-bottom: 1px solid #000000;\n            padding: 10px 4em 10px 15px;\n            display: block;\n            color: #fff;\n            text-decoration: none;\n            -webkit-transition: background @navTransitionDuration;\n            transition: background @navTransitionDuration;\n            position: relative;\n            &:hover,\n            &:focus {\n                background: #262626;\n                border-top: 1px solid #404040;\n                border-bottom: 1px solid #0d0d0d;\n            }\n            &:before,\n            &:after {\n                content: '';\n                position: absolute;\n            }\n            &:after {\n                -webkit-transition: all @navTransitionDuration;\n                transition: all @navTransitionDuration;\n            }\n        }\n\n        &:not(.has-children) > .item-link:after {\n            right: 0;\n            top: 0;\n            border: transparent solid;\n            border-width: calc(~\"5px + 1em\") 6px;\n            border-right: 0;\n        }\n\n        // active nav, no children (blue bg, arrow right)\n        &.active:not(.has-children) > .item-link {\n            border-color: transparent;\n            background: #0E7FFF;\n            &:after {\n                right: -6px;\n                border-left-color: #0E7FFF;\n            }\n        }\n\n        // inactive nav, w/children (double arrow down)\n        &.has-children > .item-link:after {\n            font-size: 2em;\n            content: \"\\00bb\"; // angle quotation mark, right (&raquo;)\n            -webkit-transform: rotate(90deg) scaleX(1);\n            transform: rotate(90deg) scaleX(1);\n            top: 50%;\n            line-height: 0;\n            right: .45em;\n        }\n\n        // active nav, w/children (double arrow up, gray bg)\n        &.active.has-children > .item-link {\n            border-top-color: #404040;\n            border-bottom-width: 0;\n            // used to show BG of arrow (because :after is rotated)\n            &:before {\n                width: 3em;\n                right: 0;\n                top: 0;\n                bottom: 0;\n                background: #333;\n            }\n            &:after {\n                // flip arrow around\n                -webkit-transform: rotate(90deg) scaleX(-1);\n                transform: rotate(90deg) scaleX(-1);\n            }\n            .item-content {\n                border-bottom: 1px solid #000000;\n            }\n        }\n\n        .item-content {\n            background: #333;\n            padding: 10px;\n        }\n\n        .item-directive:not(.ng-hide) + .item-children {\n            margin-top: 10px;\n        }\n\n        .item-children {\n            padding: 10px;\n            background: #4d4d4c;\n        }\n\n        .child-header {\n            margin-bottom: 1em;\n        }\n\n        .current-search {\n            text-transform: uppercase;\n            font-weight: bold;\n            color: #9c9c9c;\n            font-size: 10px;\n            display: block;\n        }\n        .current-result {\n            color: #d5d5d3;\n            font-size: 18px;\n        }\n\n    }\n\n    .rx-app-nav-level-2 {\n        .item-link {\n            background: #666766;\n            border-top-color: #787878;\n            border-bottom-color: #595959;\n            font-size: 13px;\n\n            &:hover,\n            &:focus {\n                background: #595959;\n                border-top: 1px solid #737373;\n                border-bottom: 1px solid #404040;\n            }\n        }\n        .active:not(.has-children) > .item-link {\n            margin-right: -10px;\n        }\n        .active.has-children > .item-link {\n            background: #1a1a1a;\n            border-color: transparent;\n        }\n\n        .item-content {\n            background: #1a1a1a;\n            padding: 0 0 4px 4px;\n        }\n\n        .item-children {\n            padding: 0;\n        }\n    }\n\n    .rx-app-nav-level-3 .item-link {\n        background: #333333;\n        border-color: transparent;\n        padding: 5px 15px;\n\n        &:hover,\n        &:focus {\n            background: #404040;\n            border-color: transparent;\n        }\n    }\n    .rx-app-nav-level-3 .rx-app-nav-item {\n        &:first-child {\n            border-top: 3px solid #333;\n        }\n        .item-link:after {\n            border-top-width: 1em;\n            border-bottom-width: 1em;\n        }\n    }\n\n    .rx-app-search {\n        position: relative;\n        font-size: 14px;\n        color: #babab9;\n\n        fieldset {\n            position: relative;\n        }\n\n        // NOTE: We have to have this duplication because CSS doesn't like combining the placholder selectors\n        .placeholder() {\n            font-style: italic;\n            text-overflow: ellipsis;\n        }\n\n        ::-webkit-input-placeholder {\n            .placeholder();\n        }\n        ::-moz-placeholder {\n            .placeholder();\n        }\n        :-ms-input-placeholder {\n            .placeholder();\n        }\n\n        .search-input {\n            .box-sizing(border-box);\n            background: #4d4d4c;\n            border: 0;\n            width: 100%;\n            padding: 9px;\n            padding-right: 30px;\n            margin: 0;\n        }\n\n        .search-input.ng-invalid:focus {\n            outline-color: @menuRed;\n        }\n\n        .search-action {\n            position: absolute;\n            top: 0;\n            right: 0;\n            width: 30px;\n            height: 100%;\n            background: url(images/magnifying-glass.png) no-repeat 50% 50%;\n            border: 0;\n            opacity: 0.2;\n        }\n\n        .search-option {\n            margin-top: 10px;\n        }\n    }\n\n    .rx-app-help {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        width: @appMenuWidth;\n        background: @appHelpBg;\n        border-top: 1px solid @appHelpBorder;\n        line-height: 3em;\n        padding-bottom: 1px;\n        font-size: .8em;\n        text-shadow: 1px 1px 0px rgba(26, 26, 26, 0.2);\n\n        .rx-feedback .modal-link {\n            background: url(images/icon-feedback.png) no-repeat 20px calc(~\"50% + 1px\");\n            vertical-align: middle;\n            color: @menuLinkOrange;\n            padding: 0 21px 0 41px;\n            float: right;\n        }\n    }\n\n\n    // Page Styles\n\n    .page-header {\n        background: linear-gradient(to bottom, #e7e7e7 0%, #d6d6d6 100%);\n        border-bottom: 1px solid #bbb;\n    }\n\n    .page-body {\n        padding: 20px 30px 50px;\n        clear: both;\n\n        .page-titles {\n            float: left;\n\n            .page-title {\n                margin: 0;\n                position: relative;\n                word-break: break-all;\n            }\n\n            .page-subtitle {\n                margin-top: 0;\n                word-break: break-all;\n            }\n        }\n\n        & > .rx-notifications {\n            position:fixed;\n            z-index: 20;  // accommodate rxSelect .fake-select class\n            top: 0px;\n            left: 300px;\n            right: 100px;\n            opacity: 0.95;\n            .rx-notification {\n                width: 100%;\n            }\n        }\n\n        .page-actions {\n            float: right;\n            margin: 0 0 2em 2em;\n        }\n    }\n}\n\n.warning-bar.rx-notifications {\n    position: fixed;\n    z-index: 3;\n    width: 100%;\n    margin-bottom: 0;\n}\n\n.status-tag {\n    &.alpha-status, &.beta-status {\n        margin-left: 10px;\n        text-transform: uppercase;\n        font-size: 9px;\n        border: 1px solid;\n        padding: 1px 2px;\n        .border-radius(2px);\n        top: 9px;\n        color: #427fc4;\n    }\n}\n\n/* Disabled link styles */\n.link-disabled {\n    pointer-events: none;\n    a {\n        color: #d5d3d3;\n    }\n    .rx-spinner {\n        margin-left: 10px;\n        border-bottom-color: #d5d3d3;\n        border-right-color: #d5d3d3;\n    }\n}\n\na.disabled {\n    color: #d5d3d3;\n    cursor: default;\n    pointer-events: none;\n    text-decoration: none;\n}\n",
            "midway": "describe('rxApp', function () {\n    var rxAppCustom, rxAppStandard;\n\n    before(function () {\n        demoPage.go('#/components/rxApp');\n        rxAppCustom = encore.rxApp.initialize($('#custom-rxApp'));\n        rxAppStandard = encore.rxApp.initialize($('#standard-rxApp'));\n    });\n\n    it('should show element', function () {\n        expect(rxAppCustom.rootElement.isDisplayed()).to.eventually.be.true;\n    });\n\n    it('should have a title', function () {\n        expect(rxAppCustom.title).to.eventually.equal('My App');\n    });\n\n    it('should have a section title', function () {\n        expect(rxAppCustom.sectionTitle).to.eventually.equal('Example Menu');\n    });\n\n    it('should have the user id in the logout link', function () {\n        browser.addMockModule('encore.ui.rxSession', function () {\n            angular.module('encore.ui.rxSession', []).value('Session', {\n                getUserId: function () { return 'rack0000'; }\n            });\n        });\n        browser.refresh()\n\n        rxAppStandard.userId.then(function (userId) {\n            expect(userId).to.equal('(rack0000)');\n\n            browser.removeMockModule('encore.ui.rxSession');\n            browser.refresh()\n        });\n    });\n\n    it('should logout', function () {\n        rxAppCustom.logout();\n        expect(demoPage.currentUrl).to.eventually.contain('login');\n        demoPage.go('#/components/rxApp');\n    });\n\n    describe('with collapsible navigation', function () {\n        it('should have a collapsible navigation menu', function () {\n            expect(rxAppCustom.isCollapsible()).to.eventually.be.true;\n        });\n\n        it('should be expanded by default', function () {\n            expect(rxAppCustom.isExpanded()).to.eventually.be.true;\n        });\n\n        it('should collapse the navigation', function () {\n            rxAppCustom.collapse();\n            expect(rxAppCustom.isCollapsed()).to.eventually.be.true;\n        });\n\n        it.skip('should expand the navigation', function () {\n            rxAppCustom.expand();\n            expect(rxAppCustom.isExpanded()).to.eventually.be.true;\n        });\n    });\n\n    describe('without collapsible navigation', function () {\n        it('should not support a toggle show/hide button', function () {\n            expect(rxAppStandard.isCollapsible()).to.eventually.be.false;\n        });\n\n        it('should throw an error if you attempt to expand and unsupported', function () {\n            expect(rxAppStandard.expand()).to.be.rejectedWith('Encore');\n        });\n    });\n});\n\ndescribe('rxPage', function () {\n    var standardPage, customPage;\n\n    before(function () {\n        demoPage.go('#/components/rxApp');\n        standardPage = encore.rxPage.initialize($('#standard-rxApp .rx-page'));\n        customPage = encore.rxPage.initialize($('#custom-rxApp .rx-page'));\n    });\n\n    it('should show element', function () {\n        expect(customPage.rootElement.isDisplayed()).to.eventually.eq.true;\n    });\n\n    it('should have a title', function () {\n        expect(standardPage.title).to.eventually.equal('Standard Page Title');\n    });\n\n    it('should return a null if no tag is found', function () {\n        expect(standardPage.titleTag).to.eventually.be.null;\n    });\n\n    it('should return a null if no subtitle is found', function () {\n        expect(standardPage.subtitle).to.eventually.be.null;\n    });\n\n    it('should have a subtitle', function () {\n        expect(customPage.subtitle).to.eventually.equal('With a subtitle');\n    });\n\n    it('should have a custom title', function () {\n        expect(customPage.title).to.eventually.equal('Customized Page Title');\n    });\n\n    it('should have a status tag', function () {\n        expect(customPage.titleTag).to.eventually.equal('ALPHA');\n    });\n\n    it('should update page subtitle dynamically', function () {\n        $('button.changeSubtitle').click();\n        expect(customPage.subtitle).to.eventually.contain('With a new subtitle at 1');\n    });\n\n    describe('main title', function () {\n\n        before(function () {\n            demoPage.go('#/components/configs');\n        });\n\n        it('should grab the main title', function () {\n            expect(encore.rxPage.main.title).to.eventually.equal('configs');\n        });\n\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxAppRoutes",
        "moduleName": "'encore.ui.rxAppRoutes'",
        "displayName": "Rx App Routes",
        "srcFiles": [
            "src/rxAppRoutes/rxAppRoutes.module.js",
            "src/rxAppRoutes/scripts/rxAppRoutes.js",
            "src/rxAppRoutes/scripts/urlUtils.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxEnvironment"
        ],
        "stability": "unstable",
        "lastModified": "Oct 30, 2015 @ 15:15 (UTC-0500)",
        "rawLastModified": "2015-10-30 15:15:48 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>A component to manage app routes and states of routes</p>\n",
            "js": "",
            "html": "",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxAttributes",
        "moduleName": "'encore.ui.rxAttributes'",
        "displayName": "Rx Attributes",
        "srcFiles": [
            "src/rxAttributes/rxAttributes.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Sep 22, 2015 @ 14:18 (UTC-0500)",
        "rawLastModified": "2015-09-22 14:18:44 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This component allows you to add attributes based on a value in scope being defined or not.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxAttributesCtrl', function ($scope) {\n    $scope.customStyles = 'color: red; font-weight: bold;';\n    $scope.customContent = '\"Custom Content\"';\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxAttributesCtrl\">\n    <p><strong>The following content gets replaced by the value of ng-bind. It also gets some styles applied to it:</strong></p>\n    <p rx-attributes=\"{'ng-bind': customContent, 'style': customStyles}\">Content that's replaced</p>\n\n    <p><strong>The following content doesn't get replaced, since 'nothing' isn't a property on the scope:</strong></p>\n    <p rx-attributes=\"{'ng-bind': nothing}\">Non-replaced content</p>\n\n    <p><strong>The following content (you can't see it) does get replaced, but by nothing, since 'nothing' isn't a property on the scope. This is what rx-attributes avoids</strong></p>\n    <p ng-bind=\"nothing\">Content that's unintentionally replaced</p>\n</div>",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxAuth",
        "moduleName": "'encore.ui.rxAuth'",
        "displayName": "Rx Auth",
        "srcFiles": [
            "src/rxAuth/rxAuth.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxIdentity",
            "rxSession",
            "rxLocalStorage",
            "rxPermission",
            "rxSession",
            "rxLocalStorage"
        ],
        "stability": "unstable",
        "lastModified": "Sep 22, 2015 @ 13:25 (UTC-0500)",
        "rawLastModified": "2015-09-22 13:25:36 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The <code>rxAuth</code> component provides logic for authenticating, validating permissions, and managing sessions.</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxAuthCtrl', function ($scope, Auth) {\n    $scope.hasRole = function () {\n        alert('Has \"superhero\" Role? : ' + Auth.hasRole('superhero'));\n    };\n\n    $scope.isAuthenticated = function () {\n        alert('Is Authenticated? : ' + Auth.isAuthenticated());\n    };\n});\n",
            "html": "<div ng-controller=\"rxAuthCtrl\">\n    <button ng-click=\"hasRole()\" class=\"button\">Is a Superhero?</button>\n    <button ng-click=\"isAuthenticated()\" class=\"button\">Is Authenticated?</button>\n</div>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxBreadcrumbs",
        "moduleName": "'encore.ui.rxBreadcrumbs'",
        "displayName": "Rx Breadcrumbs",
        "srcFiles": [
            "src/rxBreadcrumbs/rxBreadcrumbs.module.js",
            "src/rxBreadcrumbs/scripts/rxBreadcrumbs.js",
            "src/rxBreadcrumbs/scripts/rxBreadcrumbsSvc.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxBreadcrumbs/templates/rxBreadcrumbs.html"
        ],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Nov 2, 2015 @ 16:14 (UTC-0600)",
        "rawLastModified": "2015-11-02 16:14:29 -0600",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p><code>rxBreadcrumbs</code> adds or updates page navigation breadcrumbs on a page.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxBreadcrumbsCtrl', function ($scope, rxBreadcrumbsSvc) {\n    rxBreadcrumbsSvc.set([{\n        path: '/',\n        name: 'Components',\n    }, {\n        name: '<strong>All Components</strong>',\n        status: 'demo'\n    }]);\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxBreadcrumbsCtrl\">\n    <nav class=\"site-breadcrumbs clearfix\">\n        <rx-breadcrumbs></rx-breadcrumbs>\n    </nav>\n</div>\n",
            "less": "@import \"vars\";\n\n.rx-breadcrumbs {\n    overflow: hidden;\n    border-style: solid;\n    border-color: #cccccc;\n    float: left;\n\n    .breadcrumb {\n        float: left;\n\n        .breadcrumb-name {\n            padding: @breadcrumbHeight/2 1em @breadcrumbHeight/2 2em;\n            font-size: 0.9em;\n            display: block;\n            color: #555555;\n            position: relative;\n            text-decoration: none;\n            text-shadow: 0 1px 0 rgba(255,255,255,.5);\n            background: #dddddd;\n        }\n        .breadcrumb-name.last {\n            background: transparent;\n        }\n\n        a::after,\n        a::before {\n            content: \"\";\n            position: absolute;\n            top: 50%;\n            margin-top: -@breadcrumbHeight;\n            border: 0 solid transparent;\n            border-width: @breadcrumbHeight 0 @breadcrumbHeight @breadcrumbArrowWidth;\n            right: -@breadcrumbArrowWidth;\n        }\n\n        a::after {\n            /* TODO add in border gradient to match nav background */\n            border-left-color: #dddddd;\n            z-index: 2;\n        }\n        a::before {\n            border-left-color: #cccccc;\n            right: -(@breadcrumbArrowWidth + 1);\n            z-index: 1;\n        }\n\n        .first {\n            padding-left: 1em;\n            background: #c8c8c8;\n        }\n        .first::after {\n            border-left-color: #c8c8c8;\n        }\n\n        a:hover {\n            background: @white;\n        }\n        a:hover::after {\n            border-left-color: @white;\n        }\n    }\n\n    .status-tag {\n        &.alpha-status,\n        &.beta-status {\n            margin-left: 6px;\n            position: static;\n        }\n    }\n\n}\n",
            "midway": "var rxBreadcrumbs = encore.rxBreadcrumbs;\n\ndescribe('rxBreadcrumbs', function () {\n    var breadcrumbs;\n\n    before(function () {\n        demoPage.go('#/components/rxBreadcrumbs');\n        breadcrumbs = rxBreadcrumbs.initialize($('.component-demo rx-breadcrumbs'));\n    });\n\n    it('should show the element', function () {\n        expect(breadcrumbs.rootElement.isDisplayed()).to.eventually.be.true;\n    });\n\n    describe('first breadcrumb', function () {\n        var first;\n\n        before(function () {\n            first = breadcrumbs.byPosition(0);\n        });\n\n        it('should fetch a single breadcrumb by position', function () {\n            expect(first).to.not.be.empty;\n        });\n\n        it('should be the first breadcrumb', function () {\n            expect(first.isFirst()).to.eventually.be.true;\n        });\n\n        it('should not be the last breadcrumb', function () {\n            expect(first.isLast()).to.eventually.be.false;\n        });\n\n        it('should have the name \"Overview\"', function () {\n            expect(first.name).to.eventually.equal('Overview');\n        });\n\n        it('should not have a tag', function () {\n            expect(first.lblTag.isPresent()).to.eventually.be.false;\n        });\n\n        it('should have the href \"/#/overview\"', function () {\n            expect(first.href).to.eventually.equal(browser.baseUrl + '/#/overview');\n        });\n\n    });\n\n    describe('last breadcrumb', function () {\n        var last;\n\n        before(function () {\n            last = breadcrumbs.byPosition(-1);\n        });\n\n        it('should fetch a single breadcrumb by position', function () {\n            expect(last).to.not.be.empty;\n        });\n\n        it('should not be the first breadcrumb', function () {\n            expect(last.isFirst()).to.eventually.be.false;\n        });\n\n        it('should be the last breadcrumb', function () {\n            expect(last.isLast()).to.eventually.be.true;\n        });\n\n        it('should have the name \"All Components\"', function () {\n            expect(last.name).to.eventually.equal('All Components');\n        });\n\n        it('should have a \"DEMO TAG\" tag',  function () {\n            expect(last.lblTag.isPresent()).to.eventually.be.true;\n            expect(last.tag).to.eventually.equal('DEMO TAG');\n        });\n\n        it('should have no href property', function () {\n            expect(last.isLink()).to.eventually.be.false;\n            expect(last.href).to.eventually.be.null;\n        });\n\n    });\n\n    describe('by name', function () {\n        var middle;\n\n        before(function () {\n            middle = breadcrumbs.byName('Components');\n        });\n\n        it('should fetch a single breadcrumb by position', function () {\n            expect(middle).to.not.be.empty;\n        });\n\n        it('should not be the first breadcrumb', function () {\n            expect(middle.isFirst()).to.eventually.be.false;\n        });\n\n        it('should not be the last breadcrumb', function () {\n            expect(middle.isLast()).to.eventually.be.false;\n        });\n\n        it('should have the name \"Components\"', function () {\n            expect(middle.name).to.eventually.equal('Components');\n        });\n\n        it('should not have a tag', function () {\n            expect(middle.tag).to.eventually.be.null;\n            expect(middle.lblTag.isPresent()).to.eventually.be.false;\n        });\n\n        it('should have an href property', function () {\n            expect(middle.isLink()).to.eventually.be.true;\n            expect(middle.href).to.eventually.equal(browser.baseUrl + '/');\n        });\n\n        it('should visit the correct page when clicking on the breadcrumb', function () {\n            var homeHref = browser.baseUrl + '/#/overview';\n\n            middle.visit();\n            expect(browser.getCurrentUrl()).to.eventually.equal(homeHref);\n        });\n        // Note that after this test, we are now at the /#/overview page\n\n    });\n\n    describe('default breadcrumbs', function () {\n        var defaultBreadcrumbs;\n\n        before(function () {\n            demoPage.go('#/components/configs');\n            defaultBreadcrumbs = rxBreadcrumbs.main;\n        });\n\n        it('should find the default breadcrumbs', function () {\n            expect(defaultBreadcrumbs.count()).to.eventually.equal(3);\n        });\n\n        it('should have the correct names', function () {\n            expect(defaultBreadcrumbs.names).to.eventually.eql(['Overview', 'Components', 'configs']);\n        });\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxBulkSelect",
        "moduleName": "'encore.ui.rxBulkSelect'",
        "displayName": "Rx Bulk Select",
        "srcFiles": [
            "src/rxBulkSelect/rxBulkSelect.module.js",
            "src/rxBulkSelect/scripts/NotifyProperties.js",
            "src/rxBulkSelect/scripts/rxBatchActions.js",
            "src/rxBulkSelect/scripts/rxBulkSelect.js",
            "src/rxBulkSelect/scripts/rxBulkSelectController.js",
            "src/rxBulkSelect/scripts/rxBulkSelectHeaderCheck.js",
            "src/rxBulkSelect/scripts/rxBulkSelectMessage.js",
            "src/rxBulkSelect/scripts/rxBulkSelectRow.js",
            "src/rxBulkSelect/scripts/rxBulkSelectUtils.js",
            "src/rxBulkSelect/scripts/rxBulkSelectValidate.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxBulkSelect/templates/rxBatchActions.html",
            "templates/rxBulkSelect/templates/rxBulkSelectMessage.html"
        ],
        "dependencies": [
            "rxCheckbox"
        ],
        "stability": "experimental",
        "lastModified": "Nov 2, 2015 @ 18:39 (UTC-0600)",
        "rawLastModified": "2015-11-02 18:39:41 -0600",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>Used to perform an action on multiple items in a table.</p>\n<h1>Styling</h1>\n<p>The styles for the table are applied just by using the directives.  There are no directives provided for the modal, but it should follow a few design conventions:</p>\n<ul>\n<li>The first view has a warning at the top, and a table listing the selected items. The table should be paginated with 8 items per page, and items may be removed via an &quot;X&quot; icon (see the <a href=\"#/styleguide/tables\">Delete &quot;X&quot; action</a>).</li>\n<li>In the second view, the table has a status column with text describing the state of each item, and another column with an icon to indicate the state. A <a href=\"#/components/progressbar\">progressbar</a> should be included as well as a link that opens the current page in a new tab.</li>\n<li>Once the process is complete a &quot;Return to [x]&quot; button should appear in the footer, and the progressbar should be replaced with some text indicating the process is complete.</li>\n</ul>\n",
            "js": "/*jshint unused:false*/\n\n// This file is used to help build the 'demo' documentation page and should be updated with example code\nangular.module('demoApp')\n.controller('rxBulkSelectCtrl', function ($scope) {\n\n    $scope.datacenters = [\n        { name: 'ORD1', city: 'Chicago' },\n        { name: 'DFW1', city: 'Grapevine' },\n        { name: 'DFW2', city: 'Richardson' },\n        { name: 'IAD2', city: 'Ashburn' },\n        { name: 'IAD3', city: 'Ashburn' },\n        { name: 'LON1', city: 'West Drayton' },\n        { name: 'LON3', city: 'Berkshire' },\n        { name: 'LON5', city: 'Crawley' },\n        { name: 'HKG1', city: 'Honk Kong' },\n        { name: 'SYD2', city: 'Sydney' }\n    ];\n\n    // cloned to avoid interference with first demo table\n    $scope.validateDatacenters = _.cloneDeep($scope.datacenters);\n\n    $scope.filter = { keyword: '' };\n\n    $scope.getSelectedDatacenters = function () {\n        return _.cloneDeep(_.where($scope.datacenters, { rowIsSelected: true }));\n    };\n\n})\n.controller('ShutdownDatacentersCtrl', function ($scope, $modalInstance, $timeout, rxSortUtil, PageTracking) {\n    $scope.sort = rxSortUtil.getDefault('name');\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n\n    var itemsPerPage = 8;\n    $scope.pager = PageTracking.createInstance({ itemsPerPage: itemsPerPage });\n    $scope.showPagination = itemsPerPage < $scope.selectedDatacenters.length;\n\n    $scope.removeDatacenter = function (dc) {\n        _.remove($scope.selectedDatacenters, dc);\n    };\n\n    $scope.submit = function () {\n        $scope.setState('working');\n\n        $scope.numCompleted = 0;\n\n        var delay = 1000;\n        $scope.selectedDatacenters.forEach(function (dc, i) {\n            $timeout(function () {\n                dc.status = 'pending';\n            }, i * delay);\n            $timeout(function () {\n                dc.status = i % 4 === 0 ? 'failure' : 'success';\n                $scope.numCompleted++;\n            }, ++i * delay);\n        });\n        $timeout(function () {\n            $scope.setState('complete');\n            $scope.errorsPresent = _.some($scope.selectedDatacenters, { status: 'failure' });\n        }, $scope.selectedDatacenters.length * delay);\n    };\n\n    $scope.cancel = $modalInstance.dismiss;\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxBulkSelectCtrl\">\n    <table rx-bulk-select bulk-source=\"datacenters\" selected-key=\"rowIsSelected\" class=\"table-striped\" rx-floating-header>\n        <thead>\n            <tr>\n                <th colspan=\"3\" class=\"filter-header\">\n                    <rx-search-box ng-model=\"filter.keyword\" rx-placeholder=\"'Filter by any...'\"></rx-search-box>\n                    <rx-batch-actions>\n                        <li class=\"actions-item\">\n                            <rx-modal-action\n                                template-url=\"shutdownDatacenters.html\"\n                                pre-hook=\"this.selectedDatacenters = getSelectedDatacenters()\"\n                                controller=\"ShutdownDatacentersCtrl\"\n                                classes=\"msg-info\">\n                                <i class=\"fa fa-fw fa-power-off\"></i> Shutdown Selected Datacenters\n                            </rx-modal-action>\n                        </li>\n                    </rx-batch-actions>\n                </th>\n            </tr>\n            <tr>\n                <th rx-bulk-select-header-check></th>\n                <th>Name</th>\n                <th>City</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"dc in datacenters | filter:filter.keyword\"\n                ng-class=\"{selected: dc.rowIsSelected}\">\n                <td rx-bulk-select-row row=\"dc\"></td>\n                <td>{{ dc.name }}</td>\n                <td>{{ dc.city }}</td>\n            </tr>\n        </tbody>\n    </table>\n\n    <script type=\"text/ng-template\" id=\"shutdownDatacenters.html\">\n        <rx-modal-form title=\"Shut Down Datacenters\" submit-text=\"Shut Down Datacenters\">\n            <div ng-switch=\"state\">\n                <div ng-switch-when=\"editing\">\n                    <rx-notification type=\"warning\">\n                        Are you sure you want to shut down these datacenters?\n                    </rx-notification>\n                </div>\n                <div ng-switch-when=\"complete\">\n                    Batch process complete! <span ng-if=\"errorsPresent\">See table below to make note of any failures.</span>\n                </div>\n                <div ng-switch-when=\"working\">\n                    <div>Batch request to shut down datacenters in progress. Please <a href=\"#/components/rxBulkSelect\" target=\"_blank\">open a new tab to continue reading rxBulkSelect documentation.</a></div>\n                    <br />\n                    <progressbar\n                        class=\"progress-striped\"\n                        ng-class=\"{active: numCompleted === selectedDatacenters.length}\"\n                        value=\"numCompleted\"\n                        max=\"selectedDatacenters.length\">\n                        {{ numCompleted }} of {{ selectedDatacenters.length }} processed\n                    </progressbar>\n                </div>\n            </div>\n\n            <br />\n\n            <table class=\"table-striped batch-action-modal-table\">\n                <thead>\n                    <tr>\n                        <th>\n                            <rx-sortable-column\n                                sort-method=\"sortCol(property)\"\n                                sort-property=\"name\"\n                                predicate=\"sort.predicate\"\n                                reverse=\"sort.reverse\">\n                                Name\n                            </rx-sortable-column>\n                        </th>\n                        <th ng-if=\"state === 'editing'\">City</th>\n                        <th ng-if=\"state !== 'editing'\">\n                            <rx-sortable-column\n                                sort-method=\"sortCol(property)\"\n                                sort-property=\"status\"\n                                predicate=\"sort.predicate\"\n                                reverse=\"sort.reverse\">\n                                Status\n                            </rx-sortable-column>\n                        </th>\n                        <th class=\"actions\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat=\"dc in selectedDatacenters | orderBy: sort.predicate:sort.reverse | Paginate:pager\">\n                        <td>{{ dc.name }}</td>\n                        <td ng-if=\"state === 'editing'\">{{ dc.city }}</td>\n                        <td ng-if=\"state === 'editing'\"><i class=\"fa fa-times\" ng-click=\"removeDatacenter(dc)\"></i></td>\n                        <td class=\"{{dc.status}}-status\" ng-if=\"state !== 'editing'\" ng-switch=\"dc.status\">\n                            <span ng-switch-when=\"pending\">Shutting down...</span>\n                            <span ng-switch-when=\"success\">Successfully shut down!</span>\n                            <span ng-switch-when=\"failure\">Failed to shut down.</span>\n                            <span ng-switch-default>Queued to shut down...</span>\n                        </td>\n                        <td class=\"{{dc.status}}-status\" ng-if=\"state !== 'editing'\">\n                            <i ng-if=\"dc.status === 'success'\" class=\"fa fa-lg fa-check-circle-o\"></i>\n                            <i ng-if=\"dc.status === 'failure'\" class=\"fa fa-lg fa-ban\"></i>\n                        </td>\n                    </tr>\n                </tbody>\n                <tfoot ng-if=\"showPagination\">\n                    <tr class=\"paginate-area\">\n                        <td colspan=\"3\">\n                            <rx-paginate page-tracking=\"pager\"></rx-paginate>\n                        </td>\n                    </tr>\n                </tfoot>\n\n            </table>\n        </rx-modal-form>\n\n        <rx-modal-footer state=\"complete\">\n            <button class=\"button finish\" ng-click=\"cancel()\">Return to Datacenters</button>\n        </rx-modal-footer>\n    </script>\n\n    <hr />\n\n    <!-- Demo for using rxBulkSelectValidate with rxBulkSelect in a form -->\n    <div>\n        <h4>Demo for rxBulkSelectValidate</h4>\n        <rx-modal-action\n             classes=\"button\"\n             template-url=\"selectDatacenters.html\"\n             id=\"selectDatacenters\">\n            Select Datacenters\n        </rx-modal-action>\n\n        <script type=\"text/ng-template\" id=\"selectDatacenters.html\">\n            <rx-modal-form title=\"Datacenters\">\n                <table rx-bulk-select rx-bulk-select-validate bulk-source=\"validateDatacenters\" selected-key=\"rowIsSelected\" class=\"table-striped\">\n                    <thead>\n                        <tr>\n                            <th rx-bulk-select-header-check></th>\n                            <th>Name</th>\n                            <th>City</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr ng-repeat=\"dc in validateDatacenters | filter:filter.keyword\"\n                            ng-class=\"{selected: dc.rowIsSelected}\">\n                            <td rx-bulk-select-row row=\"dc\"></td>\n                            <td>{{ dc.name }}</td>\n                            <td>{{ dc.city }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </rx-modal-form>\n        </script>\n    </div>\n\n    <style>\n        .pending-status { color: #db7820; }\n        .success-status { color: #24b56a; }\n        .failure-status { color: #fc0f1d; }\n    </style>\n\n</div>\n",
            "less": "/*\n * rxBulkSelect\n */\n\nthead th.bulk-select-header {\n    background: @tableRowSelected;\n    text-align: center;\n    color: @tableCellText;\n    font-weight: normal;\n    border: 1px solid @tableBorder;\n}\n\nthead th[rx-bulk-select-header-check] {\n    width: @rxCheckbox-size;\n}\n\n.header-button.btn-link {\n    color: @linkColor;\n    &:focus {\n        color: @linkColor;\n    }\n    &:hover {\n        color: @linkColorHover;\n    }\n}\n\n.batch-action-menu-container {\n    position: relative;\n    width: 5px;\n    height: 0;\n    & > i {\n        cursor: pointer;\n        color: @subduedText;\n        &:hover {\n            color: @subduedTextHover;\n        }\n    }\n}\n\n.batch-actions-area {\n    font-size: 115%;\n    line-height: 2em;\n}\n\n.batch-action-list-hideable {\n    float: left;\n    z-index: 99;\n    position: absolute;\n    top: 0;\n    right: -115px;\n    min-width: 20em;\n    font-size: 12px;\n    border: 4px solid @white;\n    border-radius: 4px;\n    background: @white;\n    text-shadow: rgba(0, 0, 0, 0.09) 1px 1px 1px;\n    box-shadow: rgba(0, 0, 0, 0.35) 1px 1px 4px 0px;\n    padding: 6px;\n\n    &:before {\n        content: \"\\f0d8\";\n        text-shadow: rgba(0, 0, 0, 0.35) 0 -1px 1px;\n        font-family: FontAwesome;\n        text-decoration: inherit;\n        color: @white;\n        font-size: 24px;\n        display: block;\n        left: 230px;\n        position: absolute;\n        top: -23px;\n        width: 0;\n        z-index: 1;\n    }\n\n    i {\n        margin-right: 5px;\n    }\n}\n\n.batch-action-list {\n    float: right;\n    z-index: 5;\n}\n\n.selected td:not(.status) {\n    background: @tableRowSelected;\n    border-color: #bad4bb;\n    // this 'double' makes it so that the border-color applies to the top border as well\n    // @see http://stackoverflow.com/questions/7942212/css-table-row-border-color-with-border-collapse\n    border-style: double;\n}\n\n.batch-action-modal-table .pagination {\n    & > li:nth-child(1) {\n        display: none;\n    }\n    & > li:nth-child(2) {\n        display: none;\n    }\n    .pagination-per-page {\n        display: none;\n    }\n}\n",
            "midway": "var Page = require('astrolabe').Page;\n\ndescribe('rxBulkSelect', function () {\n\n    var page = Page.create({\n\n        selectFirst: {\n            value: function (index) {\n                element.all(by.css('tbody tr:nth-child(1) input')).click();\n            }\n        },\n\n        btnSelectDatacenters: {\n            get: function () {\n                return $('rx-modal-action#selectDatacenters a');\n            }\n        }\n\n    });\n\n    before(function () {\n        demoPage.go('#/components/rxBulkSelect');\n    });\n\n    describe('exercises', encore.exercise.rxBulkSelect({\n        batchActions: ['Shutdown Selected Datacenters']\n    }));\n\n    describe('rxBulkSelectValidate', function () {\n\n        var bulkSelect, validateModal;\n\n        beforeEach(function () {\n            bulkSelect = encore.rxBulkSelect.main;\n            validateModal = encore.rxModalAction.initialize();\n        });\n\n        it('disables the submit button when no items are selected', function () {\n            page.btnSelectDatacenters.click();\n            expect(validateModal.canSubmit()).to.eventually.be.false;\n        });\n\n        it('enables the submit button when an item is selected', function () {\n            page.selectFirst();\n            expect(validateModal.canSubmit()).to.eventually.be.true;\n        });\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar rxBulkSelect = require('./rxBulkSelect.page').rxBulkSelect;\nvar _ = require('lodash');\n\n/**\n   rxBulkSelect exercises.\n   @exports encore.exercise.rxBulkSelect\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxBulkSelect} [options.instance=] - Component to exercise.\n   @param {string[]} [options.batchActions] - List of batch actions to exercise, will not run exercises if empty.\n   @param {number} [options.count=10] - Number of items in the table.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxBulkSelect({\n       instance: myPage.bulkSelect // select one of many widgets from your page objects\n   }));\n   ```\n */\nexports.rxBulkSelect = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        count: 10,\n        batchActions: []\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n\n            if (options.instance === undefined) {\n                component = rxBulkSelect.main;\n            } else {\n                component = options.instance;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxBulkSelect.initialize($(options.cssSelector));\n            }\n        });\n\n        it('has no selected rows, a hidden message, and a disabled batch actions link', function () {\n            expect(component.anySelected()).to.eventually.be.false;\n            expect(component.bulkMessage).to.eventually.be.null;\n            expect(component.isEnabled()).to.eventually.be.false;\n        });\n\n        it('shows the message and enables the batch actions link when a row is selected', function () {\n            component.row(0).select();\n            expect(component.bulkMessage).to.eventually.match(/^1 \\w+ is selected.$/);\n            expect(component.isEnabled()).to.eventually.be.true;\n        });\n\n        it('updates the message as rows are selected', function () {\n            component.selectByIndex([1, 2]);\n            expect(component.bulkMessage).to.eventually.match(/^3 \\w+s are selected.$/);\n        });\n\n        it('hides the message and disables the batch actions link when all rows are deselected', function () {\n            component.deselectByIndex([0, 1, 2]);\n            expect(component.bulkMessage).to.eventually.be.null;\n            expect(component.isEnabled()).to.eventually.be.false;\n        });\n\n        it('selects all rows via the header checkbox', function () {\n            var selExp = new RegExp('^' + options.count + ' \\\\w+s are selected.$');\n\n            component.selectAllCheckbox.select();\n            expect(component.allSelected()).to.eventually.be.true;\n            expect(component.bulkMessage).to.eventually.match(selExp);\n            expect(component.isEnabled()).to.eventually.be.true;\n        });\n\n        it('clears the selection via the header checkbox', function () {\n            component.selectAllCheckbox.deselect();\n            expect(component.anySelected()).to.eventually.be.false;\n            expect(component.bulkMessage).to.eventually.be.null;\n            expect(component.isEnabled()).to.eventually.be.false;\n        });\n\n        it('selects all rows via the button in the message', function () {\n            var selExp = new RegExp('^' + options.count + ' \\\\w+s are selected.$');\n\n            component.row(0).select();\n            component.selectAll();\n            expect(component.allSelected()).to.eventually.be.true;\n            expect(component.selectAllCheckbox.isSelected()).to.eventually.be.true;\n            expect(component.bulkMessage).to.eventually.match(selExp);\n            expect(component.isEnabled()).to.eventually.be.true;\n        });\n\n        it('clears the selection via the button in the message', function () {\n            component.clearSelections();\n            expect(component.anySelected()).to.eventually.be.false;\n            expect(component.selectAllCheckbox.isSelected()).to.eventually.be.false;\n            expect(component.bulkMessage).to.eventually.be.null;\n            expect(component.isEnabled()).to.eventually.be.false;\n        });\n\n        if (options.batchActions.length > 0) {\n            it('should have a batch actions menu', function () {\n                expect(component.batchActions.isPresent()).to.eventually.be.true;\n            });\n\n            it('should disable the batch actions menu when no items selected', function () {\n                expect(component.batchActions.isEnabled()).to.eventually.be.false;\n            });\n\n            it('should enable the batch actions menu when an item is selected', function () {\n                component.row(0).select();\n                expect(component.batchActions.isEnabled()).to.eventually.be.true;\n            });\n\n            it('should expand the batch action menu when clicked', function () {\n                component.batchActions.expand();\n                expect(component.batchActions.isExpanded()).to.eventually.be.true;\n            });\n\n            it('should have the correct number of batch actions', function () {\n                expect(component.batchActions.actionCount()).to.eventually.eql(options.batchActions.length);\n            });\n\n            _.each(options.batchActions, function (action) {\n                it('should have the batch action \"' + action + '\"', function () {\n                    expect(component.batchActions.hasAction(action)).to.eventually.be.true;\n                });\n\n                it('should be able to open the modal for batch action \"' + action + '\"', function () {\n                    var modal = component.batchActions.action(action).openModal();\n                    expect(modal.isDisplayed()).to.eventually.be.true;\n                    modal.close();\n                });\n            });\n        }\n    };\n};\n"
        }
    },
    {
        "name": "rxButton",
        "moduleName": "'encore.ui.rxButton'",
        "displayName": "Rx Button",
        "srcFiles": [
            "src/rxButton/rxButton.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxButton/templates/rxButton.html"
        ],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 28, 2015 @ 11:50 (UTC-0500)",
        "rawLastModified": "2015-10-28 11:50:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p><code>rxButton</code> is used to create buttons based on the dynamic state of the application.  There are several styles of buttons available, and they are documented in the <a href=\"#/styles/buttons\">Encore Framework Styleguide</a>.  </p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxButtonCtrl', function ($scope, $timeout) {\n    $scope.status = {\n        loading: false,\n        disable: true\n    };\n\n    $scope.login = function () {\n        $scope.status.loading = true;\n\n        $timeout(function () {\n            $scope.status.loading = false;\n        }, 4000);\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<h3>Typical Usage</h3>\n<div ng-controller=\"rxButtonCtrl\">\n    <rx-button toggle-msg=\"Authenticating\" default-msg=\"Login\"\n        toggle=\"status.loading\" ng-click=\"login()\">\n    </rx-button>\n</div>\n\n<h3>Using the <code>disable</code> attribute</h3>\n<div ng-controller=\"rxButtonCtrl\">\n    <rx-button default-msg=\"Toggle enabled/disabled of 'Login'\"\n        rx-toggle=\"status.disable\">\n    </rx-button>\n    <rx-button classes=\"positive\" toggle-msg=\"Authenticating\" default-msg=\"Login\"\n        toggle=\"status.loading\" disable=\"status.disable\" ng-click=\"login()\">\n    </rx-button>\n</div>\n",
            "less": "/*\n * rxButton\n */\n@import \"vars\";\n\n.button {\n    display: inline-block;\n    background: @buttonDefaultBg;\n    color: @buttonColor;\n    border: 0;\n    font-size: 14px;\n    padding: 7px 13px;\n    margin-bottom: 10px;\n    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.320, 1.275);\n\n    &:hover,\n    &:focus {\n        background: @buttonDefaultBgHover;\n        cursor: pointer;\n        // in case the buttons are created using the <a> tag\n        color: @buttonColor;\n        text-decoration: none;\n    }\n\n    // Size Variations\n    &.xl {\n        font-size: 16px;\n        padding: 20px 30px;\n    }\n\n    &.lg {\n        font-size: 15px;\n        padding: 15px 26px;\n    }\n\n    &.sm {\n        padding: 5px 10px;\n        font-size: 13px;\n    }\n\n    &.xs {\n        padding: 3px 7px;\n        margin-bottom: 5px;\n        font-size: 12px;\n    }\n\n    // Color Variations\n    &.positive,\n    &.submit {\n        background: @buttonPositiveBg;\n\n        &:hover,\n        &:focus {\n            background: @buttonPositiveBgHover;\n        }\n    }\n\n    &.negative {\n        background: @buttonNegativeBg;\n\n        &:hover,\n        &:focus {\n            background: @buttonNegativeBgHover;\n        }\n    }\n\n    &.finish {\n        background: #fff;\n        color: @buttonDefaultBg;\n        .box-shadow(inset 0 0 0 2px @buttonDefaultBg);\n\n        &:hover,\n        &:focus {\n            color: @buttonDefaultBgHover;\n            .box-shadow(inset 0 0 0 2px @buttonDefaultBgHover);\n        }\n    }\n\n    &.cancel {\n        background: @buttonCancelBg;\n\n        &:hover,\n        &:focus {\n            background: @buttonCancelBgHover;\n        }\n    }\n\n    // Disabled styles should always come last in the cascade for color\n    // variations styles, or else they won't override other colors properly.\n    &[disabled],\n    &[disabled]:hover {\n        cursor: not-allowed;\n        color: @buttonColorDisabled;\n        background: @buttonDisabledBg;\n    }\n\n    &.inline {\n        vertical-align: middle;\n    }\n\n    // Spinner styles\n    .spinner {\n        display: inline-block;\n        position: relative;\n        left: 3px;\n\n        i {\n            width: 5px;\n            height: 5px;\n            background: @buttonSpinnerBg;\n\n            .border-radius(100%);\n            display: inline-block;\n            -webkit-animation: bouncedelay 1.4s infinite ease-in-out;\n            animation: bouncedelay 1.4s infinite ease-in-out;\n            /* Prevent first frame from flickering when animation starts */\n            -webkit-animation-fill-mode: both;\n            animation-fill-mode: both;\n\n            &.pos1 {\n                -webkit-animation-delay: -0.32s;\n                animation-delay: -0.32s;\n            }\n\n            &.pos2 {\n                -webkit-animation-delay: -0.16s;\n                animation-delay: -0.16s;\n            }\n        }\n    }\n\n    @-webkit-keyframes bouncedelay {\n        0%,\n        80%,\n        100% {\n            -webkit-transform: scale(0.0)\n        }\n        40% {\n            -webkit-transform: scale(1.0)\n        }\n    }\n\n    @keyframes bouncedelay {\n        0%,\n        80%,\n        100% {\n            transform: scale(0.0);\n            -webkit-transform: scale(0.0);\n        }\n        40% {\n            transform: scale(1.0);\n            -webkit-transform: scale(1.0);\n        }\n    }\n}//.button\n\n// Make buttons look like plain links\n.btn-link {\n    color: @linkColor;\n    background: none;\n    border: 0;\n    padding: 0;\n    cursor: pointer;\n    font-size: inherit;\n\n    &:hover,\n    &:focus {\n        text-decoration: underline;\n    }\n\n    &[disabled],\n    &[disabled]:hover {\n        cursor: not-allowed;\n        color: @buttonDisabledBg;\n    }\n}\n\nthead th .btn-link {\n    color: @tableHeaderText;\n    &:hover,\n    &:focus {\n        color: @tableHeaderText;\n    }\n}\n\n.button-group {\n    display: flex;\n    border: @buttonGroupBorder;\n    border-radius: @buttonGroupBorderRadius + 2;\n    font-size: 1.1em;\n\n    input {\n        display: none;\n    }\n\n    label {\n        flex: 1;\n        text-align: center;\n        padding: 7px 13px;\n        color: #989998;\n\n        &:first-of-type {\n            border-top-left-radius: @buttonGroupBorderRadius;\n            border-bottom-left-radius: @buttonGroupBorderRadius;\n        }\n\n        &:last-of-type {\n            border-top-right-radius: @buttonGroupBorderRadius;\n            border-bottom-right-radius: @buttonGroupBorderRadius;\n        }\n\n        &:not(:last-of-type) {\n            border-right: @buttonGroupBorder;\n        }\n\n        &:hover,\n        &:focus {\n            cursor: pointer;\n            color: @white;\n            background: @buttonCancelBgHover;\n        }\n    }//label\n\n    input:checked + label {\n        color: @white;\n        background: #757575;\n    }\n}//.button-group\n",
            "midway": "var rxButtonPage = encore.rxButton;\n\ndescribe('rxButton', function () {\n    var rxButton;\n\n    before(function () {\n        demoPage.go('#/components/rxButton');\n        rxButton = rxButtonPage.initialize($('rx-button'));\n    });\n\n    it('should show element', function () {\n        expect(rxButton.rootElement.isDisplayed()).to.eventually.be.true;\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxCapitalize",
        "moduleName": "'encore.ui.rxCapitalize'",
        "displayName": "Rx Capitalize",
        "srcFiles": [
            "src/rxCapitalize/rxCapitalize.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Sep 24, 2015 @ 10:46 (UTC-0500)",
        "rawLastModified": "2015-09-24 10:46:36 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>Capitalizes the first word in a string.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxCapitalizeCtrl', function ($scope) {\n    $scope.hello = 'hello world. this is my text';\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxCapitalizeCtrl\">\n    {{hello | rxCapitalize}}\n</div>",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxCharacterCount",
        "moduleName": "'encore.ui.rxCharacterCount'",
        "displayName": "Rx Character Count",
        "srcFiles": [
            "src/rxCharacterCount/rxCharacterCount.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>A component designed for <code>&lt;textarea&gt;</code> elements that provides character count functionality.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxCharacterCountCtrl', function ($scope) {\n    $scope.data = {\n        comment1: '',\n        comment2: '',\n        comment3: '',\n        comment4: '',\n        comment5: 'I have an initial value',\n        comment6: ''\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxCharacterCountCtrl\">\n    <div>\n        <h3>Default Values</h3>\n        <textarea\n            ng-model=\"data.comment1\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count\n            class=\"demo-default-values\">\n        </textarea>\n    </div>\n    <div>\n        <h3>Custom <code>max-characters=\"25\"</code></h3>\n        <textarea\n            ng-model=\"data.comment2\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count\n            max-characters=\"25\"\n            class=\"demo-custom-max-characters\">\n        </textarea>\n    </div>\n    <div>\n        <h3>Custom <code>low-boundary=\"250\"</code></h3>\n        <textarea\n            ng-model=\"data.comment3\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count\n            low-boundary=\"250\"\n            class=\"demo-custom-low-boundary\">\n        </textarea>\n    </div>\n    <div>\n        <h3>Count leading and trailing spaces</h3>\n        <textarea\n            ng-model=\"data.comment4\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count\n            ng-trim=\"false\"\n            class=\"demo-custom-do-not-trim\">\n        </textarea>\n    </div>\n    <div>\n        <h3>Accounts for initial values</h3>\n        <textarea\n            ng-model=\"data.comment5\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count\n            class=\"demo-initial-value\">\n        </textarea>\n    </div>\n    <div>\n        <h3>With highlighting</h3>\n        <textarea\n            ng-model=\"data.comment6\"\n            rows=\"10\" cols=\"50\"\n            rx-character-count\n            highlight=\"true\"\n            max-characters=\"10\"\n            class=\"demo-highlighting\">\n        </textarea>\n    </div>\n</div>\n",
            "less": "/*\n * rxCharacterCount\n */\n\n// Wrapper provides proper width for text area and positioning\n// character count. For specific use cases in a project,\n// custom wrappers with custom widths can be set.\n.counted-input-wrapper {\n    width: 375px;\n    position: relative;\n    background-color: #ffffff;\n\n    // These two selectors must always be styled with the same width.\n    .input-highlighting,\n    textarea {\n        width: 370px;\n    }\n\n    input,\n    textarea {\n        // Ensure the input is layered over the highlighting without z-index\n        position: relative;\n        background-color: transparent;\n        resize: none;\n        .inputBorderPadding;\n    }\n\n    .input-highlighting {\n        position: absolute;\n        top: 4px;\n        left: 6px;\n        white-space: pre-wrap;\n        word-wrap: break-word;\n        color: transparent;\n\n        .over-limit-text {\n            background-color: @warnRed;\n            opacity: 0.3;\n        }\n    }\n\n    .character-countdown {\n        text-align: right;\n        color: @subduedTitle;\n\n        &.near-limit {\n            color: @orange;\n        }\n        &.over-limit {\n            color: @red;\n        }\n    }\n}\n",
            "midway": "describe('rxCharacterCount', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxCharacterCount');\n    });\n\n    describe('defaults', encore.exercise.rxCharacterCount({\n        instance: encore.rxCharacterCount.initialize($('.demo-default-values'))\n    }));\n\n    describe('low max characters', encore.exercise.rxCharacterCount({\n        instance: encore.rxCharacterCount.initialize($('.demo-custom-max-characters')),\n        maxCharacters: 25\n    }));\n\n    describe('high near limit level', encore.exercise.rxCharacterCount({\n        instance: encore.rxCharacterCount.initialize($('.demo-custom-low-boundary')),\n        nearLimit: 250\n    }));\n\n    describe('count insignificant whitespace', encore.exercise.rxCharacterCount({\n        instance: encore.rxCharacterCount.initialize($('.demo-custom-do-not-trim')),\n        ignoreInsignificantWhitespace: false\n    }));\n\n    describe('initial value', encore.exercise.rxCharacterCount({\n        instance: encore.rxCharacterCount.initialize($('.demo-initial-value'))\n    }));\n\n    describe('with highlighting', encore.exercise.rxCharacterCount({\n        cssSelector: '.demo-highlighting',\n        maxCharacters: 10,\n        highlight: true\n    }));\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxCharacterCount = require('./rxCharacterCount.page').rxCharacterCount;\n\n/**\n   rxCharacterCount exercises.\n   @exports encore.exercise.rxCharacterCount\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxCharacterCount} [options.instance=] - Component to exercise.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @param {Number} [options.maxCharacters=254] - The total number of characters allowed.\n   @param {Number} [options.nearLimit=10] - The number of remaining characters needed to trigger the \"near-limit\" class.\n   @param {Boolean} [options.ignoreInsignificantWhitespace=false] - Whether or not the textbox ignores leading and\n   trailing whitespace when calculating the remaining character count.\n   @param {Boolean} [options.highlight=false] - Determines if text over the limit should be highlighted.\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxCharacterCount({\n       instance: myPage.submission // select one of many widgets from your page objects\n       maxCharacters: 25,\n       nearLimit: 12,\n       ignoreInsignificantWhitespace: false\n   }));\n   ```\n */\nexports.rxCharacterCount = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        maxCharacters: 254,\n        nearLimit: 10,\n        ignoreInsignificantWhitespace: true,\n        highlight: false\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxCharacterCount.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxCharacterCount.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should show element', function () {\n            expect(component.isDisplayed()).to.eventually.be.true;\n        });\n\n        it('should update the remaining number of characters left when you insert text', function () {\n            component.comment = 'Foo';\n            expect(component.remaining).to.eventually.equal(options.maxCharacters - 3);\n        });\n\n        it('should erase all text and replace it with new text on update', function () {\n            component.comment = 'Bar';\n            expect(component.comment).to.eventually.equal('Bar');\n        });\n\n        it('should not set the near-limit class on an empty text box', function () {\n            component.comment = '';\n            expect(component.isNearLimit()).to.eventually.be.false;\n        });\n\n        it('should have ' + options.maxCharacters + ' remaining characters by default', function () {\n            expect(component.remaining).to.eventually.equal(options.maxCharacters);\n        });\n\n        it('should not set the over-limit class on an empty text box', function () {\n            expect(component.isOverLimit()).to.eventually.be.false;\n        });\n\n        var belowNearLimitLength = options.maxCharacters + 1 - options.nearLimit;\n        it('should not set the near-limit class when ' + belowNearLimitLength + ' characters are entered', function () {\n            component.comment = Array(belowNearLimitLength).join('a');\n            expect(component.isNearLimit()).to.eventually.be.false;\n        });\n\n        var atNearLimitLength = options.maxCharacters + 2 - options.nearLimit;\n        it('should set the near-limit class when ' + atNearLimitLength + ' characters are entered', function () {\n            component.comment = Array(atNearLimitLength).join('a');\n            expect(component.isNearLimit()).to.eventually.be.true;\n        });\n\n        var aboveNearLimitLength = options.maxCharacters + 3 - options.nearLimit;\n        it('should set the near-limit class when ' + aboveNearLimitLength + ' characters are entered', function () {\n            component.comment = Array(aboveNearLimitLength).join('a');\n            expect(component.isNearLimit()).to.eventually.be.true;\n        });\n\n        var atLimit = options.maxCharacters + 1;\n        it('should not set the over-limit class when ' + atLimit + ' characters are entered', function () {\n            component.comment = Array(atLimit).join('a');\n            expect(component.isOverLimit()).to.eventually.be.false;\n        });\n\n        it('should have zero remaining characters', function () {\n            expect(component.remaining).to.eventually.equal(0);\n        });\n\n        var overLimit = options.maxCharacters + 2;\n        it('should set the over-limit class when ' + overLimit + ' characters are entered', function () {\n            component.comment = Array(overLimit).join('a');\n            expect(component.isOverLimit()).to.eventually.be.true;\n        });\n\n        it('should display a negative number when the over-limit class is reached', function () {\n            expect(component.remaining).to.eventually.equal(-1);\n        });\n\n        var whitespace = '    leading and trailing whitespace    ';\n        var whitespaceLength = whitespace.length;\n        var trimmedLength = whitespace.trim().length;\n        if (options.ignoreInsignificantWhitespace) {\n            it('should ignore insignificant leading and trailing whitespace', function () {\n                component.comment = whitespace;\n                expect(component.remaining).to.eventually.equal(options.maxCharacters - trimmedLength);\n            });\n        } else {\n            it('should count insignificant leading and trailing whitespace', function () {\n                component.comment = whitespace;\n                expect(component.remaining).to.eventually.equal(options.maxCharacters - whitespaceLength);\n            });\n        }\n\n        if (options.highlight) {\n            describe('highlighting', function () {\n\n                it('should not show any highlights on an empty text box', function () {\n                    // A space is used because the `input` event is not fired by clear() or sendKeys('')\n                    component.comment = ' ';\n                    expect(component.overLimitText).to.eventually.equal('');\n                });\n\n                it('should not highlight any characters when ' + atLimit + ' characters are entered', function () {\n                    component.comment = Array(atLimit).join('a');\n                    expect(component.overLimitText).to.eventually.equal('');\n                });\n\n                it('should highlight a single characters when ' + overLimit + ' characters are entered', function () {\n                    component.comment = Array(overLimit).join('a');\n                    expect(component.overLimitText).to.eventually.equal('a');\n                });\n\n                it('should clear the over-limit text highlighting when the text is reduced', function () {\n                    component.comment = 'a';\n                    expect(component.overLimitText).to.eventually.equal('');\n                });\n\n            });\n        }\n\n        after(function () {\n            component.comment = '';\n        });\n\n    };\n};\n"
        }
    },
    {
        "name": "rxCheckbox",
        "moduleName": "'encore.ui.rxCheckbox'",
        "displayName": "Rx Checkbox",
        "srcFiles": [
            "src/rxCheckbox/rxCheckbox.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>A component that wraps a native checkbox element in markup required for styling purposes.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxCheckboxCtrl', function ($scope) {\n    $scope.chkValidEnabledOne = true;\n    $scope.chkValidEnabledTwo = false;\n    $scope.chkValidDisabledOne = true;\n    $scope.chkValidDisabledTwo = false;\n    $scope.chkValidNgDisabledOne = true;\n    $scope.chkValidNgDisabledTwo = false;\n\n    $scope.chkInvalidEnabledOne = true;\n    $scope.chkInvalidEnabledTwo = false;\n    $scope.chkInvalidDisabledOne = true;\n    $scope.chkInvalidDisabledTwo = false;\n    $scope.chkInvalidNgDisabledOne = true;\n    $scope.chkInvalidNgDisabledTwo = false;\n\n    $scope.amSure = false;\n    $scope.amReallySure = false;\n\n    $scope.$watch('amSure', function (newVal) {\n        if (newVal === false) {\n            $scope.amReallySure = false;\n        }\n    });\n});\n",
            "html": "<div ng-controller=\"rxCheckboxCtrl\">\n  <h3>Examples</h3>\n\n  <h3>Show/Hide Input</h3>\n  <p>\n    <input rx-checkbox\n           id=\"chkAmSure\"\n           ng-model=\"amSure\"\n           ng-required=\"true\" />\n    <label for=\"chkAmSure\">Are you sure?</label>\n    <small>({{amSure}})</small>\n    <br />\n    <sub><em>Valid only if checked</em></sub>\n  </p>\n  <p ng-show=\"amSure\">\n    <input rx-checkbox\n           id=\"chkAmReallySure\"\n           ng-model=\"amReallySure\" />\n    <label for=\"chkAmReallySure\">Are you REALLY sure?</label>\n    <small>({{amReallySure}})</small>\n  </p>\n\n  <br />\n\n  <h3>Destroy Input</h3>\n  <p>Support for <code>$destroy</code> events.</p>\n  <p>\n    <input rx-checkbox\n           id=\"chkRemoveCheckbox\"\n           ng-model=\"chkIsRemoved\" />\n    <label for=\"chkRemoveCheckbox\">Remove Following Checkbox:</label>\n\n    <input rx-checkbox\n           checked\n           id=\"chkRemoveable\"\n           ng-if=\"!chkIsRemoved\" />\n  </p>\n\n  <h3>Checkbox States</h3>\n  <table>\n    <thead>\n      <tr>\n        <th></th>\n        <th>Enabled</th>\n        <th>Disabled (ng-disabled)</th>\n        <th>Disabled (disabled)</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <th>Valid</th>\n        <!-- Valid Enabled-->\n        <td>\n          <p>\n            <input rx-checkbox\n                   id=\"chkValidEnabledOne\"\n                   ng-model=\"chkValidEnabledOne\" />\n            <label for=\"chkValidEnabled\">Checked</label>\n          </p>\n          <p>\n            <input rx-checkbox\n                   id=\"chkValidEnabledTwo\"\n                   ng-model=\"chkValidEnabledTwo\" />\n            <label for=\"chkValidEnabledTwo\">Unchecked</label>\n          </p>\n        </td>\n\n        <!-- Valid NG-Disabled -->\n        <td>\n          <p>\n            <input rx-checkbox\n                   id=\"chkValidNgDisabledOne\"\n                   ng-disabled=\"true\"\n                   ng-model=\"chkValidNgDisabledOne\" />\n            <label for=\"chkValidNgDisabledOne\">Checked</label>\n          </p>\n          <p>\n            <input rx-checkbox\n                   id=\"chkValidNgDisabledTwo\"\n                   ng-disabled=\"true\"\n                   ng-model=\"chkValidNgDisabledTwo\" />\n            <label for=\"chkValidNgDisabledTwo\">Unchecked</label>\n          </p>\n        </td>\n\n        <!-- Valid Disabled -->\n        <td>\n          <p>\n            <input rx-checkbox\n                   id=\"chkValidDisabledOne\"\n                   disabled\n                   ng-model=\"chkValidDisabledOne\" />\n            <label for=\"chkValidDisabledOne\">Checked</label>\n          </p>\n          <p>\n            <input rx-checkbox\n                   id=\"chkValidDisabledTwo\"\n                   disabled\n                   ng-model=\"chkValidDisabledTwo\" />\n            <label for=\"chkValidDisabledTwo\">Unchecked</label>\n          </p>\n        </td>\n      </tr>\n      <tr>\n        <th>Invalid</th>\n        <!-- Invalid Enabled -->\n        <td>\n          <p>\n            <input rx-checkbox\n                   id=\"chkInvalidEnabledOne\"\n                   ng-model=\"chkInvalidEnabledOne\"\n                   always-invalid />\n            <label for=\"chkInvalidEnabledOne\">Checked</label>\n          </p>\n          <p>\n            <input rx-checkbox\n                   id=\"chkInvalidEnabledTwo\"\n                   ng-model=\"chkInvalidEnabledTwo\"\n                   always-invalid />\n            <label for=\"chkInvalidEnabledTwo\">Unchecked</label>\n          </p>\n        </td>\n\n        <!-- Invalid NG-Disabled -->\n        <td>\n          <p>\n            <input rx-checkbox\n                   id=\"chkInvalidNgDisabledOne\"\n                   ng-model=\"chkInvalidNgDisabledOne\"\n                   ng-disabled=\"true\"\n                   always-invalid />\n            <label for=\"chkInvalidNgDisabledOne\">Checked</label>\n          </p>\n          <p>\n            <input rx-checkbox\n                   id=\"chkInvalidNgDisabledTwo\"\n                   ng-model=\"chkInvalidNgDisabledTwo\"\n                   ng-disabled=\"true\"\n                   always-invalid />\n            <label for=\"chkInvalidNgDisabledTwo\">Unchecked</label>\n          </p>\n        </td>\n\n        <!-- Invalid Disabled -->\n        <td>\n          <p>\n            <input rx-checkbox\n                   id=\"chkInvalidDisabledOne\"\n                   ng-model=\"chkInvalidDisabledOne\"\n                   disabled\n                   always-invalid />\n            <label for=\"chkInvalidDisabledOne\">Checked</label>\n          </p>\n          <p>\n            <input rx-checkbox\n                   id=\"chkInvalidDisabledTwo\"\n                   ng-model=\"chkInvalidDisabledTwo\"\n                   disabled\n                   always-invalid />\n            <label for=\"chkInvalidDisabledTwo\">Unchecked</label>\n          </p>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n    <h3>Plain HTML Checkboxes (for comparison)</h3>\n  <p>\n    <input type=\"checkbox\"\n           id=\"plainHtmlNormal\"\n           ng-required=\"true\" />\n    <label for=\"plainHtmlNormal\">A plain checkbox</label>\n  </p>\n  <p>\n    <input type=\"checkbox\"\n           id=\"plainHtmlDisabled\"\n           disabled />\n    <label for=\"plainHtmlDisabled\">A plain checkbox (disabled)</label>\n  </p>\n  <p>\n    <input type=\"checkbox\"\n           id=\"plainHtmlChecked\"\n           checked />\n    <label for=\"plainHtmlChecked\">A plain checkbox (checked)</label>\n  </p>\n  <p>\n    <input type=\"checkbox\"\n           id=\"plainChkRemoveCheckbox\"\n           ng-model=\"plainChkIsRemoved\" />\n    <label for=\"plainChkRemoveCheckbox\">Remove Following Checkbox:</label>\n\n    <input type=\"checkbox\"\n           checked\n           id=\"plainChkRemoveable\"\n           ng-if=\"!plainChkIsRemoved\" />\n  </p>\n</div>\n",
            "less": "/*\n * rxCheckbox\n */\n.rxCheckbox {\n    display: inline-block;\n    width: @rxCheckbox-size;\n    height: @rxCheckbox-size;\n    color: @rxCheckbox-color;\n    background-color: @rxCheckbox-background-color;\n    position: relative;\n\n    input[type=\"checkbox\"],\n    .fake-checkbox {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: block;\n        margin: 0;\n        padding: 0;\n        border: 0;\n        outline: 0;\n    }\n\n    .fake-checkbox {\n        box-sizing: border-box;\n        z-index: 0;\n        width: 100%;\n        height: 100%;\n\n        // enabled unchecked\n        background-color: @rxCheckbox-background-color;\n        border: 1px solid @rxCheckbox-border-color;\n\n        // perfect center alignment for tick\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: center;\n        color: transparent;\n\n        .tick {\n            flex: 0 0 auto;\n            font-size: @rxCheckbox-font-size;\n        }\n    }//.fake-checkbox\n\n    &.rx-disabled + label {\n        color: @inputColorDisabled;\n    }\n\n    input[type=\"checkbox\"] {\n        z-index: 1;\n        height: 110%;\n        width: 110%;\n        opacity: 0;\n        cursor: pointer;\n\n        // enabled checked\n        &:checked + .fake-checkbox {\n            background-color: @rxCheckbox-background-color-selected;\n            color: @rxCheckbox-color;\n            border: 0;\n        }\n\n        .disabled() {\n            cursor: not-allowed;\n\n            & ~ .fake-checkbox {\n                background: @inputBackground;\n                border: 1px solid @rxCheckbox-border-color;\n            }\n\n            // disabled, checked\n            &:checked ~ .fake-checkbox {\n                background-color: @inputBackgroundDisabled;\n                border: 0;\n            }\n        }//.disabled()\n\n        &.ng-invalid.ng-dirty {\n            // enabled unchecked error\n            & + .fake-checkbox {\n                background-color: @rxCheckbox-background-color;\n                border: 2px solid @inputBackgroundError;\n            }\n\n            // enabled checked error\n            &:checked {\n                & + .fake-checkbox {\n                    background-color: @inputBackgroundError;\n                }\n            }\n\n            &[disabled] {\n                .disabled();\n            }\n        }\n\n        &[disabled] {\n            .disabled();\n        }\n    }\n}//.rxCheckbox\n",
            "midway": "var rxCheckboxPage = encore.rxCheckbox;\n\ndescribe('rxCheckbox', function () {\n    before(function () {\n        demoPage.go('#/components/rxCheckbox');\n    });\n\n    describe('(State) Valid Enabled Checked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkValidEnabledOne')),\n        disabled: false,\n        selected: true,\n        valid: true\n    }));\n\n    describe('(State) Valid Enabled UnChecked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkValidEnabledTwo')),\n        disabled: false,\n        selected: false,\n        valid: true\n    }));\n\n    describe('(State) Valid Ng-Disabled Checked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkValidNgDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: true\n    }));\n\n    describe('(State) Valid Ng-Disabled Unchecked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkValidNgDisabledTwo')),\n        disabled: true,\n        selected: false,\n        valid: true\n    }));\n\n    describe('(State) Valid Disabled Checked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkValidDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: true\n    }));\n\n    describe('(State) Valid Disabled Unchecked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkValidDisabledTwo')),\n        disabled: true,\n        selected: false,\n        valid: true\n    }));\n\n    describe('(State) Invalid Enabled Checked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkInvalidEnabledOne')),\n        disabled: false,\n        selected: true,\n        valid: false\n    }));\n\n    describe('(State) Invalid Enabled UnChecked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkInvalidEnabledTwo')),\n        disabled: false,\n        selected: false,\n        valid: false\n    }));\n\n    describe('(State) Invalid Ng-Disabled Checked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkInvalidNgDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: false\n    }));\n\n    describe('(State) Invalid Ng-Disabled Unchecked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkInvalidNgDisabledTwo')),\n        disabled: true,\n        selected: false,\n        valid: false\n    }));\n\n    describe('(State) Invalid Disabled Checked', encore.exercise.rxCheckbox({\n        instance: encore.rxCheckbox.initialize($('#chkInvalidDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: false\n    }));\n\n    describe('(State) Invalid Disabled Unchecked', encore.exercise.rxCheckbox({\n        cssSelector: '#chkInvalidDisabledTwo',\n        disabled: true,\n        selected: false,\n        valid: false\n    }));\n\n    describe('plain HTML checkboxes', function () {\n        describe('Valid Enabled Unchecked', encore.exercise.rxCheckbox({\n            cssSelector: '#plainHtmlNormal',\n            disabled: false,\n            selected: false,\n            valid: false\n        }));\n\n        describe('Valid Disabled Unchecked', encore.exercise.rxCheckbox({\n            cssSelector: '#plainHtmlDisabled',\n            disabled: true,\n            selected: false,\n            valid: false\n        }));\n\n        describe('Valid Enabled Checked', encore.exercise.rxCheckbox({\n            cssSelector: '#plainHtmlChecked',\n            disabled: false,\n            selected: true,\n            valid: false\n        }));\n\n    });\n\n    describe('Show/Hide Input', function () {\n        var chkSure, chkReallySure;\n\n        before(function () {\n            chkSure = rxCheckboxPage.initialize($('#chkAmSure'));\n            chkReallySure = rxCheckboxPage.initialize($('#chkAmReallySure'));\n        });\n\n        describe('\"Are you sure?\"', function () {\n            it('should be displayed', function () {\n                expect(chkSure.isDisplayed()).to.eventually.be.true;\n            });\n\n            describe('when checked', function () {\n                before(function () {\n                    chkSure.select();\n                });\n\n                it('should be valid', function () {\n                    expect(chkSure.isValid()).to.eventually.be.true;\n                });\n\n                it('should show \"Are you REALLY sure?\"', function () {\n                    expect(chkReallySure.isDisplayed()).to.eventually.be.true;\n                });\n            });\n\n            describe('when unchecked', function () {\n                before(function () {\n                    chkSure.deselect();\n                });\n\n                it('should not be valid', function () {\n                    expect(chkSure.isValid()).to.eventually.be.false;\n                });\n\n                it('should not show \"Are you REALLY sure?\"', function () {\n                    expect(chkReallySure.isDisplayed()).to.eventually.be.false;\n                });\n            });\n        });\n\n        describe('plain HTML checkboxes', function () {\n            var willHide;\n            var willBeHidden;\n\n            before(function () {\n                willHide = encore.rxCheckbox.initialize($('#plainChkRemoveCheckbox'));\n                willBeHidden = encore.rxCheckbox.initialize($('#plainChkRemoveable'));\n            });\n\n            it('should show the checkbox by default', function () {\n                expect(willBeHidden.isDisplayed()).to.eventually.be.true;\n                expect(willBeHidden.isPresent()).to.eventually.be.true;\n            });\n\n            it('should remove the checkbox from the DOM', function () {\n                willHide.select();\n                expect(willBeHidden.isPresent()).to.eventually.be.false;\n            });\n\n            it('should put the checkbox back', function () {\n                willHide.deselect();\n                expect(willBeHidden.isDisplayed()).to.eventually.be.true;\n                expect(willBeHidden.isPresent()).to.eventually.be.true;\n            });\n\n        });\n    });\n\n    describe('Destroy Input', function () {\n        var chkRemove, chkRemoveable;\n\n        before(function () {\n            chkRemove = rxCheckboxPage.initialize($('#chkRemoveCheckbox'));\n            chkRemoveable = rxCheckboxPage.initialize($('#chkRemoveable'));\n        });\n\n        describe('when checked', function () {\n            before(function () {\n                chkRemove.select();\n            });\n\n            describe('Static Checkbox', function () {\n                it('should not exist', function () {\n                    expect(chkRemoveable.isPresent()).to.eventually.be.false;\n                });\n            });\n        });\n\n        describe('when unchecked', function () {\n            before(function () {\n                chkRemove.deselect();\n            });\n\n            describe('Static Checkbox', function () {\n                it('should exist', function () {\n                    expect(chkRemoveable.isPresent()).to.eventually.be.true;\n                });\n            });\n        });\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxCheckbox = require('./rxCheckbox.page').rxCheckbox;\n\n/**\n * @description rxCheckbox exercises\n * @exports encore.exercise.rxCheckbox\n * @param {Object} [options=] - Test options. Used to build valid tests.\n * @param {rxCheckbox} [options.instance=] - Component to exercise.\n * @param {String} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n * @param {Boolean} [options.disabled=false] - Determines if the checkbox is disabled\n * @param {Boolean} [options.selected=false] - Determines if the checkbox is selected\n * @param {Boolean} [options.visible=true] - Determines if the checkbox is visible\n * @param {Boolean} [options.valid=true] - Determines if the checkbox is valid\n */\nexports.rxCheckbox = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        disabled: false,\n        selected: false,\n        visible: true,\n        valid: true\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxCheckbox.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should be present', function () {\n            expect(component.isPresent()).to.eventually.be.true;\n        });\n\n        it('should be a checkbox', function () {\n            expect(component.isCheckbox()).to.eventually.be.true;\n        });\n\n        it('should ' + (options.visible ? 'be' : 'not be') + ' visible', function () {\n            expect(component.isDisplayed()).to.eventually.eq(options.visible);\n        });\n\n        it('should ' + (options.disabled ? 'be' : 'not be') + ' disabled', function () {\n            expect(component.isDisabled()).to.eventually.eq(options.disabled);\n        });\n\n        it('should ' + (options.selected ? 'be' : 'not be') + ' selected', function () {\n            expect(component.isSelected()).to.eventually.eq(options.selected);\n        });\n\n        if (options.disabled) {\n            it('should not respond to selecting and unselecting', function () {\n                component.isSelected().then(function (selected) {\n                    selected ? component.deselect() : component.select();\n                    expect(component.isSelected()).to.eventually.equal(selected);\n                    // even though it \"doesn't respond to selecting and unselecting\"\n                    // attempt to put it back anyway in case it did actually respond.\n                    // that way nobody accidentally submits a swapped checkbox after\n                    // running these exercises.\n                    selected ? component.select() : component.deselect();\n                    expect(component.isSelected()).to.eventually.equal(selected);\n                });\n            });\n        } else {\n            it('should respond to selecting and unselecting', function () {\n                component.isSelected().then(function (selected) {\n                    selected ? component.deselect() : component.select();\n                    expect(component.isSelected()).to.eventually.not.equal(selected);\n                    // exercises should never alter the state of a page.\n                    // always put it back when you're done.\n                    selected ? component.select() : component.deselect();\n                    expect(component.isSelected()).to.eventually.equal(selected);\n                });\n            });\n        }\n\n        it('should ' + (options.valid ? 'be' : 'not be') + ' valid', function () {\n            expect(component.isValid()).to.eventually.eq(options.valid);\n        });\n    };\n};\n"
        }
    },
    {
        "name": "rxCollapse",
        "moduleName": "'encore.ui.rxCollapse'",
        "displayName": "Rx Collapse",
        "srcFiles": [
            "src/rxCollapse/rxCollapse.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxCollapse/templates/rxCollapse.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p><code>rxCollapse</code> component is used to display and hide content on a page.</p>\n",
            "js": "",
            "html": "<rx-collapse class=\"demo-with-title\" title=\"A Custom Title\" expanded=\"true\">\n    You can put whatever content you want to inside here\n</rx-collapse>\n\n<br/>\n\n<div class=\"metadata\">\n    <dl>\n        <dt>Name:</dt>\n        <dd>Lorem ipsum dolor sit amet</dd>\n        <dt>ID:</dt>\n        <dd>1aa2bfa9-de8d-42f7-9f6d-e6437855b36e</dd>\n        <dt>Region:</dt>\n        <dd>ORD</dd>\n        <dt>Created:</dt>\n        <dd>December 2, 2014 @ 14:28</dd>\n        <rx-collapse class=\"demo-no-title\" expanded=\"false\">\n\t        <dt>Name:</dt>\n\t        <dd>Lorem ipsum dolor sit amet</dd>\n\t        <dt>ID:</dt>\n\t        <dd>1aa2bfa9-de8d-42f7-9f6d-e6437855b36e</dd>\n\t        <dt>Region:</dt>\n\t        <dd>ORD</dd>\n\t        <dt>Created:</dt>\n\t        <dd>December 2, 2014 @ 14:28</dd>\n        </rx-collapse>\n    </dl>\n</div>\n\n",
            "less": "/*\n * rxCollapse\n */\nrx-collapse {\n    display: block;\n\n    .collapse-container {\n\n        .double-chevron-cell {\n            display: inline-block;\n            .box-sizing(border-box);\n            width: 30px;\n            padding: 0 10px;\n            background-color: @borderGrey;\n            vertical-align: middle;\n\n            .double-chevron {\n                cursor: pointer;\n                &:after {\n                    display: inline-block;\n                    color: @white;\n                    font-size: 28px;\n                    .chevron-mixin;\n                }\n            }\n\n            &.expanded {\n                .double-chevron {\n                    &:after {\n                        .chevron-mixin(-1);\n                    }\n                }\n            }\n        }\n\n        border: 2px solid @borderGrey;\n\n        .rx-collapse-title {\n            display: inline-block;\n            margin: 0 10px;\n            vertical-align: middle;\n        }\n\n        .collapse-body {\n            margin: 0;\n            padding: 10px;\n        }\n    }\n    .sml-title {\n        cursor: pointer;\n        color: @cancel-gray;\n        font-size: 10pt;\n    }\n\n    .hide-border {\n        border: 0;\n    }\n}\n",
            "midway": "describe('rxCollapse', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxCollapse');\n    });\n\n    describe('custom title', encore.exercise.rxCollapse({\n        instance: encore.rxCollapse.initialize($('.demo-with-title')),\n        title: 'A Custom Title',\n        expanded: true\n    }));\n\n    describe('default title', encore.exercise.rxCollapse({\n        cssSelector: '.demo-no-title',\n        expanded: false\n    }));\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxCollapse = require('./rxCollapse.page').rxCollapse;\n\n/**\n   rxCollapse exercises.\n   @exports encore.exercise.rxCollapse\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxCollapse} [options.instance=] - Component to exercise.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @param {String} title - The title of the rxCollapse element.\n   @param {Boolean} expanded - Whether or not the rxCollapse element is currently expanded.\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxCollapse({\n       instance: myPage.hiddenSection, // select one of many widgets from your page objects\n       title: 'My Custom rxCollapse Element',\n       expanded: true\n   }));\n   ```\n */\nexports.rxCollapse = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        title: undefined,\n        expanded: false,\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxCollapse.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxCollapse.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should show the element', function () {\n            expect(component.isDisplayed()).to.eventually.be.true;\n        });\n\n        it('should expand', function () {\n            component.expand();\n            expect(component.isCollapsed()).to.eventually.be.false;\n            expect(component.isExpanded()).to.eventually.be.true;\n        });\n\n        it('should not expand again', function () {\n            component.expand();\n            expect(component.isCollapsed()).to.eventually.be.false;\n            expect(component.isExpanded()).to.eventually.be.true;\n        });\n\n        it('should collapse', function () {\n            component.collapse();\n            expect(component.isCollapsed()).to.eventually.be.true;\n            expect(component.isExpanded()).to.eventually.be.false;\n        });\n\n        it('should not collapse again', function () {\n            component.collapse();\n            expect(component.isCollapsed()).to.eventually.be.true;\n            expect(component.isExpanded()).to.eventually.be.false;\n        });\n\n        it('should toggle', function () {\n            component.toggle();\n            expect(component.isCollapsed()).to.eventually.be.false;\n            expect(component.isExpanded()).to.eventually.be.true;\n        });\n\n        if (!_.isUndefined(options.title)) {\n            it('should show a custom title', function () {\n                expect(component.title).to.eventually.equal(options.title);\n            });\n        } else {\n            it('should show \"See More\" for the title', function () {\n                component.collapse();\n                expect(component.title).to.eventually.equal('See More');\n            });\n\n            it('should toggle between \"See More\" and \"See Less\"', function () {\n                component.expand();\n                expect(component.title).to.eventually.equal('See Less');\n            });\n\n            it('should toggle between \"See Less\" and \"See More\"', function () {\n                component.collapse();\n                expect(component.title).to.eventually.equal('See More');\n            });\n        }\n\n        after(function () {\n            // put it back according to the options\n            options.expanded ? component.expand() : component.collapse();\n        });\n\n    };\n};\n"
        }
    },
    {
        "name": "rxCompile",
        "moduleName": "'encore.ui.rxCompile'",
        "displayName": "Rx Compile",
        "srcFiles": [
            "src/rxCompile/rxCompile.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Sep 25, 2015 @ 15:00 (UTC-0500)",
        "rawLastModified": "2015-09-25 15:00:33 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>A component that allows compilation of expressions inside of other expressions.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxCompileCtrl', function ($scope) {\n    $scope.world = 'wrrrld';\n    $scope.myExpression = 'Hello {{world}}';\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxCompileCtrl\">\n    <input type=\"text\" ng-model=\"world\">\n    <div rx-compile=\"myExpression\"></div>\n    <div>{{myExpression}}</div>\n</div>",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxDiskSize",
        "moduleName": "'encore.ui.rxDiskSize'",
        "displayName": "Rx Disk Size",
        "srcFiles": [
            "src/rxDiskSize/rxDiskSize.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Sep 25, 2015 @ 15:17 (UTC-0500)",
        "rawLastModified": "2015-09-25 15:17:07 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>Converts GB disk size into a more readable format (e.g. GBs, TBs, PBs)</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxDiskSizeCtrl', function ($scope) {\n    $scope.sizeGB = 420;\n    $scope.sizeTB = 125000;\n    $scope.sizePB = 171337000;\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxDiskSizeCtrl\">\n    <ul>\n        <li>{{sizeGB}} &rarr; {{sizeGB | rxDiskSize}}</li>\n        <li>{{sizeTB}} &rarr; {{sizeTB | rxDiskSize}}</li>\n        <li>{{sizePB}} &rarr; {{sizePB | rxDiskSize}}</li>\n    </ul>\n    <ul>\n        <li>{{sizeGB}} GB &rarr; {{sizeGB | rxDiskSize:'GB'}}</li>\n        <li>{{sizeTB}} GB &rarr; {{sizeTB | rxDiskSize:'TB'}}</li>\n        <li>{{sizePB}} GB &rarr; {{sizePB | rxDiskSize:'PB'}}</li>\n    </ul>\n</div>\n",
            "less": "",
            "midway": "var _ = require('lodash');\n\nvar diskSize = encore.rxDiskSize;\n\ndescribe('rxDiskSize', function () {\n    var diskSizesTable;\n    var diskSizeStrings = [\n        '420 GB',\n        '125 TB',\n        '171.337 PB',\n        '420 GB',\n        '125 TB',\n        '171.337 PB'\n    ];\n\n    before(function () {\n        demoPage.go('#/components/rxDiskSize');\n        diskSizesTable = $$('.component-demo ul li');\n    });\n\n    _.forEach(diskSizeStrings, function (testData, index) {\n        it('should still have ' + testData + ' as test data on the page', function () {\n            diskSizesTable.get(index).getText().then(function (text) {\n                var onPage = text.split('→')[1].trim();\n                expect(onPage).to.equal(testData);\n            });\n        });\n\n        it('should convert ' + testData + ' back to gigabytes', function () {\n            diskSizesTable.get(index).getText().then(function (text) {\n                var gigabytes = parseInt(text.split(' ')[0], 10);\n                expect(diskSize.toGigabytes(testData)).to.equal(gigabytes);\n            });\n        });\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxEnvironment",
        "moduleName": "'encore.ui.rxEnvironment'",
        "displayName": "Rx Environment",
        "srcFiles": [
            "src/rxEnvironment/rxEnvironment.module.js",
            "src/rxEnvironment/scripts/Environment.js",
            "src/rxEnvironment/scripts/rxEnvironmentMatch.js",
            "src/rxEnvironment/scripts/rxEnvironmentUrl.js",
            "src/rxEnvironment/scripts/rxIfEnvironment.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Nov 3, 2015 @ 15:43 (UTC-0600)",
        "rawLastModified": "2015-11-03 15:43:42 -0600",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>Component built to detect and provide the current environment (e.g. dev, staging, prod)</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxEnvironmentCtrl', function ($scope, Environment) {\n    $scope.Environment = Environment;\n});\n",
            "html": "<div ng-controller=\"rxEnvironmentCtrl\">\n    <p>Url built from Environment data: {{ { tld: 'cloudatlas', path: 'some/path' } | rxEnvironmentUrl }}</p>\n\n    <p>Content shows if on GitHub demo page:\n        <span rx-if-environment=\"ghPages\">\n            You're on the GitHub demo page\n        </span>\n    </p>\n\n    <p>Content shows if not on GitHub demo page:\n        <span rx-if-environment=\"!ghPages\">\n            You're not on the GitHub demo page\n        </span>\n    </p>\n\n    <p>\n    Are we in the <code>ghPages</code> environment? {{ 'ghPages' | rxEnvironmentMatch }}\n    </p>\n</div>\n",
            "less": "",
            "midway": "var environment = encore.rxEnvironment;\n\ndescribe('rxEnvironment', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxEnvironment');\n    });\n\n    it('should be on localhost', function () {\n        expect(environment.isLocalhost()).to.eventually.be.true;\n    });\n\n    it('should get the original environment', function () {\n        expect(environment.original()).to.eventually.equal('localhost');\n    });\n\n    it('should match the current environment', function () {\n        expect(environment.current()).to.eventually.equal('localhost');\n    });\n\n    it('should not change the original environment', function () {\n        browser.get('http://rackerlabs.github.io/encore-ui/#/overview');\n        expect(environment.original()).to.eventually.equal('localhost');\n    });\n\n    it('should change the current environment', function () {\n        expect(environment.current()).to.eventually.equal('staging');\n    });\n\n    it('should be on staging', function () {\n        expect(environment.isStaging()).to.eventually.be.true;\n    });\n\n    it('should still say the original location is localhost', function () {\n        expect(environment.isStaging({ useBaseUrl: true })).to.eventually.be.false;\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxFavicon",
        "moduleName": "'encore.ui.rxFavicon'",
        "displayName": "Rx Favicon",
        "srcFiles": [
            "src/rxFavicon/rxFavicon.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxEnvironment"
        ],
        "stability": "unstable",
        "lastModified": "Sep 25, 2015 @ 10:32 (UTC-0500)",
        "rawLastModified": "2015-09-25 10:32:14 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This component allows custom favicons between local, staging and production environments.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxFaviconCtrl', function ($scope, Environment) {\n    $scope.setEnvironment = function (environment) {\n        // TODO allow overriding the current environment to show how the favicon changes\n    };\n});\n",
            "html": "<div ng-controller=\"rxFaviconCtrl\">\n    <p>See favicon of this site for an example of this. On <a href=\"http://rackerlabs.github.io/encore-ui/\">the live site</a>, the favicon will be a dark blue book. On <a href=\"http://localhost:9001\">the local site</a>, it will be a light blue book.</p>\n\n    <link rel=\"icon\" type=\"image/png\" href=\"favicon.png\" rx-favicon=\"{ staging: 'staging-favicon.png', local: 'local-favicon.png' }\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"favicon.png\" rx-favicon=\"{ local: 'local-favicon.png' }\" />\n    <link rel=\"icon\" type=\"image/png\" href=\"favicon.png\" rx-favicon=\"{ staging: 'staging-favicon.png' }\" />\n</div>",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxFeedback",
        "moduleName": "'encore.ui.rxFeedback'",
        "displayName": "Rx Feedback",
        "srcFiles": [
            "src/rxFeedback/rxFeedback.module.js",
            "src/rxFeedback/scripts/feedbackTypes.js",
            "src/rxFeedback/scripts/rxFeedback.js",
            "src/rxFeedback/scripts/rxFeedbackController.js",
            "src/rxFeedback/scripts/rxFeedbackSvc.js",
            "src/rxFeedback/scripts/rxScreenshotSvc.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxFeedback/templates/feedbackForm.html",
            "templates/rxFeedback/templates/rxFeedback.html"
        ],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Nov 3, 2015 @ 15:56 (UTC-0600)",
        "rawLastModified": "2015-11-03 15:56:54 -0600",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxFeedback component gathers and sends user feedback to a default or specifiable email list.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxFeedbackCtrl', function ($scope, rxNotify) {\n    $scope.alwaysSucceed = function () {\n        rxNotify.add('Thanks for your feedback!', {\n            type: 'success',\n            timeout: 3\n        });\n    };\n\n    $scope.alwaysFail = function () {\n        rxNotify.add('Feedback not received!', {\n            type: 'error',\n            timeout: 3\n        });\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxFeedbackCtrl\">\n\n    <rx-feedback id=\"rxFeedback\"></rx-feedback>\n    <span class=\"subdued\">(Will fallback to default email client)</span>\n\n    <hr/>\n\n    <rx-feedback on-submit=\"alwaysSucceed\" id=\"rxFeedbackSucceeds\"></rx-feedback>\n    <span class=\"subdued\">(Will Succeed)</span>\n\n    <rx-feedback on-submit=\"alwaysFail\" id=\"rxFeedbackFails\"></rx-feedback>\n    <span class=\"subdued\">(Will Fail)</span>\n\n</div>\n",
            "less": "/*\n * rxFeedback\n */\n.rx-feedback-form .feedback-description {\n    .field-label,\n    .field-input,\n    .feedback-textarea {\n        display: block;\n        width: 100%;\n        float: none;\n    }\n\n    .field-input {\n        top: 0;\n        margin-top: 5px;\n    }\n\n    .feedback-textarea {\n        height: 10em;\n    }\n}",
            "midway": "var _ = require('lodash');\n\nvar feedback = encore.rxFeedback;\n\ndescribe('rxFeedback', function () {\n    var successfulFeedback, unsuccessfulFeedback;\n    var defaultFeedback = 'Software Bug';\n\n    before(function () {\n        demoPage.go('#/components/rxFeedback');\n        successfulFeedback = feedback.initialize($('#rxFeedbackSucceeds'));\n        unsuccessfulFeedback = feedback.initialize($('#rxFeedbackFails'));\n    });\n\n    it('should select the \"' + defaultFeedback + '\" feedback type by default', function () {\n        successfulFeedback.open();\n        expect(successfulFeedback.type).to.eventually.equal(defaultFeedback);\n    });\n\n    it('should have the default feedback description label for \"' + defaultFeedback + '\"', function () {\n        expect(successfulFeedback.descriptionLabel).to.eventually.equal('Bug Description:');\n    });\n\n    it('should have the default feedback placeholder text for \"' + defaultFeedback + '\"', function () {\n        var placeholder = 'Please be as descriptive as possible so we can track it down for you.';\n        expect(successfulFeedback.descriptionPlaceholder).to.eventually.equal(placeholder);\n    });\n\n    describe('feedback types and labels', function () {\n        var typesAndLabels = {\n            'Incorrect Data': {\n                descriptionLabel: 'Problem Description:',\n                descriptionPlaceholder: ['Please be as descriptive as possible ',\n                                         'so we can figure it out for you.'].join('')\n            },\n            'Feature Request': {\n                descriptionLabel: 'Feature Description:',\n                descriptionPlaceholder: ['Please be as descriptive as possible ',\n                                         'so we can make your feature awesome.'].join('')\n            },\n            'Kudos': {\n                descriptionLabel: 'What made you happy?:',\n                descriptionPlaceholder: ['We love to hear that you\\'re enjoying Encore! ',\n                                         'Tell us what you like, and what we can do to ',\n                                         'make it even better'].join('')\n            }\n        };\n\n        it('should have all feedback types', function () {\n            var types = [defaultFeedback].concat(_.keys(typesAndLabels));\n            expect(successfulFeedback.types).to.eventually.eql(types);\n        });\n\n        _.forEach(typesAndLabels, function (typeData, type) {\n            it('should switch feedback types', function () {\n                successfulFeedback.type = type;\n                expect(successfulFeedback.type).to.eventually.equal(type);\n            });\n\n            _.forEach(typeData, function (text, property) {\n                it('should have the correct label set for ' + property, function () {\n                    expect(successfulFeedback[property]).to.eventually.equal(text);\n                });\n            });\n\n        });\n\n    });\n\n    describe('submitting feedback', function () {\n\n        it('should successfully submit feedback', function () {\n            var send = function () {\n                var deferred = protractor.promise.defer();\n                deferred.fulfill(successfulFeedback.send('Software Bug', 'test', 3000));\n                return deferred.promise;\n            };\n            expect(send()).to.not.be.rejectedWith(Error);\n        });\n\n        it('should catch errors on unsuccessful feedback', function () {\n            var send = function () {\n                var deferred = protractor.promise.defer();\n                deferred.fulfill(unsuccessfulFeedback.send('Software Bug', 'test', 3000));\n                return deferred.promise;\n            };\n            browser.sleep(2000);\n            expect(send()).to.be.rejectedWith(Error);\n        });\n\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxFloatingHeader",
        "moduleName": "'encore.ui.rxFloatingHeader'",
        "displayName": "Rx Floating Header",
        "srcFiles": [
            "src/rxFloatingHeader/rxFloatingHeader.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxMisc",
            "rxSessionStorage"
        ],
        "stability": "experimental",
        "lastModified": "Oct 9, 2015 @ 11:27 (UTC-0500)",
        "rawLastModified": "2015-10-09 11:27:00 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p><code>rxFloatingHeader</code> component maintains the visibility of column titles in a table as a user scrolls down the page. </p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxFloatingHeaderCtrl', function ($scope) {\n    $scope.searchText = '';\n    $scope.data = [\n        { name: 'A', value: 1 },\n        { name: 'B', value: 2 },\n        { name: 'C', value: 3 },\n        { name: 'D', value: 4 },\n        { name: 'E', value: 5 },\n        { name: 'First', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'F', value: 1 },\n        { name: 'G', value: 2 },\n        { name: 'H', value: 3 },\n        { name: 'I', value: 4 },\n        { name: 'J', value: 5 },\n        { name: 'K', value: 1 },\n        { name: 'L', value: 2 },\n    ];\n\n    $scope.clearFilter = function () {\n        $scope.searchText = '';\n    };\n});\n",
            "html": "<table rx-floating-header class=\"no-filter\">\n    <thead>\n        <tr>\n            <th>Column One Header</th>\n            <th>Column Two Header</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>table1 data1</td>\n            <td>table1 data1</td>\n        </tr>\n        <tr>\n            <td>table1 data2</td>\n            <td>table1 data2</td>\n        </tr>\n        <tr>\n            <td>table1 data3</td>\n            <td>table1 data3</td>\n        </tr>\n        <tr class=\"middle-row\">\n            <td>table1 data4</td>\n            <td>table1 data4</td>\n        </tr>\n    </tbody>\n</table>\n\n  <p>\n  A common pattern is to include a filter with tables. You can have that as part of the floating header by setting\n  it in a separate `&lt;tr&gt;` element.\n  </p>\n\n\n<div ng-controller=\"rxFloatingHeaderCtrl\">\n    <table rx-floating-header class=\"filter\">\n        <thead>\n            <tr>\n                <th colspan=\"2\">\n                    <rx-search-box\n                        ng-model=\"searchText\"\n                        class=\"filter-box\"\n                        rx-placeholder=\"'Filter by any...'\"></rx-search-box>\n                </th>\n            </tr>\n            <tr>\n                <th>Column One Header</th>\n                <th>Column Two Header</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"datum in data | filter:searchText\" class=\"row_{{datum.value}}\" ng-class=\"{'middle-row': $index===2}\">\n                <td>{{datum.name}}</td>\n                <td>{{datum.value}}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n",
            "less": "/*\n * rxFloatingHeader\n */\n.rx-floating-header {\n    position: fixed;\n    z-index: 3;\n    opacity: 0.96;\n}\n\n\n// For tables with filters, style filter th differently\nth.filter-header {\n    font-weight: normal;\n    background: rgba(255, 255, 255, 0.95);\n    border: 1px solid #e1e0df;\n    input.filter-box {\n        color: #404040;\n    }\n    button {\n        margin: 0;\n    }\n    [rx-form] {\n        margin: 10px 0;\n        rx-form-section {\n            margin: 0;\n            rx-field {\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n\n// Batch actions menu is visible even when header floats\n// There's some black magic here. For whatever reason, we have to\n// add z-index:2 to the other rows in the header, *not* the row\n// that the batch actions menu lives in.\ntr.rx-floating-header:not(.rx-table-filter-row) {\n    z-index: 2;\n}\n\n// Added to accommodate dropdown boxes to display \"on top\" of rx-floating-header\n// components\nthead .rx-floating-header:first-child {\n    z-index: 3;\n}\n",
            "midway": "describe('rxFloatingHeader', function () {\n    var table, tr, middleRow, middleRowY, initialY;\n    var yTolerance = 2; // +/- pixel tolerance for Y value comparison\n    var lower, upper;\n    var actual;\n\n    before(function () {\n        demoPage.go('#/components/rxFloatingHeader');\n    });\n\n    describe('Single-row header table', function () {\n        before(function () {\n            table = $('table[rx-floating-header].no-filter');\n            tr = table.$('thead tr:first-of-type');\n            middleRow = table.$('.middle-row');\n            protractor.promise.all([middleRow.getLocation(), tr.getLocation()]).then(function (locations) {\n                middleRowY = locations[0].y;\n                initialY = locations[1].y;\n            });\n        });\n\n        it('should show element', function () {\n            expect(table.isDisplayed()).to.eventually.be.true;\n        });\n\n        describe('after scrolling to middle of table', function () {\n            before(function () {\n                encore.rxMisc.scrollToElement(middleRow);\n            });\n\n            it('should float header', function () {\n                actual = encore.rxMisc.transformLocation(tr, 'y');\n                lower = middleRowY - yTolerance;\n                upper = middleRowY + yTolerance;\n                expect(actual).to.eventually.be.within(lower, upper);\n            });\n\n            describe('after scrolling back to top', function () {\n                before(function () {\n                    encore.rxMisc.scrollToElement($('.page-titles'));\n                });\n\n                it('should put the header back', function () {\n                    actual = encore.rxMisc.transformLocation(tr, 'y');\n                    lower = initialY - yTolerance;\n                    upper = initialY + yTolerance;\n                    expect(actual).to.eventually.be.within(lower, upper);\n                });\n            });//after scrolling to top\n        });//after scrolling to middle\n    });//Single-row header table\n\n    describe('Multi-row header table', function () {\n        var filterHeader, titlesHeader, initialFilterY, filterHeight, windowSize;\n        var window = browser.driver.manage().window();\n        var trs;\n\n        before(function () {\n            // Set the height smaller so the header can float no matter the screen size\n            window.getSize().then(function (size) {\n                windowSize = size;\n                window.setSize(windowSize.width, 400);\n            });\n\n            table = $('table[rx-floating-header].filter');\n            trs = table.$$('thead tr');\n            filterHeader = trs.get(0);\n            titlesHeader = trs.get(1);\n            middleRow = table.$('.middle-row');\n            var locationPromises = [middleRow.getLocation(), filterHeader.getLocation(), filterHeader.getSize()];\n            protractor.promise.all(locationPromises).then(function (locations) {\n                middleRowY = locations[0].y;\n                initialFilterY = locations[1].y;\n                filterHeight = locations[2].height;\n            });\n        });\n\n        describe('after scrolling to middle of table', function () {\n            before(function () {\n                encore.rxMisc.scrollToElement(middleRow);\n            });\n\n            it('should float the header', function () {\n                actual = encore.rxMisc.transformLocation(filterHeader, 'y');\n                lower = middleRowY - yTolerance;\n                upper = middleRowY + yTolerance;\n                expect(actual).to.eventually.be.within(lower, upper);\n            });\n\n            it('should have correct distance between float header and middle of table', function () {\n                actual = encore.rxMisc.transformLocation(titlesHeader, 'y');\n                lower = middleRowY + filterHeight - yTolerance;\n                upper = middleRowY + filterHeight + yTolerance;\n                expect(actual).to.eventually.be.within(lower, upper);\n            });\n        });//after scrolling to middle of table\n\n        describe('when given an ElementArrayFinder', function () {\n            before(function () {\n                encore.rxMisc.scrollToElement(trs);\n            });\n\n            it('should scroll to the first element', function () {\n                actual = encore.rxMisc.transformLocation(filterHeader, 'y');\n                lower = initialFilterY - yTolerance;\n                upper = initialFilterY + yTolerance;\n                expect(actual).to.eventually.be.within(lower, upper);\n            });\n\n            it('should have correct distance between title header and initial starting point', function () {\n                actual = encore.rxMisc.transformLocation(titlesHeader, 'y');\n                lower = initialFilterY + filterHeight - yTolerance;\n                upper = initialFilterY + filterHeight + yTolerance;\n                expect(actual).to.eventually.be.within(lower, upper);\n            });\n        });\n\n        after(function () {\n            // Return window to original size\n            window.setSize(windowSize.width, windowSize.height);\n        });\n    });//Multi-row header table\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxForm",
        "moduleName": "'encore.ui.rxForm'",
        "displayName": "Rx Form",
        "srcFiles": [
            "src/rxForm/rxForm.module.js",
            "src/rxForm/scripts/rxField.js",
            "src/rxForm/scripts/rxFieldContent.js",
            "src/rxForm/scripts/rxFieldName.js",
            "src/rxForm/scripts/rxForm.js",
            "src/rxForm/scripts/rxFormFieldset.js",
            "src/rxForm/scripts/rxFormItem.js",
            "src/rxForm/scripts/rxFormSection.js",
            "src/rxForm/scripts/rxFormUtils.js",
            "src/rxForm/scripts/rxHelpText.js",
            "src/rxForm/scripts/rxInlineError.js",
            "src/rxForm/scripts/rxInput.js",
            "src/rxForm/scripts/rxPrefix.js",
            "src/rxForm/scripts/rxSuffix.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxForm/templates/rxFieldName.html",
            "templates/rxForm/templates/rxFormFieldset.html",
            "templates/rxForm/templates/rxFormItem.html"
        ],
        "dependencies": [
            "rxMisc",
            "rxSessionStorage"
        ],
        "stability": "unstable",
        "lastModified": "Nov 2, 2015 @ 13:30 (UTC-0600)",
        "rawLastModified": "2015-11-02 13:30:26 -0600",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p><code>rxForm</code> component is used to create forms throughout Encore.  It provides common HTML layout and style for all form\nelements, which helps ensure form accessibility and makes creating advanced forms easier.</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxFormDemoCtrl', function ($scope) {\n    /* ========== DATA ========== */\n    $scope.volumeTypes = [\n        {\n            'value': 'SATA',\n            'label': 'SATA'\n        },\n        {\n            'value': 'SSD',\n            'label': 'SSD'\n        },\n        {\n            'value': 'CD',\n            'label': 'CD'\n        },\n        {\n            'value': 'DVD',\n            'label': 'DVD'\n        },\n        {\n            'value': 'BLURAY',\n            'label': 'BLURAY'\n        },\n        {\n            'value': 'TAPE',\n            'label': 'TAPE'\n        },\n        {\n            'value': 'FLOPPY',\n            'label': 'FLOPPY'\n        },\n        {\n            'value': 'LASERDISC',\n            'label': 'LASERDISC'\n        },\n        {\n            'value': 'JAZDRIVE',\n            'label': 'JAZDRIVE'\n        },\n        {\n            'value': 'PUNCHCARDS',\n            'label': 'PUNCHCARDS'\n        },\n        {\n            'value': 'RNA',\n            'label': 'RNA'\n        }\n    ];\n\n    $scope.services = [\n        {\n            'value': 'good',\n            'label': 'Good Service'\n        },\n        {\n            'value': 'cheap',\n            'label': 'Cheap Service'\n        },\n        {\n            'value': 'fast',\n            'label': 'Fast Service'\n        },\n        {\n            'value': 'custom',\n            'label': 'Custom Service'\n        }\n    ];\n\n    $scope.beatles = [\n        'Paul McCartney',\n        'John Lennon',\n        'Ringo Starr',\n        'George Harrison'\n    ];\n\n    $scope.nevers = [\n        'Give you up',\n        'Let you down',\n        'Run around',\n        'Desert you',\n        'Make you cry',\n        'Say goodbye',\n        'Tell a lie',\n        'Hurt you'\n    ];\n\n    $scope.optionTableData = [\n        {\n            'id': 'option1_id',\n            'name': 'Option #1',\n            'value': 0,\n            'obj': {\n                'name': 'Nested Name 1'\n            }\n        }, {\n            'id': 'option2_id',\n            'name': 'Option #2',\n            'value': 1,\n            'obj': {\n                'name': 'Nested Name 2'\n            }\n        }, {\n            'id': 'option3_id',\n            'name': 'Option #3',\n            'value': 2,\n            'obj': {\n                'name': 'Nested Name 3'\n            }\n        }, {\n            'id': 'option4_id',\n            'name': 'Option #4',\n            'value': 3,\n            'obj': {\n                'name': 'Nested Name 4'\n            }\n        }\n    ];\n\n    $scope.optionTableColumns = [\n        {\n            'label': 'Name',\n            'key': 'name',\n            'selectedLabel': '(Already saved data)'\n        }, {\n            'label': 'Static Content',\n            'key': 'Some <strong>Text &</strong> HTML'\n        }, {\n            'label': 'Expression 2',\n            'key': '{{ value * 100 | number:2 }}'\n        }, {\n            'label': 'Expression 3',\n            'key': '{{ obj.name | uppercase }}'\n        }, {\n            'label': 'Expression 4',\n            'key': '{{ value | currency }}'\n        }\n    ];\n\n    $scope.optionTableCheckboxData = [\n        {\n            'name': 'Item 1'\n        }, {\n            'name': 'Item 2',\n            'value': 'checked',\n            'falseValue': 'unchecked'\n        }\n    ];\n\n    $scope.optionTableEmptyData = [];\n\n    /* ========== FUNCTIONS ========== */\n    $scope.disableOption = function (tableId, fieldId, rowId) {\n        return rowId === 'option4_id';\n    };\n\n    /* ========== FORM MODELS ========== */\n    $scope.simple = {\n        userEmail: '',\n        isNameRequired: true, // TODO: use this for rxFieldName \"required\" midway tests // TODO: remove this comment after completed\n        volumeName: ''\n    };\n\n    $scope.intermediate = {\n        volumeType: _.first($scope.volumeTypes).value, // select the first type by default\n        services: [],\n        favoriteBeatle: 'all',\n        settings: {\n            first: true,\n            second: false,\n            third: true,\n            fourth: false\n        },\n        table: {\n            radio: 0,\n            checkbox: [true, 'unchecked'], // example with first checkbox automatically checked\n            empty: [true, 'unchecked']\n        }\n    };\n\n    $scope.advanced = {\n        radChoice: 'default',\n        inputEnabled: false\n    };\n});\n\n// A dummy directive only used within the rxForm demo page.\n// It's used to check that some string contains 'foo', and works\n// with ngForm to set the appropriate `.$error` value\n// Note: This code is easier to write in Angular 1.3, because\n// you can use `.$validators` instead of `.$parsers`\nangular.module('encore.ui.rxForm')\n.directive('foocheck', function () {\n    return {\n        require: 'ngModel',\n        link: function (scope, elm, attrs, ctrl) {\n            // Put a new validator on the beginning\n            ctrl.$parsers.unshift(function (viewValue) {\n                if (_.contains(viewValue, 'foo')) {\n                    ctrl.$setValidity('foocheck', true);\n                    return viewValue;\n                } else {\n                    ctrl.$setValidity('foocheck', false);\n                    return undefined;\n                }\n            });\n        }\n    };\n});\n",
            "html": "<div ng-controller=\"rxFormDemoCtrl\">\n  <form rx-form name=\"demoForm\" style=\"max-width: 1100px\">\n    <h2>Simple Controls</h2>\n\n    <h3>Text Inputs</h3>\n    <rx-help-text>\n      Three <code>rx-field</code> elements each consume between 250px and 1/3 of the width.\n    </rx-help-text>\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name id=\"fieldNamePlainTextbox\">Plain Textbox:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\" id=\"txtPlain\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>IP Address:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input name=\"ipaddress\"\n              type=\"text\"\n              disabled\n              placeholder=\"127.0.0.1\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Monthly Cost:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-prefix>$</rx-prefix>\n            <input type=\"number\" />\n            <rx-suffix>million</rx-suffix>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <h2>Text Area</h2>\n    <rx-help-text>\n      One <code>rx-field</code> element consumes the full width.\n    </rx-help-text>\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name>Life Story:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <textarea name=\"lifeStory\" rows=\"10\"></textarea>\n          </rx-input>\n          <rx-help-text>\n            The <code>cols</code> attribute is moot, CSS will handle the width.\n          </rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n\n    <h2>Intermediate Controls</h2>\n\n    <h3>Text Inputs With Validation</h3>\n    <rx-help-text>\n      Two <code>rx-field</code> elements each consume between 250px and 1/2 of the width.\n    </rx-help-text>\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name\n          ng-required=\"simple.isNameRequired\"\n          id=\"fieldNameVolumeName\">Volume Name:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\"\n              id=\"txtVolumeName\"\n              name=\"txtVolumeName\"\n              ng-model=\"simple.volumeName\"\n              ng-required=\"simple.isNameRequired\"\n              ng-pattern=\"/^\\b(\\w)?(\\w)\\w?\\2\\1$/\" />\n          </rx-input>\n          <rx-help-text>Must be 2-5 letter palindrome (e.g. 'dewed')</rx-help-text>\n          <rx-help-text>Bound Value: {{simple.volumeName}}</rx-help-text>\n\n          <rx-input>\n            <input rx-checkbox\n              id=\"chkVolumeNameRequired\"\n              ng-model=\"simple.isNameRequired\" />\n            <label for=\"chkVolumeNameRequired\">\n              Check and uncheck with empty volume name to see border\n            </label>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Email Address:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input name=\"userEmail\" type=\"email\" ng-model=\"simple.userEmail\" foocheck />\n          </rx-input>\n\n          <rx-help-text>Must contain foo.</rx-help-text>\n\n          <rx-inline-error ng-show=\"demoForm.userEmail.$error.email\">Invalid Email</rx-inline-error>\n          <rx-inline-error ng-show=\"demoForm.userEmail.$error.foocheck\">Your email must contain 'foo'</rx-inline-error>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <h3>Drop-Down Selection</h3>\n    <rx-form-section>\n      <!-- rxSelect -->\n      <rx-field>\n        <h4>Single Selection</h4>\n        <rx-field-name>Volume Type:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <select rx-select ng-model=\"intermediate.volumeType\" id=\"selVolumeType\">\n              <option ng-repeat=\"type in volumeTypes\"\n                value=\"{{type.value}}\"\n                ng-selected=\"{{type.value == model}}\">{{type.label}}</option>\n            </select>\n          </rx-input>\n          <rx-help-text>Bound Value: {{intermediate.volumeType}}</rx-help-text>\n        </rx-field-content>\n      </rx-field>\n\n      <!-- rxMultiSelect -->\n      <rx-field>\n        <h4>Multiple Selection</h4>\n        <rx-field-name>Service Options:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-multi-select ng-model=\"intermediate.services\" id=\"mselServices\">\n              <rx-select-option ng-repeat=\"service in services\" value=\"{{service.value}}\">{{service.label}}</rx-select-option>\n            </rx-multi-select>\n          </rx-input>\n          <rx-help-text>Bound Value: {{intermediate.services}}</rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <h3>Input Groups</h3>\n    <rx-form-section>\n      <!-- rxRadio -->\n      <rx-field>\n        <h4>Radio Group</h4>\n        <rx-field-name>Favorite Beatles Member:</rx-field-name>\n        <rx-field-content>\n          <rx-input ng-repeat=\"beatle in beatles\">\n            <input rx-radio\n              name=\"favBeatle\"\n              id=\"favBeatle_{{$index}}\"\n              value=\"{{beatle}}\"\n              ng-model=\"intermediate.favoriteBeatle\" />\n            <label for=\"favBeatle_{{$index}}\">{{beatle}}</label>\n          </rx-input>\n          <rx-input>\n            <input rx-radio\n              name=\"favBeatle\"\n              id=\"favBeatle_all\"\n              value=\"all\"\n              ng-model=\"intermediate.favoriteBeatle\" />\n            <label for=\"favBeatle_all\">All of the above</label>\n          </rx-input>\n          <rx-input>\n            <input rx-radio\n              name=\"favBeatle\"\n              id=\"favBeatle_none\"\n              value=\"none\"\n              disabled\n              ng-model=\"intermediate.favoriteBeatle\" />\n            <label for=\"favBeatle_none\">None of the above</label>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <!-- rxCheckbox -->\n      <rx-field>\n        <h4>Checkbox Group</h4>\n        <rx-field-name>Rick Astley Will Never:</rx-field-name>\n        <rx-field-content>\n          <rx-input ng-repeat=\"never in nevers\">\n            <input rx-checkbox\n              id=\"chkNever_{{$index}}\"\n              checked\n              value=\"{{never}}\" />\n            <label for=\"chkNever_{{$index}}\">{{never}}</label>\n          </rx-input>\n          <rx-input>\n            <input rx-checkbox\n              id=\"chkNever_all\"\n              value=\"all\"\n              checked\n              disabled />\n            <label for=\"chkNever_all\">All of the above</label>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <!-- rxToggleSwitch -->\n      <rx-field>\n        <h4>Toggle Switches</h4>\n        <rx-field-name>Settings:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-prefix>\n              <rx-toggle-switch\n                id=\"setting1\"\n                ng-model=\"intermediate.settings.first\"\n                ></rx-toggle-switch>\n              <label for=\"setting1\">Setting 1</label>\n            </rx-prefix>\n          </rx-input>\n\n          <rx-input>\n            <rx-prefix>\n              <rx-toggle-switch\n                id=\"setting2\"\n                ng-model=\"intermediate.settings.second\"\n                ></rx-toggle-switch>\n              <label for=\"setting2\">Setting 2</label>\n            </rx-prefix>\n          </rx-input>\n\n          <rx-input>\n            <rx-prefix>\n              <rx-toggle-switch\n                id=\"setting3\"\n                ng-model=\"intermediate.settings.third\"\n                disabled=\"true\"\n                ></rx-toggle-switch>\n              <label for=\"setting3\">Setting 3</label>\n            </rx-prefix>\n          </rx-input>\n\n          <rx-input>\n            <rx-prefix>\n              <rx-toggle-switch\n                id=\"setting4\"\n                ng-model=\"settings.fourth\"\n                disabled=\"true\"\n                ></rx-toggle-switch>\n              <label for=\"setting4\">Setting 4</label>\n            </rx-prefix>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <h3>rxOptionTable</h3>\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name>Radio Option Table</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-option-table\n                id=\"radioOptionTable\"\n                data=\"optionTableData\"\n                columns=\"optionTableColumns\"\n                type=\"radio\"\n                model=\"intermediate.table.radio\"\n                field-id=\"optionTable\"\n                selected=\"0\"\n                class=\"full-width\"\n                disable-fn=\"disableOption(tableId, fieldId, rowId)\"\n                ></rx-option-table>\n          </rx-input>\n          <rx-help-text>Bound Value: {{intermediate.table.radio}}</rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name>Checkbox Option Table</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-option-table\n                columns=\"optionTableColumns\"\n                type=\"checkbox\"\n                id=\"checkboxOptionTable\"\n                model=\"intermediate.table.checkbox\"\n                field-id=\"optionCheckboxTable\"\n                data=\"optionTableCheckboxData\"\n                required=\"true\"\n                ></rx-option-table>\n          </rx-input>\n          <rx-help-text ng-repeat=\"val in intermediate.table.checkbox\">\n            Item {{$index + 1}} Value: {{val}}\n          </rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name>Empty Option Table</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-option-table\n                columns=\"optionTableColumns\"\n                type=\"checkbox\"\n                id=\"emptyOptionTable\"\n                model=\"intermediate.table.empty\"\n                field-id=\"optionCheckboxTable\"\n                data=\"optionTableEmptyData\"\n                empty-message=\"You don't have any data!\"\n                ></rx-option-table>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n\n    <h2>Advanced Controls</h2>\n    <h3>With <code>stacked</code> section attribute</h3>\n    <rx-help-text>\n      To obtain a stacked layout, place the <code>stacked</code>\n      attribute on <code>rx-form-section</code>.\n    </rx-help-text>\n\n    <rx-form-section stacked>\n      <!-- Radio Option + Select -->\n      <rx-field>\n        <rx-field-name>Radio + Select</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-prefix>\n              <input rx-radio\n              id=\"radDefault\"\n              name=\"radAdvanced\"\n              ng-model=\"advanced.radChoice\"\n              value=\"default\" />\n              <label for=\"radDefault\">Default</label>\n            </rx-prefix>\n          </rx-input>\n          <rx-input>\n            <rx-prefix>\n              <input rx-radio\n                   id=\"radCustom\"\n                   name=\"radAdvanced\"\n                   ng-model=\"advanced.radChoice\"\n                   value=\"custom\" />\n              <label for=\"radCustom\">Custom:</label><br />\n            </rx-prefix>\n            <select rx-select ng-disabled=\"advanced.radChoice !== 'custom'\">\n              <option>Option 1</option>\n              <option>Option 2</option>\n              <option>Option 3</option>\n            </select>\n          </rx-input>\n          <rx-help-text>\n            Useful for condensing large radio groups.\n          </rx-help-text>\n        </rx-field-content>\n      </rx-field>\n\n      <!-- Checkbox + Text -->\n      <rx-field>\n        <rx-field-name>Checkbox + Text Input</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-prefix>\n              <input rx-checkbox ng-model=\"advanced.inputEnabled\" />\n              <label>Label:</label>\n            </rx-prefix>\n            <input type=\"text\"\n                   ng-disabled=\"!advanced.inputEnabled\"\n                   placeholder=\"Enter Text\" />\n          </rx-input>\n          <rx-help-text>\n            Useful for if you want the user to add an optional value, but displaying\n            the field as disabled by default.\n          </rx-help-text>\n        </rx-field-content>\n      </rx-field>\n\n    </rx-form-section>\n\n    <h3>With <code>controlled-width</code> section attribute</h3>\n    <rx-help-text>\n      To prevent fields from taking up too much horizontal space, use the <code>controlled-width</code> attribute on <code>rx-form-section</code>.\n      The fields will still stack if horizontal space is constrained, but they will not exceed a reasonable field width.\n    </rx-help-text>\n    <rx-form-section controlled-width>\n      <!-- Dropdown + Text + Dropdown -->\n      <rx-field>\n        <rx-field-name>Name:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-prefix>\n              <select rx-select>\n                <option></option>\n                <option>Mr.</option>\n                <option>Mrs.</option>\n                <option>Ms.</option>\n              </select>\n            </rx-prefix>\n            <input type=\"text\" />\n            <rx-suffix>\n              <select rx-select>\n                <option></option>\n                <option>Jr.</option>\n                <option>Sr.</option>\n              </select>\n            </rx-suffix>\n          </rx-input>\n          <rx-help-text>Dropdown + Text Input + Dropdown</rx-help-text>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Search Box:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <rx-search-box\n              ng-model=\"demoSearch\"\n              rx-placeholder=\"'Filter by...'\"></rx-search-box>\n          </rx-input>\n          <rx-help-text>\n            Using <code>rx-search-box</code>.\n          </rx-help-text>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <h2>Advanced Text Area</h2>\n    <h3 class=\"subdued\">With additional info side-by-side.</h3>\n    <rx-form-section>\n      <rx-field>\n        <rx-field-name\n          id=\"fieldNameRequiredTextarea\"\n          ng-required=\"true\">Required Textarea:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <textarea\n              name=\"lifeStory\"\n              rows=\"10\"\n              ng-required=\"true\"\n              ng-model=\"lifeStory\"\n              rx-character-count></textarea>\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <div>\n        <rx-help-text>\n          <p>Oh look! It's using <code>rx-character-count</code></p>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempus id ligula sit amet rhoncus. Quisque semper mi vel tortor sodales, eget dapibus turpis consectetur. Ut tristique nibh porttitor diam porta finibus. Vivamus porttitor ligula sed ipsum rhoncus, id lobortis ex volutpat. Ut ut metus erat. Nam et convallis enim. Proin efficitur quam tortor, vitae hendrerit libero auctor ac. Sed vitae lobortis quam, quis commodo metus. Vestibulum felis arcu, consectetur ut vulputate nec, commodo ut odio.</p>\n        </rx-help-text>\n        <span ng-if=\"demoForm.lifeStory.$dirty\">\n          <rx-inline-error ng-show=\"demoForm.lifeStory.$error.required\">Cannot Be Blank</rx-inline-error>\n        </span>\n      </div>\n    </rx-form-section>\n\n    <!-- form actions, no special class required -->\n    <h2>Form Actions</h2>\n    <rx-help-text>No CSS class required</rx-help-text>\n    <rx-form-section>\n      <div>\n        <button class=\"button submit\" type=\"submit\">Submit Form</button>\n        <button class=\"button cancel\" type=\"submit\">Cancel</button>\n      </div>\n    </rx-form-section>\n  </form>\n</div>\n",
            "less": "/*\n * rxForm\n */\n\n@import 'vars';\n@import 'mixins';\n\n/* Form Fields & Fieldsets */\n\n// deprecated\n.rx-form {\n    margin: 15px 0 0;\n}\n\n// deprecated\n.form-item {\n    margin-top: 5px;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: baseline;\n}\n\n// deprecated\n.text-area-label {\n    &.form-item {\n        align-items: flex-start;\n    }\n}\n\n// deprecated\n.rx-form-fieldset > fieldset {\n    width: 100%;\n    .full-width .rx-option-table {\n        width: 100%;\n    }\n}\n\n// deprecated\n.form-description,\n.form-item {\n    margin-bottom: 15px;\n}\n\n// deprecated\n.field-label,\n.field-legend {\n    color: @inputLabelColor;\n    font-size: 1.1em;\n    flex: 0 0 @inputLabelWidth;\n}\n\n// deprecated\n.field-content {\n    display: flex;\n    flex: 1 auto;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-items: center;\n\n    .field-prefix,\n    .field-suffix {\n        font-size: 1.2em;\n    }\n    .field-prefix {\n        margin-right: 5px;\n    }\n    .field-suffix {\n        margin-left: 5px;\n    }\n\n    .field-description {\n        flex: 1 100%;\n        font-size: 0.8em;\n        font-style: italic;\n        margin-top: 5px;\n    }\n}\n\n/* Input fields */\n// deprecated\n.field-input {\n    input,\n    select {\n        color: @inputColor;\n        font-size: 1.2em;\n\n        &.ng-invalid.ng-dirty {\n            border-color: @inputBorderColorInvalid;\n        }\n    }\n\n    input,\n    .field-select {\n        background: @white;\n        max-width: 100%;\n        box-sizing: border-box;\n    }\n\n    textarea {\n        .inputBorderPadding;\n        background-color: @white;\n        width: 100%;\n        position: relative;\n        z-index: 2;\n        box-sizing: border-box;\n    }\n\n    input {\n        width: @inputWidth;\n        .inputBorderPadding;\n\n        &[type=\"number\"] {\n            width: @inputNumberWidth;\n        }\n\n        &[type=\"radio\"],\n        &[type=\"checkbox\"] {\n            width: auto;\n            max-width: none;\n            font-size: 1em;\n            vertical-align: middle;\n        }\n\n        &[disabled] {\n            color: @inputColorDisabled;\n            background-color: @inputBackgroundDisabled;\n            cursor: not-allowed;\n        }\n    }\n}\n\n/*\n * @bugfix Input field is marked as invalid before a user has done anything on form\n * @browsers FF\n * @see http://stackoverflow.com/questions/17209057/firefox-draws-red-border-on-required-select-box\n */\n// NOTE: KEEP\n.ng-pristine .field-input .ng-invalid-required {\n    box-shadow: none;\n}\n\n\n/* Inline error messages */\n// deprecated\n.field-input-wrapper {\n    .inline-error {\n        color: #ff2400;\n        font-weight: 900;\n        margin-top: 5px;\n    }\n}\n\n/* Dropdowns */\n// deprecated\n.field-select {\n    display: inline-block;\n    position: relative;\n    width: @inputSelectWidth;\n\n    select {\n        width: 100%;\n        margin: 0;\n        .border-radius(0px);\n        background: #fff;\n        border: none;\n        outline: none;\n        display: inline-block;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        cursor: pointer;\n        .inputBorderPadding;\n    }\n\n    &:before {\n        // background so long text doesn't show behind caret\n        content: '';\n        right: 1px;\n        top: 1px;\n        width: 20px;\n        height: 93%;\n        background: #fff;\n        position: absolute;\n        pointer-events: none;\n        display: block;\n    }\n\n    &:after {\n        // down caret from font awesome\n        content: '\\f0d7';\n        font-family: FontAwesome;\n        font-size: 15px;\n        color: #aaa;\n        right: 10px;\n        top: 7px;\n        padding: 0;\n        position: absolute;\n        pointer-events: none;\n    }\n}\n\n// User select element in Account section of nav\n\n.rx-app-nav-item .field-select {\n    select {\n        background: #404140;\n        border: 1px solid #3a3a3a;\n    }\n    &:before {\n        background: #404140;\n    }\n    &:after {\n        right: 10px;\n        top: 5px;\n    }\n}\n\n.account-users {\n    float: right;\n    box-sizing: border-box;\n    width: 50%;\n    select {\n        .border-radius(0px);\n    }\n}\n\n/* Submit buttons */\n\n.form-actions {\n    padding: 20px 0;\n}\n\n// DEPRECATED - UNUSED\n.form-action {\n    // override default button styles\n    background: transparent;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    cursor: pointer;\n    font-size: 1.2em;\n\n    &.submit {\n        color: @actionGreen;\n        margin-right: 1em;\n        &:hover,\n        &:focus {\n            color: @actionGreenHover;\n        }\n        &[disabled] {\n            color: @subduedText;\n            cursor: not-allowed;\n        }\n    }\n    &.cancel {\n        color: @subduedText;\n        &:hover,\n        &:focus {\n            color: @subduedTextHover;\n        }\n    }\n}\n\n\n/* Compressed Layout */\n// DEPRECATED - No longer valid\n.rx-form.layout-compressed {\n    .rx-form-row {\n        display: flex;\n        flex-wrap: nowrap;\n        flex: 1 auto;\n\n        .form-item {\n            padding: 0px 3px;\n            flex: 1;\n        }\n    }\n\n    .form-item {\n        display: block;\n\n        .field-input {\n            width: 100%;\n            display: block;\n\n            select,\n            textarea {\n                width: 100%;\n            }\n\n            input {\n                &:not([type=\"checkbox\"]),\n                &:not([type=\"radio\"]) {\n                    width: 100%;\n                }\n\n                &[type=\"checkbox\"],\n                &[type=\"radio\"] {\n                    width: 1em;\n                }\n            }\n        }\n\n        .field-label,\n        .field-legend {\n            font-size: 0.8em;\n            display: block;\n        }\n    }\n\n    // This is selecting based off of the element so that we can be sure to set\n    // this if there is a prefix OR a suffix set. We can't assume they'll both\n    // always be there.\n    rx-form-item[suffix],\n    rx-form-item[prefix] {\n        .field-input {\n            display: inline-block;\n            width: auto;\n        }\n    }\n}\n\n\n/* NEW rxForm \"2.0\" STYLES  */\ninput,\ntextarea,\nselect {\n    box-sizing: border-box;\n    border: none;\n    outline: none;\n}\n\n[rx-form],\nrx-form-section,\nrx-field,\nrx-field-name,\nrx-field-content,\nrx-input,\nrx-inline-error,\nrx-help-text {\n    box-sizing: border-box;\n    display: block;\n    margin: 0px;\n    padding: 0px;\n}\n\nrx-inline-error {\n    color: @inputColorError;\n    font-weight: 900;\n}\n\nrx-help-text {\n    font-size: 0.8em;\n    font-style: italic;\n    margin: 1em 0em;\n}\n\nrx-field-name {\n    color: @rxFieldName-color;\n    font-size: @rxFieldName-font-size;\n\n    .wrapper {\n        box-sizing: border-box;\n        margin: 0px;\n        padding: 0px;\n\n        .required-symbol {\n            font-weight: 900;\n            color: @rxFieldName-symbol-color;\n        }\n    }\n}//rx-field-name\n\n[rx-form] {\n    font-size: @rxForm-font-size;\n    margin: @rxForm-gutter 0;\n\n    rx-field-name,\n    rx-help-text,\n    rx-inline-error,\n    rx-input {\n        margin-bottom: (@rxForm-gutter / 2);\n\n        &:last-child { margin-bottom: 0px; }\n    }\n\n    rx-form-section {\n        // as flex container\n        display: flex;\n        flex-flow: row wrap;\n        justify-content: flex-start;\n\n        margin: 0px (@rxForm-gutter / 2);\n\n        & > div,\n        rx-field {\n            margin: 0px (@rxForm-gutter / 2) (@rxForm-gutter * 1.25);\n\n            // http://www.w3.org/TR/css3-flexbox/images/rel-vs-abs-flex.svg\n            // as dynamic flex item (3rd arg acts like min-width)\n            flex: 1 0 @rxForm-field-min-width;\n        }\n\n        rx-field {\n            // as flex container\n            display: flex;\n            flex-flow: column nowrap;\n            justify-content: flex-start;\n\n            rx-field-content {\n                flex: 1 0 auto; // as flex item\n                margin-bottom: @rxForm-gutter;\n\n                &:last-child {\n                    margin-bottom: 0px;\n                }\n\n                .validInput() {\n                    padding: 3px 5px;\n                    border: 1px solid @rxForm-input-border-color;\n                }//.validInput()\n\n                .invalidInput() {\n                    border: 2px solid @inputBorderColorInvalid;\n                    // MUST differ with valid padding by 1px to\n                    // account for thicker border\n                    padding: 2px 4px;\n                }//.invalidInput()\n\n                .disabledInput() {\n                    border: 1px solid @rxForm-input-border-color;\n                    color: @inputColorDisabled;\n                    background: @inputBackgroundDisabled;\n                    cursor: not-allowed !important;\n                }//.disabledInput()\n\n                rx-input {\n                    // as a flex container\n                    display: flex;\n                    flex-flow: row nowrap;\n                    justify-content: flex-start;\n                    align-items: stretch;\n\n                    & > input,\n                    & > textarea {\n                        flex: 1 1 auto; // as dynamic flex item\n\n                        min-height: @rxForm-input-min-height;\n\n                        &, &.ng-valid {\n                            .validInput();\n                        }\n\n                        &.ng-invalid.ng-dirty {\n                            .invalidInput();\n\n                            // DISABLED STYLING\n                            // (these should trump all other styles)\n                            &[disabled] {\n                                .disabledInput();\n                            }\n                        }\n\n                        // DISABLED STYLING\n                        // (these should trump all other styles)\n                        &[disabled] {\n                            .disabledInput();\n                        }\n                    }\n\n                    rx-prefix,\n                    rx-suffix {\n                        box-sizing: border-box;\n                        min-height: @rxForm-input-min-height;\n                        padding: 0px (@rxForm-gutter / 4);\n                        flex: 0 0 auto; // as static flex item\n\n                        // as flex container\n                        display: flex;\n                        align-items: center; // content is vertically centered\n                    }\n\n                    rx-prefix:first-child {\n                        padding-left: 0px;\n                    }\n                    rx-suffix:last-child {\n                        padding-right: 0px;\n                    }\n\n                    /* ===== Other Directive Support ===== */\n                    .rxSelect {\n                        flex: 1 1 auto; // as dynamic flex item\n                    }\n\n                    .rxCheckbox,\n                    .rxRadio,\n                    rx-toggle-switch {\n                        flex: 0 0 auto; // as static flex item\n\n                        & + label {\n                            margin-left: 5px;\n                        }\n                    }\n\n                    .rxCheckbox,\n                    .rxRadio,\n                    rx-toggle-switch {\n                        &[disabled] + label {\n                            color: @inputColorDisabled;\n                        }\n                    }\n\n                    .rx-option-table {\n                        table-layout: fixed;\n                        width: 100%;\n                    }\n\n                    // rxCharacterCount support\n                    .counted-input-wrapper {\n                        flex: 1 0;\n\n                        input,\n                        textarea {\n                            width: 100%;\n\n                            .validInput();\n\n                            &.ng-invalid.ng-dirty {\n                                .invalidInput();\n\n                                // DISABLED STYLING\n                                // (these should trump all other styles)\n                                &[disabled] {\n                                    .disabledInput();\n                                }\n                            }\n\n                            // DISABLED STYLING\n                            // (these should trump all other styles)\n                            &[disabled] {\n                                .disabledInput();\n                            }\n                        }\n                    }\n\n                    rx-search-box {\n                        flex: 1 1;\n                    }\n                }//rx-input\n            }//rx-field-content\n        }//rx-field\n\n        // replaces .form-actions\n        // [rx-form] > rx-form-section > div\n        & > div {\n            margin-top: (@rxForm-gutter / 2);\n\n            .button {\n                margin: 2px;\n\n                &:first-of-type {\n                    margin-left: 0px;\n                }\n                &:last-of-type {\n                    margin-right: 0px;\n                }\n            }\n        }\n\n        &[stacked] {\n            flex-flow: column nowrap;\n\n            & > div,\n            rx-field {\n                flex: 1 0; // grows vertically, does not shrink\n                max-width: @rxForm-field-max-width;\n                margin-bottom: (@rxForm-gutter * 1.25);\n            }\n        }\n\n        &[controlled-width] {\n            & > div,\n            rx-field {\n                max-width: @rxForm-field-max-width;\n            }\n        }\n    }//rx-form-section\n}//[rx-form]\n",
            "midway": "var _ = require('lodash');\nvar Page = require('astrolabe').Page;\n\n// an anonymous page object to prove that form filling works\nvar formPageObject = Page.create({\n    form: {\n        set: function (formData) {\n            encore.rxForm.form.fill(this, formData);\n        }\n    },\n\n    plainTextbox: encore.rxForm.textField.generateAccessor($('#txtPlain')),\n\n    requireName: encore.rxForm.checkbox.generateAccessor($('#chkVolumeNameRequired')),\n\n    options: {\n        get: function () {\n            return Page.create({\n                first: encore.rxForm.radioButton.generateAccessor($('#favBeatle_0')),\n                second: encore.rxForm.radioButton.generateAccessor($('#favBeatle_1'))\n            });\n        }\n    },\n\n    volumeTypeSelect: {\n        get: function () {\n            var slowClick = false;\n            return Page.create({\n                type: encore.rxForm.dropdown.generateAccessor($('#selVolumeType'), slowClick)\n            });\n        }\n    }\n});\n\ndescribe('rxForm', function () {\n    before(function () {\n        demoPage.go('#/components/rxForm');\n    });\n\n    describe('rxFieldName', function () {\n        describe('\"Plain Textbox\"', encore.exercise.rxFieldName({\n            instance: encore.rxForm.fieldName.initialize($('#fieldNamePlainTextbox')),\n            visible: true,\n            required: false\n        }));\n\n        describe('\"Required Textarea\"', encore.exercise.rxFieldName({\n            cssSelector: '#fieldNameRequiredTextarea',\n            visible: true,\n            required: true\n        }));\n\n        describe('Example', function () {\n            var checkbox, subject;\n\n            before(function () {\n                checkbox = encore.rxForm.checkbox.initialize($('#chkVolumeNameRequired'));\n                subject = encore.rxForm.fieldName.initialize($('#fieldNameVolumeName'));\n            });\n\n            describe('when checkbox checked', function () {\n                before(function () {\n                    checkbox.select();\n                });\n\n                it('symbol should be visible', function () {\n                    expect(subject.isSymbolVisible()).to.eventually.be.true;\n                });\n            });\n\n            describe('when checkbox unchecked', function () {\n                before(function () {\n                    checkbox.deselect();\n                });\n\n                it('symbol should not be visible', function () {\n                    expect(subject.isSymbolVisible()).to.eventually.be.false;\n                });\n            });\n        });\n    });\n\n    describe('form filling', function () {\n        var formData = {\n            plainTextbox: 'This is a plain textbox',\n            requireName: false,\n            options: {\n                first: true,\n                second: false\n            },\n            volumeTypeSelect: {\n                type: 'PUNCHCARDS'\n            },\n            radioTable: [{ Name: 'Option #2' }],\n            checkboxTable: [{ Name: 'Item 1' }, { Name: 'Item 2' }]\n        };\n\n        before(function () {\n            formPageObject.form = formData;\n        });\n\n        it('should have filled the plainTextbox value', function () {\n            expect(formPageObject.plainTextbox).to.eventually.equal('This is a plain textbox');\n        });\n\n        it('should have unchecked the requireName checkbox', function () {\n            expect(formPageObject.requireName).to.eventually.be.false;\n        });\n\n        it('should have selected the first radio option', function () {\n            expect(formPageObject.options.first).to.eventually.be.true;\n        });\n\n        it('should not have selected the second radio option', function () {\n            expect(formPageObject.options.second).to.eventually.be.false;\n        });\n\n        it('should have selected the volume type', function () {\n            expect(formPageObject.volumeTypeSelect.type.text).to.eventually.equal('PUNCHCARDS');\n        });\n\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\n\nvar rxForm = require('./rxForm.page').rxForm;\n\n/**\n * rxFieldName exercises.\n * @exports encore.exercise.rxFieldName\n * @param {Object} [options=] - Test options. Used to build valid tests.\n * @param {rxFieldName} [options.instance=] - Component to exercise.\n * @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n * @param {string} [options.visible=true] - Determines if the field name is visible\n * @param {string} [options.present=true] - Determines if the field name is present in the DOM\n * @param {string} [options.required=false] - Determines if the field name displays as required\n */\nexports.rxFieldName = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        visible: true,\n        present: true,\n        required: false\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxForm.fieldName.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should ' + (options.visible ? 'be' : 'not be') + ' visible', function () {\n            expect(component.isDisplayed()).to.eventually.eq(options.visible);\n        });\n\n        if (options.present === true) {\n            it('should be present', function () {\n                expect(component.isPresent()).to.eventually.be.true;\n            });\n\n            it('should have a symbol present', function () {\n                expect(component.isSymbolPresent()).to.eventually.be.true;\n            });\n        } else {\n            it('should not be present', function () {\n                expect(component.isPresent()).to.eventually.be.false;\n            });\n\n            it('should not have a symbol present', function () {\n                expect(component.isSymbolPresent()).to.eventually.be.false;\n            });\n        }\n\n        if (options.required === true) {\n            it('should have a symbol visible', function () {\n                expect(component.isSymbolVisible()).to.eventually.be.true;\n            });\n        } else {\n            it('should not have a symbol visible', function () {\n                expect(component.isSymbolVisible()).to.eventually.be.false;\n            });\n        }\n    };\n};\n"
        }
    },
    {
        "name": "rxIdentity",
        "moduleName": "'encore.ui.rxIdentity'",
        "displayName": "Rx Identity",
        "srcFiles": [
            "src/rxIdentity/rxIdentity.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Sep 28, 2015 @ 16:25 (UTC-0500)",
        "rawLastModified": "2015-09-28 16:25:03 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This is a component designed to aid interaction with Rackspace&#39;s Identity API.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxIdentityCtrl', function ($scope, Identity) {\n    $scope.user = {};\n    $scope.login = function () {\n        $scope.toggle = true;\n        Identity.login($scope.user,\n            function (authToken) {\n                $scope.toggle = false;\n                alert('Congrats! Logged In');\n            },\n            function (error) {\n                $scope.toggle = false;\n                alert('Login attempt failed.');\n            });\n    };\n});\n",
            "html": "<!-- Example only works when running locally since rxIdentity requires a proxy -->\n<div ng-controller=\"rxIdentityCtrl\">\n  <form rx-form>\n    <rx-form-section stacked>\n      <rx-field>\n        <rx-field-name>Username:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\" name=\"username\" ng-model=\"user.username\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <rx-field>\n        <rx-field-name>Password:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"password\" name=\"password\" ng-model=\"user.password\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n\n      <div>\n        <rx-button\n          toggle-msg=\"Authenticating\"\n          default-msg=\"Login\"\n          toggle=\"toggle\"\n          ng-click=\"login()\"></rx-button>\n      </div>\n    </rx-form-section>\n  </form>\n</div>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxInfoPanel",
        "moduleName": "'encore.ui.rxInfoPanel'",
        "displayName": "Rx Info Panel",
        "srcFiles": [
            "src/rxInfoPanel/rxInfoPanel.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxInfoPanel/templates/rxInfoPanel.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>This is a generic info panel intended for use at the top of pages.</p>\n",
            "js": "",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<rx-info-panel panel-title=\"A Custom Title\">\n    You can put whatever content you want to inside here\n</rx-info-panel>\n",
            "less": "/*\n * rxInfoPanel\n */\n.info-panel {\n    clear: both;\n    background: @white;\n    border-color: @tabBorder;\n    border-width: 0 5px 5px 5px;\n    border-style: solid;\n    padding: 0 10px 10px 10px;\n    overflow: hidden;\n\n    .info-title {\n        background: @tabBorder;\n        color: @white;\n        width: 100%;\n        padding: 8px 10px;\n        margin: 0 0 10px -10px;\n    }\n}\n",
            "midway": "var rxInfoPanelPage = encore.rxInfoPanel;\nvar expect = require('chai').use(require('chai-as-promised')).expect;\n\ndescribe('rxInfoPanel', function () {\n    var rxInfoPanel;\n\n    before(function () {\n        demoPage.go('#/components/rxInfoPanel');\n        rxInfoPanel = rxInfoPanelPage.initialize($('.info-panel'));\n    });\n\n    it('should show element', function () {\n        expect(rxInfoPanel.isDisplayed()).to.eventually.be.true;\n    });\n\n    it('should populate the title', function () {\n        expect(rxInfoPanel.title).to.eventually.equal('A Custom Title');\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxLocalStorage",
        "moduleName": "'encore.ui.rxLocalStorage'",
        "displayName": "Rx Local Storage",
        "srcFiles": [
            "src/rxLocalStorage/rxLocalStorage.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 15, 2015 @ 14:28 (UTC-0500)",
        "rawLastModified": "2015-10-15 14:28:39 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p><code>localStorage</code> is a simple wrapper component that interacts with the local storage in the browser.</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxLocalStorageCtrl', function ($scope, LocalStorage) {\n    $scope.setSideKick = function () {\n        LocalStorage.setObject('joker', { name: 'Harley Quinn' });\n    };\n\n    $scope.getSideKick = function () {\n        var sidekick = LocalStorage.getObject('joker');\n        alert(sidekick.name);\n    };\n});\n",
            "html": "<div ng-controller=\"rxLocalStorageCtrl\">\n    <label>Who is the Joker's side kick?</label>\n    <button ng-click=\"setSideKick()\" class=\"button button-positive\">Store Answer</button>\n    <button ng-click=\"getSideKick()\" class=\"button\">Answer?</button>\n</div>\n",
            "less": "",
            "midway": "var rxLocalStorage = encore.rxLocalStorage;\n\ndescribe('rxLocalStorage', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxLocalStorage');\n    });\n\n    it('should set and return a string', function () {\n        var aString = 'hello world';\n\n        rxLocalStorage.setItem('aString', aString);\n        expect(rxLocalStorage.getItem('aString')).to.eventually.equal(aString);\n    });\n\n    it('should set and return an int', function () {\n        var anInt = 42;\n\n        rxLocalStorage.setItem('anInt', anInt);\n        expect(rxLocalStorage.getItem('anInt')).to.eventually.equal(anInt);\n    });\n\n    it('should set and return a float', function () {\n        var aFloat = 42.0000002;\n\n        rxLocalStorage.setItem('aFloat', aFloat);\n        expect(rxLocalStorage.getItem('aFloat')).to.eventually.equal(aFloat);\n    });\n\n    it('should set and return an array', function () {\n        var anArray = [1, 'cat', 3];\n\n        rxLocalStorage.setItem('anArray', anArray);\n        expect(rxLocalStorage.getItem('anArray')).to.eventually.deep.equal(anArray);\n    });\n\n    it('should set and return an object', function () {\n        var anObject = {\n            'foo': 'bar',\n            'life': 42\n        };\n\n        rxLocalStorage.setItem('anObject', anObject);\n        expect(rxLocalStorage.getItem('anObject')).to.eventually.deep.equal(anObject);\n    });\n\n    it('should set and return an array of objects', function () {\n        var anArrayOfObjects = [\n            {\n                'foo': {\n                    'bar': 1,\n                    'baz': 2\n                }\n            },\n            {\n                'fizz': {\n                    'buzz': 'fizzbuzz'\n                }\n            }\n        ];\n\n        rxLocalStorage.setItem('anArrayOfObjects', anArrayOfObjects);\n        expect(rxLocalStorage.getItem('anArrayOfObjects')).to.eventually.deep.equal(anArrayOfObjects);\n    });\n\n    it('should remove something that has been set', function () {\n        rxLocalStorage.setItem('something', 42);\n        rxLocalStorage.removeItem('something');\n        expect(rxLocalStorage.exists('something')).to.eventually.be.false;\n    });\n\n    it('should return true if key exists', function () {\n        rxLocalStorage.setItem('cortana', 123);\n        expect(rxLocalStorage.exists('cortana')).to.eventually.be.true;\n    });\n\n    it('should return false if a key does not exist', function () {\n        expect(rxLocalStorage.exists('masterChief')).to.eventually.be.false;\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxLogout",
        "moduleName": "'encore.ui.rxLogout'",
        "displayName": "Rx Logout",
        "srcFiles": [
            "src/rxLogout/rxLogout.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxAuth",
            "rxIdentity",
            "rxSession",
            "rxLocalStorage",
            "rxPermission",
            "rxSession",
            "rxLocalStorage"
        ],
        "stability": "stable",
        "lastModified": "Sep 29, 2015 @ 15:44 (UTC-0500)",
        "rawLastModified": "2015-09-29 15:44:32 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>The rxLogout component provides logic to apply logout functionality to an element.</p>\n",
            "js": "",
            "html": "<div>\n    <button rx-logout id=\"rxLogout\">Logout</button>\n    <button rx-logout=\"/overview\">Logout (with custom redirect)</button>\n</div>",
            "less": "",
            "midway": "var rxLogoutPage = encore.rxLogout;\n\ndescribe('rxLogout', function () {\n    var rxLogout;\n\n    before(function () {\n        demoPage.go('#/components/rxLogout');\n        rxLogout = rxLogoutPage.initialize($('#rxLogout'));\n    });\n\n    it('should show element', function () {\n        expect(rxLogout.isDisplayed()).to.eventually.be.true;\n    });\n\n    it('should redirect to logout/login page on click', function () {\n        rxLogout.logout();\n        expect(demoPage.currentUrl).to.eventually.contain('login');\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxMetadata",
        "moduleName": "'encore.ui.rxMetadata'",
        "displayName": "Rx Metadata",
        "srcFiles": [
            "src/rxMetadata/rxMetadata.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxMetadata/templates/rxMeta.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p><code>rxMetadata</code> contains directives to provide consistent styling for the display of metadata information.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxMetadataCtrl', function ($scope) {\n    $scope.someDate = new Date('January 6 1989');\n    $scope.someAmount = 192.68;\n});\n",
            "html": "<div ng-controller=\"rxMetadataCtrl\">\n    <h3>Example</h3>\n    <rx-metadata>\n      <section>\n        <rx-meta label=\"Field Name\">Field Value Example</rx-meta>\n        <rx-meta label=\"Another Field Name\">Another Field Value Example</rx-meta>\n        <rx-meta label=\"Third Field Name\">The Third Field Value Example</rx-meta>\n        <rx-meta label=\"Super Long Value\" class=\"force-word-break\">\n          A super long data value with anunseeminglyunbreakablewordthatcouldoverflowtothenextcolumn\n        </rx-meta>\n        <rx-meta label=\"Short Field Name\">\n          A long field value given here to show line break style.\n        </rx-meta>\n      </section>\n\n      <section>\n        <rx-meta label=\"Status\" id=\"metaStatus\">Active</rx-meta>\n        <rx-meta label=\"RCN\">RCN-555-555-555</rx-meta>\n        <rx-meta label=\"Type\">Cloud</rx-meta>\n        <rx-meta label=\"Service Level\">Managed &rarr; Managed</rx-meta>\n        <rx-meta label=\"Service Type\">DevOps &rarr; SysOps</rx-meta>\n      </section>\n\n      <section>\n        <rx-meta label=\"Amount\">{{ someAmount | currency }}</rx-meta>\n        <rx-meta label=\"Phone Number Field\">888 - 888 - 8888</rx-meta>\n        <rx-meta label=\"Date Field\">{{ someDate | date:'MMMM d, yyyy @ HH:mm (UTCZ)' }}</rx-meta>\n        <rx-meta label=\"Link Field\">\n          <a href=\"#\">Link</a>\n        </rx-meta>\n        <rx-meta label=\"Data and Link Field\">\n          Some data <a href=\"#\">(Link)</a>\n        </rx-meta>\n      </section>\n    </rx-metadata>\n</div>\n",
            "less": "/*\n * rxMetadata\n */\nrx-metadata {\n    box-sizing: border-box;\n    padding: 0;\n    margin: @rxMetadata-gutter 0;\n\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-items: stretch;\n\n    rx-meta {\n        display: block;\n        margin: 0 0 22px;\n\n        .label {\n            color: @rxMetadata-label-color;\n            font-size: @rxMetadata-label-font-size;\n            margin: 0 0 6px;\n        }\n\n        .definition {\n            color: @rxMetadata-definition-color;\n            font-size: @rxMetadata-definition-font-size;\n            font-weight: 700;\n        }\n\n        &.force-word-break {\n            word-break: break-all;\n        }\n    }\n\n    section {\n        box-sizing: border-box;\n        display: block;\n        padding: 0;\n        margin: 0 @rxMetadata-gutter 0 0;\n        flex: 0 0 300px; // no grow, no shrink, always 300px wide;\n\n        &:last-child {\n            margin-right: 0;\n        }\n    }\n}\n",
            "midway": "var exercise = require('../rxMetadata.exercise');\nvar _ = require('lodash');\n\nvar transformFns = {\n    'Service Level': function (elem) {\n        return elem.getText().then(function (text) {\n            return _.zipObject(['current', 'proposed'], text.split(' → '));\n        });\n    },\n\n    'Service Type': function (elem) {\n        return elem.getText().then(function (text) {\n            return _.zipObject(['current', 'proposed'], text.split(' → '));\n        });\n    },\n\n    'Amount': function (elem) {\n        return elem.getText().then(encore.rxMisc.currencyToPennies);\n    },\n\n    'Date Field': function (elem) {\n        return elem.getText().then(function (text) {\n            return new Date(text);\n        });\n    },\n\n    'Link Field': function (elem) {\n        var promises = [elem.getText(), elem.$('a').getAttribute('href')];\n        return protractor.promise.all(promises).then(function (results) {\n            return { text: results[0], href: results[1] };\n        });\n    },\n\n    'Data and Link Field': function (elem) {\n        var promises = [elem.getText(), elem.$('a').getAttribute('href')];\n        return protractor.promise.all(promises).then(function (results) {\n            // 'Some data (Link)' -> ['Some data', 'link']\n            var text = results[0].split('(')[0].trim();\n            var linkText = results[0].split('(')[1].replace(')', '');\n            return {\n                text: text,\n                href: results[1],\n                linkText: linkText\n            };\n        });\n    }\n}\n\ndescribe('rxMetadata', function () {\n\n    before(function () {\n        demoPage.go('#/component/rxMetadata');\n    });\n\n    describe('Status', exercise.rxMetadata({\n        present: true,\n        visible: true,\n        transformFns: transformFns,\n\n        terms: {\n            'Field Name': 'Field Value Example',\n            'Another Field Name': 'Another Field Value Example',\n            'Third Field Name': 'The Third Field Value Example',\n            'Super Long Value': 'A super long data value with anunseeminglyunbreakablewordthatcouldoverflowtothenextcolumn',\n            'Short Field Name': 'A long field value given here to show line break style.',\n            'Status': 'Active',\n            'RCN': 'RCN-555-555-555',\n            'Type': 'Cloud',\n            'Service Level': { current: 'Managed', proposed: 'Managed' },\n            'Service Type': { current: 'DevOps', proposed: 'SysOps' },\n            'Amount': 19268,\n            'Phone Number Field': '888 - 888 - 8888',\n            'Date Field': new Date('January 6, 1989'),\n            'Link Field': { text: 'Link', href: browser.baseUrl + '/#' },\n            'Data and Link Field': {\n                text: 'Some data',\n                href: browser.baseUrl + '/#',\n                linkText: 'Link'\n            }\n        }\n    }));\n\n    describe('rxMetadata', function () {\n        var metadata;\n\n        before(function () {\n            metadata = encore.rxMetadata.initialize($('rx-metadata'), transformFns);\n        });\n\n        it('should still work fine without any transform functions defined', function () {\n            expect(encore.rxMetadata.main.term('Amount')).to.eventually.equal('$192.68');\n        });\n\n        it('should report back null for definitions that are not present', function () {\n            expect(metadata.term('Witty 2015 Pop Culture Reference')).to.eventually.be.null;\n        });\n\n        it('should report back custom return values for definitions that are not present', function () {\n            expect(metadata.term('Witty 2015 Pop Culture Reference', false)).to.eventually.be.false;\n        });\n\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxMetadata = require('./rxMetadata.page').rxMetadata;\n\n/**\n * rxMetadata exercises\n * @exports encore.exercise.rxMetadata\n * @param {Object} [options=] Test options. Used to build valid tests.\n * @param {string} [options.cssSelector=] Fallback selector string to initialize widget with.\n * @param {Boolean} [options.present=true] Determines if the metadata is present in the DOM\n * @param {Boolean} [options.visible=true] Determines if the metadata is visible\n * @param {Object} [transformFns=] - Transformation functions to be passed to rxMetadata\n * @param {Object} [options.terms=] The expected label text of each metadata entry\n * @example\n * ```js\n * describe('metadata', encore.exercise.rxMetadata({\n *     transformFns: {\n *         'Signup Date': function (elem) {\n *             return elem.getText().then(function (text) {\n *                 return new Date(text);\n *             });\n *         },\n *         'Overdue Balance': function (elem) {\n *             return elem.getText().then(encore.rxMisc.currencyToPennies);\n *         },\n *         'Current Due': function (elem) {\n *             return elem.getText().then(encore.rxMisc.currencyToPennies);\n *         },\n *         'Expiration Date' function (elem) {\n *             return elem.getText().then(function (text) {\n *                 return new Date(text);\n *             });\n *         }\n *     },\n *     terms: {\n *         'Signup Date': new Date('March 1st, 2011'),\n *         'Overdue Balance': 13256,\n *         'Current Due': 64400,\n *         'Expiration Date': new Date('January 1st, 2021')\n *     }\n * }));\n * ```\n */\nexports.rxMetadata = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        present: true,\n        visible: true,\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.cssSelector === undefined) {\n                // don't use main -- you need to be able to supply `transformFns` via `initialize`\n                component = rxMetadata.initialize($('rx-metadata'), options.transformFns);\n            } else {\n                component = rxMetadata.initialize($(options.cssSelector), options.transformFns);\n            }\n        });\n\n        it('should ' + (options.present ? 'be' : 'not be') + ' present', function () {\n            expect(component.isPresent()).to.eventually.eq(options.present);\n        });\n\n        it('should ' + (options.visible ? 'be' : 'not be') + ' visible', function () {\n            expect(component.isDisplayed()).to.eventually.eq(options.visible);\n        });\n\n        it('should have every term present and in the correct order', function () {\n            expect(component.terms).to.eventually.eql(Object.keys(options.terms));\n        });\n\n        _.forEach(options.terms, function (definition, term) {\n            it('should have the correct definition for ' + term, function () {\n                if (_.isObject(definition) || _.isArray(definition)) {\n                    expect(component.term(term)).to.eventually.eql(definition);\n                } else {\n                    expect(component.term(term)).to.eventually.equal(definition);\n                }\n            });\n        });\n\n    };\n};\n"
        }
    },
    {
        "name": "rxMisc",
        "moduleName": "'encore.ui.rxMisc'",
        "displayName": "Rx Misc",
        "srcFiles": [
            "src/rxMisc/rxMisc.module.js",
            "src/rxMisc/scripts/rxAutoSave.js",
            "src/rxMisc/scripts/rxDOMHelper.js",
            "src/rxMisc/scripts/rxNestedElement.js",
            "src/rxMisc/scripts/titleize.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxSessionStorage"
        ],
        "stability": "unstable",
        "lastModified": "Oct 30, 2015 @ 16:13 (UTC-0500)",
        "rawLastModified": "2015-10-30 16:13:36 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>A module for shared functionality across framework components.</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxMiscCtrl', function ($scope, $timeout, $q, rxNotify, rxAutoSave) {\n    $scope.formData = {\n        checkbox: false,\n        name: '',\n        description: '',\n        sensitive: ''\n    };\n\n    var autosave = rxAutoSave($scope, 'formData', {\n        exclude: ['sensitive'],\n        ttl: 86400000\n    });\n\n    $scope.status = {\n        loading: false,\n        disable: false,\n        deferredLoading: false,\n        deferredDisable: false\n    };\n\n    // Clear with an explicit autosave.clear() call\n    $scope.clearStorage = function () {\n        $scope.status.loading = true;\n        $timeout(function () {\n            $scope.status.loading = false;\n            autosave.clear();\n            rxNotify.add(\"rxAutoSave data has been cleared! Navigate away and return, and the form won't be auto-populated\", {\n                type: 'success'\n            });\n        }, 1000);\n    };\n\n    // Clear by resolving the associated promise\n    $scope.deferredClear = function () {\n        var deferred = $q.defer();\n\n        autosave.clearOnSuccess(deferred.promise);\n        $scope.status.deferredLoading = true;\n\n        $timeout(function () {\n            $scope.status.deferredLoading = false;\n            deferred.resolve();\n            rxNotify.add(\"rxAutoSave data has been cleared! Navigate away and return, and the form won't be auto-populated\", {\n                type: 'success'\n            });\n        }, 1000);\n    };\n});\n",
            "html": "<div ng-controller=\"rxMiscCtrl\">\n    <h3>Form with automatically saved state</h3>\n    <p>\n        Try entering some data into this form, and then navigating away to a different page. When you return here,\n        the form data will automatically be populated with what you had previously entered.\n    </p>\n    <p>\n        Once you've tried that, you can clear the stored data with either of the \"Clear\" buttons below. Clicking those\n        will <em>not</em> erase the form, but will erase the rxAutoSave stored data. If you navigate away after clicking\n        one of the buttons, and then return here, the form will not be auto-populated, because rxAutoSave will have no data for it!\n    </p>\n\n    <p>\n        Finally, we have set a Time-To-Live of 24 hours for this form, and explicitly told it not to save the \"Sensitive data\" field\n        into storage. If you enter data here, and come back &gt;24 hours later, the form will not be auto-populated, as the data will\n        have expired.\n    </p>\n    <form name=\"demoForm\" rx-form>\n      <rx-form-section stacked>\n        <rx-field>\n          <rx-field-name>A checkbox field!:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input rx-checkbox id=\"chkCheckbox\" ng-model=\"formData.checkbox\" />\n              <label for=\"chkCheckbox\">I likely don't disagree</label>\n            </rx-input>\n            <div class=\"subdued\">\n              <div ng-if=\"formData.checkbox\" ng-hide=\"formData.hideCheckbox\">\n                I am possibly not un-authorizing the above: {{ formData.checkbox }}\n              </div>\n              <a id=\"hideCheckbox\" ng-click=\"formData.hideCheckbox = !formData.hideCheckbox\" ng-if=\"formData.checkbox\">\n                ({{ formData.hideCheckbox ? 'Show' : 'Hide this' }} message)\n              </a>\n            </div>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Name:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"text\" ng-model=\"formData.name\" />\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Description:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <textarea rows=\"10\" ng-model=\"formData.description\"></textarea>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Sensitive Data:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"text\" ng-model=\"formData.sensitive\" />\n            </rx-input>\n            <rx-help-text>We'll tell rxAutoSave NOT to save this data.</rx-help-text>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <div>\n          <rx-button\n              ng-click=\"clearStorage()\"\n              toggle=\"status.loading\"\n              default-msg=\"Clear rxAutoSave\"\n              toggle-msg=\"Clearing rxAutoSave data\"\n              disable=\"status.disable\">\n          </rx-button>\n\n          <rx-button\n              ng-click=\"deferredClear()\"\n              toggle=\"status.deferredLoading\"\n              default-msg=\"Clear rxAutoSave by resolving a promise\"\n              toggle-msg=\"Clearing rxAutoSave data\"\n              disable=\"status.deferredDisable\">\n          </rx-button>\n        </div>\n      </rx-form-section>\n    </form>\n\n</div>\n",
            "less": "",
            "midway": "var _ = require('lodash');\nvar Page = require('astrolabe').Page;\n\n// \"wait\" for autosave to clear -- function passed to `browser.wait`\nvar forAutoSaveToClear = function () {\n    return encore.rxNotify.all.exists('rxAutoSave data has been cleared!');\n};\n\n// anonymous page object\nvar autoSaving = Page.create({\n    form: {\n        set: function (formData) {\n            encore.rxForm.fill(this, formData);\n        }\n    },\n\n    checkbox: encore.rxForm.checkbox.generateAccessor(element(by.model('formData.checkbox'))),\n\n    name: encore.rxForm.textField.generateAccessor(element(by.model('formData.name'))),\n\n    description: encore.rxForm.textField.generateAccessor(element(by.model('formData.description'))),\n\n    sensitiveData: encore.rxForm.textField.generateAccessor(element(by.model('formData.sensitive'))),\n\n    clearAutoSave: {\n        value: function () {\n            element(by.buttonText('Clear rxAutoSave')).click();\n            browser.wait(forAutoSaveToClear);\n        }\n    },\n\n    clearAutoSaveWithPromise: {\n        value: function () {\n            element(by.buttonText('Clear rxAutoSave by resolving a promise')).click();\n            browser.wait(forAutoSaveToClear);\n        }\n    }\n});\n\ndescribe('rxMisc', function () {\n    before(function () {\n        demoPage.go('#/components/rxMisc');\n    });\n\n    describe('rxAutoSave', function () {\n        var autoSavedData = {\n            checkbox: true,\n            name: 'Canadian Armed Forces',\n            description: ['Using snow as cover, leap from your hiding spot to',\n                          'surprise your enemy in a display of tactical brilliance.',\n                          'In order to prevent your outfit from soaking',\n                          '(later risking hypothermia) you must wear the least',\n                          'amount of clothes possible to stay dry through the night.'].join(' '),\n            sensitiveData: 'Only Jay Parlar knows where the Candian Armed Forces lie in wait!'\n        };\n\n        var leavePage = function () {\n            demoPage.go('#/components/rxPaginate');\n            demoPage.go('#/components/rxMisc');\n        };\n\n        before(function () {\n            autoSaving.form = autoSavedData;\n            leavePage();\n        });\n\n        _.forEach(autoSavedData, function (data, property) {\n            it('should remember the form data for ' + property, function () {\n                if (property === 'sensitiveData') {\n                    expect(autoSaving[property]).to.eventually.equal('');\n                } else {\n                    expect(autoSaving[property]).to.eventually.equal(data);\n                }\n            });\n        });\n\n        describe('should clear auto saved data', function () {\n\n            before(function () {\n                autoSaving.clearAutoSave();\n                leavePage();\n            });\n\n            _.forEach(_.keys(autoSavedData), function (property) {\n                it('should not remember the form data for ' + property, function () {\n                    expect(autoSaving[property]).to.eventually.be.not.ok;\n                });\n            });\n\n        });\n\n        describe('should clear auto saved data with a promise', function () {\n\n            before(function () {\n                autoSaving.form = autoSavedData;\n                autoSaving.clearAutoSaveWithPromise();\n                leavePage();\n            });\n\n            _.forEach(_.keys(autoSavedData), function (property) {\n                it('should not remember the form data for ' + property, function () {\n                    expect(autoSaving[property]).to.eventually.be.not.ok;\n                });\n            });\n\n        });\n    });\n\n    describe('convenience functions', function () {\n        var fn;\n\n        describe('currencyToPennies', function () {\n            fn = encore.rxMisc.currencyToPennies;\n\n            it('should convert a single penny to the integer one', function () {\n                expect(fn('$0.01')).to.equal(1);\n            });\n\n            it('should ignore any dollar type indicators (CAN, AUS, USD)', function () {\n                expect(fn('$100 CAN')).to.equal(10000);\n            });\n\n            it('should convert negative currency notation to a negative integer', function () {\n                expect(fn('($100 AUS)')).to.equal(-10000);\n            });\n\n            it('should not incur any binary rounding errors', function () {\n                expect(fn('$1.10')).to.equal(110);\n            });\n\n            it('should not incur any binary rounding errors', function () {\n                expect(fn('$150.14')).to.equal(15014);\n            });\n\n            it('should convert an array of currencies to an array of pennies', function () {\n                expect(fn(['$0.01', '$100 CAN', '($100 AUS)', '$1.10', '$150.14']))\n                    .to.eql([1, 10000, -10000, 110, 15014]);\n            });\n        });\n\n        describe('unless', function () {\n            var unless;\n            var elem;\n            var message;\n\n            before(function () {\n                autoSaving.form = {\n                    checkbox: false,\n                    name: '',\n                    description: '',\n                    sensitiveData: ''\n                };\n                message = 'I am possibly not un-authorizing the above: true';\n                unless = encore.rxMisc.unless;\n                elem = element(by.binding('formData.checkbox'));\n                encore.rxMisc.nullValueMatches.push(message);\n            });\n\n            it('should return `null` for non-present elements', function () {\n                expect(unless(elem)).to.eventually.be.null;\n            });\n\n            it('should return a custom fallback value for non-present elements', function () {\n                expect(unless(elem, function () {}, false)).to.eventually.be.false;\n            });\n\n            it('should return `null` for present elements that match null value text', function () {\n                autoSaving.checkbox = true;\n                expect(unless(elem)).to.eventually.be.null;\n            });\n\n            it('should return the text when an element does not match any null value text', function () {\n                encore.rxMisc.nullValueMatches.length = 0;\n                expect(unless(elem)).to.eventually.equal(message);\n            });\n\n            it('should return the result of a custom function', function () {\n                var reverseIt = function (elem) {\n                    return elem.getText().then(function (text) {\n                        return text.split('').reverse().join('');\n                    });\n                };\n                expect(unless(elem, reverseIt)).to.eventually.equal(message.split('').reverse().join(''));\n            });\n\n            it('should return null for elements that are not displayed', function () {\n                element(by.cssContainingText('a', 'Hide this message')).click();\n                expect(unless(elem)).to.eventually.be.null;\n            });\n\n            it('should return a custom fallback value for non-displayed elements', function () {\n                expect(unless(elem, function () {}, false)).to.eventually.be.false;\n            });\n\n        });\n\n        describe('newDate', function () {\n            var date;\n\n            before(function () {\n                demoPage.go('#/components/rxMetadata');\n                var transformFns = {\n                    'Date Field': function (elem) {\n                        return elem.getText().then(encore.rxMisc.newDate);\n                    }\n                };\n\n                encore.rxMetadata.initialize('rx-metadata', transformFns).term('Date Field').then(function (dateField) {\n                    date = dateField;\n                });\n            });\n\n            it('should parse a date', function () {\n                expect(date instanceof Date).to.be.true;\n            });\n\n            it('should match the date exactly', function () {\n                var explicitDate = new Date('January 6, 1989 @ 00:00 (UTC-0600)');\n                expect(date.valueOf()).to.equal(explicitDate.valueOf());\n            });\n\n        });\n\n        describe('timings', function () {\n            var metrics;\n            var commonProperties = [ // present in both Chrome and Firefox\n                'appcacheTime',\n                'connectTime',\n                'domReadyTime',\n                'firstPaint',\n                'initDomTreeTime',\n                'loadEventTime',\n                'loadTime',\n                'lookupDomainTime',\n                'readyStart',\n                'redirectTime',\n                'requestTime',\n                'unloadEventTime'\n            ];\n\n            it('should report some timings', function () {\n                expect(encore.rxMisc.getPerformanceMetrics()).to.eventually.not.be.empty;\n            });\n\n            it('should report a time for page load time', function () {\n                encore.rxMisc.getPerformanceMetrics().then(function (performanceMetrics) {\n                    metrics = performanceMetrics;\n                    expect(Object.keys(metrics).sort()).to.eql(commonProperties);\n                });\n            });\n\n            it('should update the metrics on page change', function () {\n                demoPage.go('#/components/rxAge');\n                expect(encore.rxMisc.getPerformanceMetrics()).to.eventually.not.eql(metrics);\n            });\n\n            it('should not update the metrics when a request is made without a refresh', function () {\n                demoPage.go('#/components/rxMisc');\n                encore.rxMisc.getPerformanceMetrics().then(function (performanceMetrics) {\n                    metrics = performanceMetrics;\n                    element(by.buttonText('Clear rxAutoSave by resolving a promise')).click();\n                    browser.wait(function () {\n                        return encore.rxNotify.all.exists('rxAutoSave data has been cleared!', 'success');\n                    }, 5000, 'rxAutoSave notification did not appear!');\n                    expect(encore.rxMisc.getPerformanceMetrics()).to.eventually.eql(metrics);\n                });\n            });\n\n            it('should get just one property at a time', function () {\n                expect(encore.rxMisc.getPerformanceMetrics('loadTime')).to.eventually.be.above(0);\n            });\n\n            it('should get more than one property at a time', function () {\n                var keys = ['loadTime', 'redirectTime'];\n                expect(encore.rxMisc.getPerformanceMetrics(keys)).to.eventually.include.keys(keys);\n            });\n\n        });\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxModalAction",
        "moduleName": "'encore.ui.rxModalAction'",
        "displayName": "Rx Modal Action",
        "srcFiles": [
            "src/rxModalAction/rxModalAction.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxModalAction/templates/rxModalAction.html",
            "templates/rxModalAction/templates/rxModalActionForm.html",
            "templates/rxModalAction/templates/rxModalFooters.html"
        ],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 28, 2015 @ 11:50 (UTC-0500)",
        "rawLastModified": "2015-10-28 11:50:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>The rxModalAction component provides a hook to open and perform operations on a modal window.  </p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxModalActionCtrl', function ($scope, rxNotify) {\n    $scope.password = 'guest';\n\n    $scope.populate = function (modalScope) {\n        modalScope.user = 'hey_dude';\n    };\n\n    $scope.changePass = function (fields) {\n        $scope.password = fields.password;\n        rxNotify.add('Password Updated!', {\n            type: 'success'\n        });\n    };\n\n    $scope.notifyDismissal = function () {\n        rxNotify.add('Password Unchanged', {\n            type: 'info'\n        });\n    };\n})\n.controller('rxModalStateCtrl', function ($scope, $modalInstance, $timeout, rxNotify) {\n    var complete = function () {\n        $scope.loaded = true;\n        $scope.setState('complete');\n        rxNotify.add('Operation Success!', {\n            stack: 'modal',\n            type: 'success'\n        });\n    };\n\n    $scope.submit = function () {\n        $scope.setState('confirm');\n    };\n\n    $scope.confirm = function () {\n        $scope.loaded = false;\n        $scope.setState('pending');\n        rxNotify.add('Performing Operation...', {\n            stack: 'modal',\n            loading: true,\n            dismiss: [$scope, 'loaded']\n        });\n        $timeout(complete, 2000);\n    };\n\n    $scope.cancel = function () {\n        rxNotify.clear('modal');\n\n        /*\n         * You may place custom dismiss logic here,\n         * if you do not wish to use a `dismiss-hook` function.\n         **/\n\n        // This must be called to dismiss the modal.\n        $modalInstance.dismiss();\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxModalActionCtrl\">\n    <p>Password: {{password}}</p>\n    <p>\n        <rx-modal-action\n            pre-hook=\"populate(this)\"\n            post-hook=\"changePass(fields)\"\n            dismiss-hook=\"notifyDismissal()\"\n            classes=\"button\"\n            template-url=\"changePassword.html\"\n            id=\"modChangePassword\">\n            Change Password\n        </rx-modal-action>\n    </p>\n\n    <p>\n        <rx-modal-action\n            classes=\"button\"\n            controller=\"rxModalStateCtrl\"\n            template-url=\"multiview.html\"\n            disable-esc>\n            Multi-View Example\n        </rx-modal-action>\n    </p>\n\n    <script type=\"text/ng-template\" id=\"changePassword.html\">\n        <rx-modal-form rx-form\n            title=\"Change {{user}} Admin Password\"\n            submit-text=\"Submit Password\"\n            cancel-text=\"Cancel Request\"\n            subtitle=\"Please read instructions below\">\n            <rx-form-section>\n              <rx-field>\n                <rx-help-text>\n                  <h1>Password must:</h1>\n                  <ul class=\"list\">\n                    <li>have at least one uppercase letter</li>\n                    <li>have at least one number</li>\n                    <li>be inspirational</li>\n                    <li>be in haiku form</li>\n                    <li>reference Star Wars</li>\n                  </ul>\n                </rx-help-text>\n                <rx-field-name ng-required=\"true\">New Password:</rx-field-name>\n                <rx-field-content>\n                  <rx-input>\n                    <input type=\"text\" name=\"password\" ng-model=\"fields.password\" required=\"true\" />\n                  </rx-input>\n                  <rx-inline-error class=\"error-message\" ng-show=\"modalActionForm.password.$error.required\">This field is required.</rx-inline-error>\n                </rx-field-content>\n              </rx-field>\n            </rx-form-section>\n        </rx-modal-form>\n    </script>\n\n    <script type=\"text/ng-template\" id=\"multiview.html\">\n        <rx-modal-form title=\"State-Changing Modal\"\n            submit-text=\"Send Request\"\n            return-text=\"Finish &amp; Close\">\n            <rx-notifications stack=\"modal\"></rx-notifications>\n            <div ng-switch=\"state\">\n                <div ng-switch-when=\"editing\">\n                    <p>Press \"Send Request\" to start the fake process.</p>\n                </div>\n                <div ng-switch-when=\"confirm\">\n                    <h3>Are you sure you want to continue?</h3>\n                    <p>This action cannot be undone.</p>\n                </div>\n                <p ng-switch-when=\"pending\">Man, this takes forever!</p>\n                <p ng-switch-when=\"complete\">Nothing left to do here.</p>\n            </div>\n        </rx-modal-form>\n\n        <rx-modal-footer state=\"confirm\">\n            <button class=\"button\" ng-click=\"confirm()\">Yes</button>\n            <button class=\"button cancel\" ng-click=\"setState('editing')\">No</button>\n        </rx-modal-footer>\n    </script>\n\n</div>\n",
            "less": "@import \"mixins\";\n@import \"vars\";\n\n/**\n * rxModalAction.less\n *\n * Stylesheet for modals, repurposed from the modal component of http://angular-ui.github.io/bootstrap\n *\n * @version 1.0\n * @author Ernie Hsiung\n */\n\n.modal,\n.modal-backdrop {\n    .transition();\n    .opacity(0);\n    &.fade.in {\n        .opacity(1);\n    }\n}\n\n.modal-backdrop {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1040;\n    background: @black;\n    &.fade.in {\n        .opacity(0.4);\n    }\n}\n\n.modal {\n    position: absolute;\n    top: 10%;\n    left: 50%;\n    z-index: 1050;\n    width: 560px;\n    background: @white;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n    transform: translate(-50%, 0);\n    -webkit-transform: translate(-50%, 0);\n    -moz-transform: translate(-50%, 0);\n    .box-shadow(0 3px 7px rgba(0, 0, 0, 0.3));\n    .background-clip();\n    outline: none;\n}\n\n.modal-header {\n    padding: @modalPadding;\n    border-bottom: 1px solid @pageDivider;\n    position: relative;\n\n    .modal-title {\n        line-height: 1;\n        font-size: 1.75em;\n        margin: 0;\n    }\n    .modal-subtitle {\n        line-height: 1.5;\n        font-size: 1em;\n        font-wieght: bold;\n        color: @subduedTitle;\n        margin: 0;\n    }\n    .modal-close {\n        position: absolute;\n        top: @modalPadding;\n        right: @modalPadding;\n        font-size: 2em;\n        width: 1em;\n        height: 1em;\n        text-align: center;\n        color: @closeText;\n        &:hover,\n        &:focus {\n            color: @closeTextHover;\n        }\n\n        &:before {\n            content: \"\\00D7\";\n            position: absolute;\n            line-height: 0;\n            right: 0;\n            width: 1em;\n        }\n    }\n}\n.modal-body {\n    position: relative;\n    overflow-y: auto;\n    max-height: 400px;\n    padding: @modalBodyPadding @modalPadding;\n\n    .loading {\n        margin: 0 auto;\n        width: 1em;\n    }\n\n    .form-radio {\n        border: 0;\n    }\n\n    .rx-form.modal-form {\n        margin: 0;\n    }\n}\n\n.modal-footer {\n    padding: @modalPadding;\n    border-top: 1px solid @pageDivider;\n}\n\n@media (max-width:480px) {\n    @padding: 10px;\n    .modal {\n        position: absolute;\n        top: @padding;\n        left: @padding;\n        right: @padding;\n    }\n    .modal-header .close {\n        padding: @padding;\n        margin: -@padding;\n    }\n}\n",
            "midway": "var modal = encore.rxModalAction;\nvar rxForm = encore.rxForm;\n\ndescribe('rxModalAction', function () {\n    var changePasswordModal, triggerModal;\n\n    var customFunctionalty = {\n        txtNewPassword: {\n            get: function () {\n                return this.rootElement.element(by.model('fields.password'));\n            }\n        },\n\n        txtErrorMessage: {\n            get: function () {\n                return this.rootElement.$('.error-message');\n            }\n        },\n\n        newPassword: {\n            get: function () {\n                return this.txtNewPassword.getAttribute('value');\n            },\n            set: function (password) {\n                this.txtNewPassword.clear();\n                this.txtNewPassword.sendKeys(password);\n            }\n        }\n    };\n\n    before(function () {\n        demoPage.go('#/components/rxModalAction');\n        triggerModal = function () {\n            rxForm.slowClick($('#modChangePassword .modal-link'));\n        };\n\n        changePasswordModal = modal.initialize(customFunctionalty);\n    });\n\n    it('should not display the modal unless triggered', function () {\n        expect(changePasswordModal.isDisplayed()).to.eventually.be.false;\n    });\n\n    describe('when triggered', function () {\n        before(function () {\n            triggerModal();\n        });\n\n        it('should display the modal', function () {\n            expect(changePasswordModal.isDisplayed()).to.eventually.be.true;\n        });\n\n        it('should have a title', function () {\n            expect(changePasswordModal.title).to.eventually.equal('Change hey_dude Admin Password');\n        });\n\n        it('should have a subtitle', function () {\n            expect(changePasswordModal.subtitle).to.eventually.equal('Please read instructions below');\n        });\n\n        it('should have a custom submit button', function () {\n            expect(changePasswordModal.btnSubmit.getText()).to.eventually.equal('Submit Password');\n        });\n\n        it('should have a custom cancel button', function () {\n            expect(changePasswordModal.btnCancel.getText()).to.eventually.equal('Cancel Request');\n        });\n\n        it('should not let me submit the modal by default', function () {\n            expect(changePasswordModal.canSubmit()).to.eventually.be.false;\n        });\n\n        it('should show a validation error message by default', function () {\n            expect(changePasswordModal.txtErrorMessage.isDisplayed()).to.eventually.be.true;\n        });\n\n        it('should let me submit the modal when a new password is entered', function () {\n            changePasswordModal.newPassword = 'hunter2';\n            expect(changePasswordModal.canSubmit()).to.eventually.be.true;\n        });\n\n        it('should hide the validation error message when a new password is entered', function () {\n            expect(changePasswordModal.txtErrorMessage.isDisplayed()).to.eventually.be.false;\n        });\n\n        it('should submit', function () {\n            changePasswordModal.submit();\n            expect(changePasswordModal.isDisplayed()).to.eventually.be.false;\n        });\n    });//when triggered\n\n    describe('when triggered and closed', function () {\n        beforeEach(function () {\n            triggerModal();\n        });\n\n        afterEach(function () {\n            encore.rxNotify.all.dismiss();\n        });\n\n        describe('when closed with the little X in the corner', function () {\n            beforeEach(function () {\n                changePasswordModal.close();\n            });\n\n            it('should close the modal', function () {\n                expect(changePasswordModal.isDisplayed()).to.eventually.be.false;\n            });\n\n            it('should display an info notification', function () {\n                expect(encore.rxNotify.all.exists('Password Unchanged', 'info')).to.eventually.be.true;\n            });\n        });//when closed with \"X\"\n\n        describe('when closed via the \"cancel\" button', function () {\n            beforeEach(function () {\n                changePasswordModal.cancel();\n            });\n\n            it('should close the modal', function () {\n                expect(changePasswordModal.isDisplayed()).to.eventually.be.false;\n            });\n\n            it('should display an info notification', function () {\n                expect(encore.rxNotify.all.exists('Password Unchanged', 'info')).to.eventually.be.true;\n            });\n        });//when closed via \"cancel\"\n    });//when triggered and closed\n\n    describe('default modal behavior', function () {\n        var defaultModal;\n\n        before(function () {\n            defaultModal = modal.initialize();\n        });\n\n        it('should support basic functionality without supplying any arguments', function () {\n            triggerModal();\n            expect(defaultModal.title).to.eventually.equal('Change hey_dude Admin Password');\n            defaultModal.cancel();\n        });\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxMultiSelect",
        "moduleName": "'encore.ui.rxMultiSelect'",
        "displayName": "Rx Multi Select",
        "srcFiles": [
            "src/rxMultiSelect/rxMultiSelect.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxMultiSelect/templates/rxMultiSelect.html",
            "templates/rxMultiSelect/templates/rxSelectOption.html"
        ],
        "dependencies": [
            "rxSelectFilter",
            "rxMisc",
            "rxSessionStorage",
            "rxSelect"
        ],
        "stability": "experimental",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>This component is a multi-select dropdown with checkboxes for each option. It is a replacement for <code>&lt;select multiple&gt;</code> when space is an issue, such as in the header of a table.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxMultiSelectCtrl', function ($scope) {\n    $scope.data = {\n        classification: []\n    };\n });",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxMultiSelectCtrl\">\n    <h3>rxMultiSelect Input</h3>\n    <p class=\"multi-select-container\">\n        <span class=\"field-label\">Classification:</span>\n        <rx-multi-select ng-model=\"data.classification\" id=\"classification\">\n            <rx-select-option value=\"A\">Type A</rx-select-option>\n            <rx-select-option value=\"B\">Type B</rx-select-option>\n            <rx-select-option value=\"C\">Type C</rx-select-option>\n            <rx-select-option value=\"D\">Type D</rx-select-option>\n        </rx-multi-select>\n    </p>\n    <span>Model value: [{{ data.classification.join(', ') }}]</span>\n\n    <p class=\"multi-select-container\">\n        <span class=\"field-label\">Disabled rxMultiSelect:</span>\n        <rx-multi-select ng-model=\"data.other\" disabled>\n            <rx-select-option value=\"Not allowed\"></rx-select-option>\n        </rx-multi-select>\n    </p>\n</div>\n<style>\n    .multi-select-container {\n        width: 200px;\n    }\n\n    .status-filter .rxSelect {\n    \twidth: 180px;\n    }\n\n</style>\n",
            "less": "/*\n * rxMultiSelect\n */\nrx-multi-select {\n\n    z-index: auto !important;\n\n    &[disabled] .preview {\n        pointer-events: none;\n    }\n\n    .preview {\n        padding: 5px;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    ul {\n        z-index: 100;\n        position: absolute;\n        top: -1px;\n        left: -1px;\n        width: 100%;\n        border: 1px solid @inputBorderColor;\n        background: @white;\n        box-shadow: 0 3px 15px 0 rgba(0, 0, 0, 0.35);\n    }\n\n    rx-select-option[value=\"all\"] label {\n        border-bottom: 1px solid @inputBorderColor;\n    }\n\n}\n\n.rx-select-option {\n\n    label {\n        display: block;\n        padding: 4px 6px;\n\n        &:hover {\n            background: @optionHighlightBg;\n            color: @white;\n            cursor: pointer;\n        }\n    }\n\n    .rxCheckbox {\n        width: @appFontSize;\n        height: @appFontSize;\n        vertical-align: middle;\n    }\n}\n",
            "midway": "// var rxMultiSelectPage = encore.rxMultiSelect;\nvar Page = require('astrolabe').Page;\nvar _ = require('lodash');\n\ndescribe('rxMultiSelect', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxMultiSelect');\n    });\n\n    describe('exercises', encore.exercise.rxMultiSelect({\n        instance: encore.rxMultiSelect.initialize($('#classification')),\n        inputs: ['Type A', 'Type B', 'Type C', 'Type D']\n    }));\n\n});\n// this component's exercise.js file, if it exists, is below\n\nvar rxMultiSelect = require('./rxMultiSelect.page').rxMultiSelect;\n\n/**\n   rxMultiSelect exercises.\n   @exports encore.exercise.rxMultiSelect\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxMultiSelect} [options.instance=rxMultiSelect.main] - Component to exercise.\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxMultiSelect({\n       cssSelector: '.secondary-info rx-paginate', // select one of many widgets on page\n   }));\n   ```\n */\nexports.rxMultiSelect = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        instance: rxMultiSelect.main\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            component = options.instance;\n        });\n\n        it('should start exercising defaults now');\n\n    };\n};\n"
        }
    },
    {
        "name": "rxNotify",
        "moduleName": "'encore.ui.rxNotify'",
        "displayName": "Rx Notify",
        "srcFiles": [
            "src/rxNotify/rxNotify.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxNotify/templates/rxNotification.html",
            "templates/rxNotify/templates/rxNotifications.html"
        ],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 28, 2015 @ 11:50 (UTC-0500)",
        "rawLastModified": "2015-10-28 11:50:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>The rxNotify component provides status message notifications on a page.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxNotifyCtrl', function ($rootScope, $scope, rxNotify, rxPromiseNotifications, $q) {\n    $scope.message = 'My message';\n\n    $scope.types = [ 'info', 'success', 'warning', 'error' ];\n\n    $scope.options = {\n        type: 'info',\n        timeout: -1,\n        show: 'immediate',\n        repeat: true\n    };\n\n    $scope.ondismiss = {\n        should: false,\n        method: function (msg) {\n            /* global alert */\n            alert('We are dismissing the message: ' + msg.text);\n        }\n    };\n\n    $scope.routeChange = function (stack) {\n        $rootScope.$broadcast('$routeChangeStart', {});\n        $rootScope.$broadcast('$routeChangeSuccess', {});\n    };\n\n    $scope.add = function (stack) {\n        var messageOptions = _.clone($scope.options);\n\n        if ($scope.ondismiss.should) {\n            messageOptions.ondismiss = _.clone($scope.ondismiss.method);\n        }\n\n        messageOptions.stack = stack;\n\n        rxNotify.add($scope.message, messageOptions);\n    };\n\n    // add a default messages (to custom stack so they don't show on the main page)\n    rxNotify.add('Helpful Information', {\n        stack: 'demo'\n    });\n    rxNotify.add('Loading', {\n        loading: true,\n        stack: 'demo'\n    });\n    rxNotify.add('You did it!', {\n        type: 'success',\n        stack: 'demo'\n    });\n    rxNotify.add('Careful now...', {\n        type: 'warning',\n        stack: 'demo'\n    });\n    rxNotify.add('Under Attack by Aliens', {\n        type: 'error',\n        stack: 'custom'\n    });\n\n    // stuff for rxPromiseNotifications\n    $scope.addPromise = function () {\n        $scope.deferred = $q.defer();\n\n        var promiseScope = rxPromiseNotifications.add($scope.deferred.promise, {\n            loading: 'Loading Message',\n            success: 'Success Message',\n            error: 'Error Message'\n        }, 'demo');\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxNotifyCtrl\">\n  <div layout=\"row\">\n    <div rx-form flex>\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Message Text:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"text\" ng-model=\"message\" />\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Timeout:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input type=\"number\" min=\"-1\" ng-model=\"options.timeout\" />\n              <rx-suffix>seconds</rx-suffix>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Type:</rx-field-name>\n          <rx-field-content>\n            <rx-input ng-repeat=\"type in types\">\n              <input rx-radio name=\"notify-type\" id=\"radType_{{$index}}\" ng-model=\"options.type\" value=\"{{type}}\" />\n              <label for=\"radType_{{$index}}\">{{type| rxCapitalize}}</label>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n\n        <rx-field>\n          <rx-field-name>Show:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input rx-radio name=\"notify-show\" id=\"radNotify_immediate\" ng-model=\"options.show\" value=\"immediate\" />\n              <label for=\"radNotify_immediate\">Immediately</label>\n            </rx-input>\n            <rx-input>\n              <input rx-radio name=\"notify-show\" id=\"radNotify_next\" ng-model=\"options.show\" value=\"next\" />\n              <label for=\"radNotify_next\">Next</label>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <rx-field>\n          <rx-field-name>Options:</rx-field-name>\n          <rx-field-content>\n            <rx-input>\n              <input rx-checkbox id=\"chkRepeat\" ng-model=\"options.repeat\" />\n              <label for=\"chkRepeat\">Repeat</label>\n            </rx-input>\n            <rx-input>\n              <input rx-checkbox id=\"chkAlertOnDismiss\" ng-model=\"ondismiss.should\" />\n              <label for=\"chkAlertOnDismiss\">Alert On Dismiss</label>\n            </rx-input>\n            <rx-input>\n              <input rx-checkbox id=\"chkLoading\" ng-model=\"options.loading\" />\n              <label for=\"chkLoading\">Loading? (shows spinner)</label>\n            </rx-input>\n          </rx-field-content>\n        </rx-field>\n      </rx-form-section>\n\n      <rx-form-section>\n        <div>\n          <button class=\"button\" ng-click=\"add('demo')\">Add to Demo Stack</button>\n          <button class=\"button\" ng-click=\"add('custom')\">Add to Custom Stack</button>\n        </div>\n      </rx-form-section>\n\n      <rx-form-section>\n        <div>\n          <h3>rxPromiseNotifications</h3>\n          <button class=\"button\" ng-click=\"addPromise()\">Create messages</button>\n          <button class=\"button positive\" ng-click=\"deferred.resolve();\">Resolve Promise</button>\n          <button class=\"button negative\" ng-click=\"deferred.reject();\">Reject Promise</button>\n        </div>\n      </rx-form-section>\n\n      <rx-form-section>\n        <div>\n          <button class=\"button\" ng-click=\"routeChange()\">Simulate Route Change</button>\n        </div>\n      </rx-form-section>\n    </div>\n\n    <div flex layout=\"column\" layout-align=\"top stretch\">\n      <div>\n        <h2>Demo Stack</h2>\n        <rx-notifications stack=\"demo\"></rx-notifications>\n      </div>\n\n      <div>\n        <h2>Custom Stack</h2>\n        <rx-notifications stack=\"custom\"></rx-notifications>\n      </div>\n    </div>\n  </div>\n\n  <hr />\n\n  <h2>Using rxNotification</h2>\n  <rx-notification type=\"error\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n  <rx-notification type=\"warning\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n  <rx-notification type=\"info\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n  <rx-notification type=\"success\">Hello, world! <a href=\"#\">This is a link.</a></rx-notification>\n\n  <h3>Using rxNotification with custom stack</h3>\n  <div layout=\"row\">\n    <div flex>\n      <h4>Demo Stack (demo-stack)</h4>\n      <rx-notifications stack=\"demo-stack\"></rx-notifications>\n    </div>\n\n    <div flex>\n      <h4>Custom Stack (custom-stack)</h4>\n      <rx-notifications stack=\"custom-stack\"></rx-notifications>\n    </div>\n  </div>\n\n  <rx-notification stack=\"demo-stack\" type=\"info\">Hello, world in demo-stack stack!</rx-notification>\n  <rx-notification stack=\"custom-stack\" type=\"warning\">Hello, world in custom-stack stack!</rx-notification>\n</div>\n",
            "less": "@import \"mixins\";\n\n.rx-notifications {\n    margin-bottom: 1.5em;\n\n    .rx-notification {\n        clear: both;\n        font-weight: 800;\n        font-size: 1.2em;\n        padding: 10px 50px;\n        margin-bottom: 2px;\n        position: relative;\n        background: no-repeat 18px 50%;\n\n        .button {\n            font-weight: normal;\n            margin-bottom: 0;\n        }\n\n        &.notification-success {\n            background-color: #ddffd3;\n            background-image: url(\"images/green-checkmark-circled.png\");\n            color: #45ad26;\n            a {\n                color: #7db162;\n            }\n        }\n        &.notification-info {\n            background-color: #83c9fe;\n            background-image: url(\"images/info-circled.png\");\n            color: #1672b9;\n            a {\n                color: #568fb8;\n            }\n        }\n        &.notification-warning {\n            background-color: #ffa61b;\n            background-image: url(\"images/warning-triangle.png\");\n            color: @white;\n            a {\n                color: #f1d6af;\n            }\n        }\n        &.notification-error {\n            background-color: #f21a1a;\n            background-image: url(\"images/error-stop.png\");\n            color: @white;\n            a {\n                color: #fdaaab;\n            }\n        }\n        &.notification-loading {\n            // Hide icon since it's replaced by spinner\n            background-image: none;\n            .rx-spinner {\n                position: absolute;\n                left: 19px;\n                top: 50%;\n                margin-top: -9px;\n            }\n        }\n    }\n\n    .notification-dismiss {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        padding: 0 15px;\n        content: \"\\00D7\";\n        .opacity(.5);\n        color: @black;\n        &:hover,\n        &:focus {\n            .opacity(0.8);\n            text-decoration: none;\n        }\n    }\n}\n\n.animate-fade {\n    &.ng-enter,\n    &.ng-leave {\n        -webkit-transition: 0.25s cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n        -moz-transition: 0.25s cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n        -ms-transition: 0.25s cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n        -o-transition: 0.25s cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n        transition: 0.25s cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n        -webkit-animation-fill-mode: both;\n        animation-fill-mode: both;\n    }\n\n    &.ng-leave.ng-leave-active,\n    &.ng-enter {\n        opacity: 0;\n    }\n\n    &.ng-leave,\n    &.ng-enter.ng-enter-active {\n        opacity: 1;\n    }\n}//.animate-fade\n\n",
            "midway": "var _ = require('lodash');\n\nvar notifications = encore.rxNotify;\n\ndescribe('rxNotify', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxNotify');\n    });\n\n    describe('auto dismissal', function () {\n        var addToCustomStack;\n\n        before(function () {\n            addToCustomStack = function (type, timeout) {\n                var input = $('input[ng-model=\"options.timeout\"]');\n                input.clear();\n                input.sendKeys(timeout);\n                $('input[value=\"' + type + '\"]').click();\n                element(by.buttonText('Add to Custom Stack')).click();\n            };\n\n        });\n\n        it('should add a new success message that dismisses itself', function () {\n            addToCustomStack('success', '.5');\n            expect(notifications.all.byText('My message').type).to.eventually.equal('success');\n        });\n\n        it('should remove itself after a little while', function () {\n            browser.sleep(1000);\n            expect(notifications.byStack('custom').exists('My message', 'success')).to.eventually.false;\n        });\n\n        it('should add a new success message indefinitely', function () {\n            addToCustomStack('success', -1);\n            expect(notifications.all.byText('My message').type).to.eventually.equal('success');\n        });\n\n    });\n\n    describe('by stack -- demo', function () {\n\n        it('should have 4 notifications in it', function () {\n            expect(notifications.byStack('demo').count()).to.eventually.equal(4);\n        });\n\n        describe('info type', function () {\n            var info;\n\n            before(function () {\n                info = notifications.byStack('demo').byText('Helpful Information');\n            });\n\n            it('should be type \"info\"', function () {\n                expect(info.type).to.eventually.equal('info');\n            });\n\n            it('should have helpful information', function () {\n                expect(info.text).to.eventually.equal('Helpful Information');\n            });\n\n            it('should be dismissable', function () {\n                expect(info.isDismissable()).to.eventually.be.true;\n            });\n\n            it('should not have a spinner', function () {\n                expect(info.hasSpinner()).to.eventually.be.false;\n            });\n\n            it('should have a second spinner on another notification', function () {\n                expect(notifications.byStack('demo').byText('Loading').hasSpinner()).to.eventually.be.true;\n            });\n\n        });\n\n    });\n\n    describe('all notifications', function () {\n\n        it('should have 6 notifications in it', function () {\n            expect(notifications.all.count()).to.eventually.equal(8);\n        });\n\n        describe('by type', function () {\n            var success;\n\n            before(function () {\n                success = notifications.all.byText('You did it!');\n            });\n\n            it('should be type \"success\"', function () {\n                expect(success.type).to.eventually.equal('success');\n            });\n\n            it('should have done it', function () {\n                expect(success.text).to.eventually.equal('You did it!');\n            });\n\n        });\n    });\n\n    describe('notifications exist', function () {\n\n        it('should find a notification with no class and a string (all)', function () {\n            expect(notifications.all.exists('Under Attack by Aliens')).to.eventually.be.true;\n        });\n\n        it('should find a notification with no class and a string (custom stack)', function () {\n            expect(notifications.byStack('custom').exists('Under Attack by Aliens')).to.eventually.be.true;\n        });\n\n        it('should find a notification with a class and a string', function () {\n            expect(notifications.all.exists('Under Attack by Aliens','error')).to.eventually.be.true;\n        });\n\n        it('should find a notification with a class and no string', function () {\n            expect(notifications.all.exists('','error')).to.eventually.be.true;\n        });\n\n        it('should not find a notification with the wrong class and a string', function () {\n            expect(notifications.all.exists('Under Attack by Aliens','success')).to.eventually.be.false;\n        });\n\n        it('should not find a notification with the wrong class and no string', function () {\n            expect(notifications.all.exists('','abject_failure')).to.eventually.be.false;\n        });\n\n        it('should not find a notification with no class and a wrong string', function () {\n            expect(notifications.all.exists('Under Attack by Alienists')).to.eventually.be.false;\n        });\n\n    });\n\n    describe('dismissing notifications', function () {\n\n        it('should dismiss a single notification', function () {\n            notifications.all.byText('Careful now...').dismiss();\n        });\n\n        it('should have actually dismissed the message', function () {\n            expect(notifications.all.count()).to.eventually.equal(7);\n        });\n\n        describe('by stack', function () {\n\n            it('should dismiss every notification in a stack', function () {\n                notifications.byStack('custom').dismiss();\n            });\n\n            it('should have actually dismissed every message', function () {\n                expect(notifications.byStack('custom').count()).to.eventually.equal(0);\n            });\n\n        });\n\n        describe('with ondismiss function', function () {\n            var msgText = 'Testing On Dismiss Method';\n\n            before(function () {\n                var chkOnDismiss = $('input[ng-model=\"ondismiss.should\"]');\n                var txtMessage = $('input[ng-model=\"message\"]');\n\n                txtMessage.clear();\n                txtMessage.sendKeys(msgText);\n\n                chkOnDismiss.getAttribute('checked').then(function (isChecked) {\n                    if (!isChecked) {\n                        chkOnDismiss.click();\n                    }\n                });\n\n                element(by.buttonText('Add to Custom Stack')).click();\n            });\n\n            it('should have an alert when the message is dismissed', function () {\n                notifications.byStack('custom').byText(msgText).dismiss();\n\n                browser.wait(function () {\n                    return browser.switchTo().alert().then(function (alertBox) {\n                        return alertBox.getText().then(function (txt) {\n                            expect(txt).to.eq('We are dismissing the message: Testing On Dismiss Method');\n                            return alertBox.dismiss().then(function () {\n                                return true;\n                            });\n                        });\n                    });\n                });\n            });\n        });\n\n        describe('all', function () {\n\n            it('should dismiss all notifications', function () {\n                notifications.all.dismiss();\n            });\n\n            it('should have actually dismissed every message', function () {\n                expect(notifications.all.count()).to.eventually.equal(1);\n            });\n\n        });\n\n    });\n\n    describe('stackless notifications', function () {\n        var notification;\n\n        before(function () {\n            notification = notifications.initialize($('rx-notification[type=\"error\"] .rx-notification'));\n        });\n\n        it('should have a warning type', function () {\n            expect(notification.type).to.eventually.equal('error');\n        });\n\n        it('should say hello', function () {\n            expect(notification.text).to.eventually.equal('Hello, world! This is a link.');\n        });\n\n        it('should not be dismissable', function () {\n            expect(notification.isDismissable()).to.eventually.be.false;\n        });\n\n        it('should not have a spinner', function () {\n            expect(notification.hasSpinner()).to.eventually.be.false;\n        });\n\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxOptionTable",
        "moduleName": "'encore.ui.rxOptionTable'",
        "displayName": "Rx Option Table",
        "srcFiles": [
            "src/rxOptionTable/rxOptionTable.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxOptionTable/templates/rxOptionTable.html"
        ],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 21, 2015 @ 17:29 (UTC-0500)",
        "rawLastModified": "2015-10-21 17:29:16 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxOptionTable component provides functionality to create a series of radio or checkbox inputs within a table.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxOptionTableCtrl', function ($scope) {\n    $scope.radioValue = 0;\n    $scope.checkboxValues = [true, 'unchecked'];\n\n    $scope.optionTableData = [\n        {\n            'id': 'option1',\n            'name': 'Option #1',\n            'value': 0,\n            'obj': {\n                'name': 'Nested Name 1'\n            }\n        }, {\n            'id': 'option2',\n            'name': 'Option #2',\n            'value': 1,\n            'obj': {\n                'name': 'Nested Name 2'\n            }\n        }, {\n            'id': 'option3',\n            'name': 'Option #3',\n            'value': 2,\n            'obj': {\n                'name': 'Nested Name 3'\n            }\n        }, {\n            'id': 'option4',\n            'name': 'Option #4',\n            'value': 3,\n            'obj': {\n                'name': 'Nested Name 4'\n            }\n        }\n    ];\n\n    $scope.optionTableColumns = [\n        {\n            'label': 'Name',\n            'key': 'name',\n            'selectedLabel': '(Already saved data)'\n        }, {\n            'label': 'Static Content',\n            'key': 'Some <strong>Text &</strong> HTML'\n        }, {\n            'label': 'Expression 2',\n            'key': '{{ value * 100 | number:2 }}'\n        }, {\n            'label': 'Expression 3',\n            'key': '{{ obj.name | uppercase }}'\n        }, {\n            'label': 'Expression 4',\n            'key': '{{ value | currency }}'\n        }\n    ];\n\n    $scope.optionTableCheckboxData = [\n        {\n            'name': 'Item 1'\n        }, {\n            'name': 'Item 2',\n            'value': 'checked',\n            'falseValue': 'unchecked'\n        }\n    ];\n\n    $scope.optionTableEmptyData = [];\n\n    $scope.disableOption = function (tableId, fieldId, rowId) {\n        return rowId === 'option4';\n    };\n});\n",
            "html": "<div ng-controller=\"rxOptionTableCtrl\">\n  <h3>Radio Option Table</h3>\n  <rx-option-table\n      id=\"radioOptionTable\"\n      data=\"optionTableData\"\n      columns=\"optionTableColumns\"\n      type=\"radio\"\n      model=\"radioValue\"\n      field-id=\"optionTable\"\n      selected=\"0\"\n      class=\"full-width\"\n      disable-fn=\"disableOption(tableId, fieldId, rowId)\"\n      ></rx-option-table>\n\n  <p>Bound Value: {{radioValue}}</p>\n\n  <br />\n\n  <h3>Checkbox Option Table</h3>\n  <rx-option-table\n      id=\"checkboxOptionTable\"\n      columns=\"optionTableColumns\"\n      type=\"checkbox\"\n      model=\"checkboxValues\"\n      field-id=\"optionCheckboxTable\"\n      data=\"optionTableCheckboxData\"\n      required=\"true\"\n      ></rx-option-table>\n\n  <p ng-repeat=\"val in checkboxValues\">\n    Item {{$index + 1}} Value: {{val}}\n  </p>\n\n  <br />\n\n  <h3>Empty Option Table</h3>\n  <rx-option-table\n      id=\"emptyOptionTable\"\n      columns=\"optionTableColumns\"\n      type=\"checkbox\"\n      model=\"emptyValue\"\n      field-id=\"optionCheckboxTable\"\n      data=\"optionTableEmptyData\"\n      empty-message=\"You don't have any data!\"\n      ></rx-option-table>\n</div>\n",
            "less": "/*\n * rxOptionTable\n */\n.rx-option-table {\n    // we want the table to not look ugly when stretched across the screen\n    width: auto;\n    // we also want a semi-consistent width, but not too wide for modals\n    min-width: 39em;\n\n    td:not(.empty-data) {\n        // remove default padding from td's so that we can make the label take up the full room\n        padding: 0;\n    }\n    .fillWrapper {\n        box-sizing: border-box;\n        display: inline-block;\n        height: 100%;\n        width: 100%;\n        position: relative;\n\n        label {\n            box-sizing: border-box;\n            width: 100%;\n            height: 100%;\n            padding: @tableCellPadding;\n            cursor: pointer;\n\n            display: flex;\n            // vertically centered content in label\n            align-items: center;\n\n            .alignWrapper {\n                flex: 1 1 auto;\n            }\n        }\n\n        rx-help-text {\n            margin: 0;\n        }\n    }\n    input[disabled] {\n        cursor: not-allowed;\n    }\n    .disabled {\n        label {\n            cursor: default;\n            color: @inputColorDisabled;\n        }\n    }\n    .option-table-input {\n        text-align: center;\n        line-height: 0;\n    }\n    .current td {\n        color: #3ab661;\n    }\n    // @note KL: I'd like to stick with just adding the background to the <tr>, but\n    // we need to make the selector more specific to override the table-stripe styles.\n    .selected td {\n        background: @tableRowSelected;\n        border-color: #bad4bb;\n        // this 'double' makes it so that the border-color applies to the top border as well\n        // @see http://stackoverflow.com/questions/7942212/css-table-row-border-color-with-border-collapse\n        border-style: double;\n    }\n\n    thead {\n        tr {\n            th:first-child {\n                width: @rxCheckbox-size;\n            }\n        }\n    }\n}\n",
            "midway": "var _ = require('lodash');\nvar rxOptionTablePage = encore.rxOptionTable;\nvar rxMisc = encore.rxMisc;\n\ndescribe('rxOptionTable', function () {\n    var component;\n\n    before(function () {\n        demoPage.go('#/components/rxOptionTable');\n    });\n\n    describe('exercise', function () {\n        describe('radio table', encore.exercise.rxOptionTable({\n            instance: encore.rxOptionTable.initialize($('#radioOptionTable')),\n            visible: true,\n            empty: false\n        }));\n\n        describe('checkbox table', encore.exercise.rxOptionTable({\n            instance: encore.rxOptionTable.initialize($('#checkboxOptionTable')),\n            visible: true,\n            empty: false\n        }));\n\n        describe('empty table', encore.exercise.rxOptionTable({\n            cssSelector: '#emptyOptionTable',\n            visible: true,\n            empty: true\n        }));\n    });\n\n    describe('with radios', function () {\n        var columnNames = ['Name', 'Static Content', 'Expression 2', 'Expression 3', 'Expression 4'];\n\n        before(function () {\n            component = rxOptionTablePage.initialize($('#radioOptionTable'));\n        });\n\n        it('should have all column names', function () {\n            expect(component.columnNames).to.eventually.eql(columnNames);\n        });\n\n        it('should return column data as text by default', function () {\n            var textData = ['$0.00', '$1.00', '$2.00', '$3.00'];\n            expect(component.columnData('Expression 4')).to.eventually.eql(textData);\n        });\n\n        it('should return column data as defined by a custom function', function () {\n            var penniesData = [0, 100, 200, 300];\n            var penniesFn = function (cellElements) {\n                return cellElements.map(function (cellElement) {\n                    return cellElement.getText().then(rxMisc.currencyToPennies);\n                });\n            };\n\n            expect(component.columnData('Expression 4', penniesFn)).to.eventually.eql(penniesData);\n        });\n\n        it('should select a column by text', function () {\n            component.selectByColumnText('Expression 4', '$2.00');\n            expect(component.selections).to.eventually.eql([2]);\n        });\n\n        it('should have the current saved data in the first row', function () {\n            expect(component.row(0).isCurrent()).to.eventually.be.true;\n        });\n\n        it('should have disabled row 4', function () {\n            expect(component.disabledOptions).to.eventually.eql([3]);\n        });\n\n        describe('selected row', function () {\n            var row;\n            var cellData = ['Option #3', 'Some Text & HTML', '200.00', 'NESTED NAME 3', '$2.00'];\n            var rowData = _.zipObject(columnNames, cellData);\n\n            before(function () {\n                row = component.selectedRow;\n            });\n\n            it('should be selected', function () {\n                expect(row.isSelected()).to.eventually.be.true;\n            });\n\n            it('should not be the current saved data', function () {\n                expect(row.isCurrent()).to.eventually.be.false;\n            });\n\n            _.forEach(rowData, function (data, column) {\n                it('should have the correct data in the ' + column + ' column', function () {\n                    expect(row.cell(column)).to.eventually.equal(data);\n                });\n            });\n        });\n    });//radio\n\n    describe('with checkboxes', function () {\n        before(function () {\n            component = rxOptionTablePage.initialize($('#checkboxOptionTable'));\n        });\n\n        it('should have one row selected', function () {\n            expect(component.selections).to.eventually.eql([0]);\n        });\n\n        it('should unselect all rows', function () {\n            component.unselectAll();\n            expect(component.selections).to.eventually.be.empty;\n        });\n\n        it('should select many rows', function () {\n            component.selectMany([{ Name: 'Item 1' }, { Name: 'Item 2' }]);\n            expect(component.selections).to.eventually.eql([0, 1]);\n        });\n\n        it('should unselect many rows', function () {\n            component.unselectMany([{ Name: 'Item 1' }, { Name: 'Item 2' }]);\n            expect(component.selections).to.eventually.be.empty;\n        });\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxOptionTable = require('./rxOptionTable.page').rxOptionTable;\n\n/**\n * rxOptionTable exercises.\n * @exports encore.exercise.rxOptionTable\n * @param {Object} [options=] - Test options. Used to build valid tests.\n * @param {rxOptionTable} [options.instance=] - Component to exercise.\n * @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n * @param {string} [options.visible=true] - Determines if the option table is visible\n * @param {string} [options.empty=false] - Determines if the option table is empty\n */\nexports.rxOptionTable = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        visible: true,\n        empty: false\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxOptionTable.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxOptionTable.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should ' + (options.visible ? 'be' : 'not be') + ' visible', function () {\n            expect(component.isDisplayed()).to.eventually.eq(options.visible);\n        });\n\n        if (options.empty) {\n            it('should be empty', function () {\n                expect(component.isEmpty()).to.eventually.be.true;\n            });\n\n            it('should have a \"table empty\" error message', function () {\n                expect(component.emptyMessage).to.eventually.not.be.null;\n            });\n        } else {\n            it('should not be empty', function () {\n                expect(component.isEmpty()).to.eventually.be.false;\n            });\n\n            it('should not have a \"table empty\" error message', function () {\n                expect(component.emptyMessage).to.eventually.be.null;\n            });\n        }\n    };\n};\n"
        }
    },
    {
        "name": "rxPageTitle",
        "moduleName": "'encore.ui.rxPageTitle'",
        "displayName": "Rx Page Title",
        "srcFiles": [
            "src/rxPageTitle/rxPageTitle.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 1, 2015 @ 11:21 (UTC-0500)",
        "rawLastModified": "2015-10-01 11:21:33 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>The rxPageTitle component manages page titles. </p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxPageTitleCtrl', function ($scope, rxPageTitle) {\n    $scope.changeTitle = function () {\n        rxPageTitle.setTitle($scope.newTitle);\n    };\n\n    $scope.refreshTitle = function () {\n        $scope.pageTitle = rxPageTitle.getTitle();\n    };\n\n    $scope.refreshTitle();\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxPageTitleCtrl\">\n    Current Title: {{pageTitle}} <button ng-click=\"refreshTitle()\" class=\"button\">Get Updated Title</button><br />\n\n    <input type=\"text\" ng-change=\"changeTitle()\" ng-model=\"newTitle\" placeholder=\"New Title\" />\n</div>",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxPaginate",
        "moduleName": "'encore.ui.rxPaginate'",
        "displayName": "Rx Paginate",
        "srcFiles": [
            "src/rxPaginate/rxPaginate.module.js",
            "src/rxPaginate/scripts/Page.js",
            "src/rxPaginate/scripts/PageTracking.js",
            "src/rxPaginate/scripts/Paginate.js",
            "src/rxPaginate/scripts/PaginatedItemsSummary.js",
            "src/rxPaginate/scripts/rxLoadingOverlay.js",
            "src/rxPaginate/scripts/rxPaginate.js",
            "src/rxPaginate/scripts/rxPaginateUtils.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxPaginate/templates/rxPaginate.html"
        ],
        "dependencies": [
            "rxLocalStorage"
        ],
        "stability": "stable",
        "lastModified": "Nov 2, 2015 @ 14:45 (UTC-0600)",
        "rawLastModified": "2015-11-02 14:45:54 -0600",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>The rxPaginate component adds pagination to a table.</p>\n<p>Two different forms of pagination are supported:</p>\n<ol>\n<li>UI-based pagination, where all items are retrieved at once, and paginated in the UI</li>\n<li>Server-side pagination, where the pagination directive works with a paginated API</li>\n</ol>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxPaginateCtrl', function ($scope, $q, $timeout, $filter, rxPaginateUtils,\n                                        PageTracking, rxSortUtil, SelectFilter) {\n    $scope.pager = PageTracking.createInstance({ itemsPerPage: 3 });\n\n    var os = ['Ubuntu 12.04', 'Red Hat Enterprise Linux 6.4', 'CentOS 6.4', 'Ubuntu 13.04'];\n    var makeServers = function (serverCount) {\n        var servers = [];\n        for (var i = 1; i < serverCount + 1; i++) {\n            var server = {\n                id: i,\n                name: 'Server ' + i,\n                os: os[i % os.length]\n            };\n            servers.push(server);\n        }\n        return servers;\n    };\n\n    $scope.servers = makeServers(21);\n\n    $scope.removeServers = function () {\n        if ($scope.servers.length > 2) {\n            $scope.servers = $scope.servers.splice(2);\n        }\n    };\n\n    $scope.addServers = function () {\n        $scope.servers = $scope.servers.concat(makeServers(2));\n    };\n\n    var allLazyServers = makeServers(701);\n\n    var serverInterface = {\n        getItems: function (pageNumber, itemsPerPage, params) {\n            var deferred = $q.defer();\n            var filterText = params.filterText;\n            var sortColumn = params.sortColumn;\n            var sortDirection = params.sortDirection;\n\n            if (sortColumn === 'name') {\n                sortColumn = 'id';\n            }\n\n            if (sortDirection === 'DESCENDING') {\n                sortColumn = '-' + sortColumn;\n            }\n\n            $timeout(function () {\n                var first = pageNumber * itemsPerPage;\n                var added = first + itemsPerPage;\n                var last = (added > allLazyServers.length) ? allLazyServers.length : added;\n\n                var filteredServers = $filter('filter')(allLazyServers, filterText);\n                filteredServers = $scope.osFilter.applyTo(filteredServers);\n                filteredServers = $filter('orderBy')(filteredServers, sortColumn);\n\n                // Return 100 items more than the user's `itemsPerPage`. i.e. if the\n                // user is asking for 25 items per page, return 125 in total\n                var lazyServers = filteredServers.slice(first, last + 100);\n\n                var response = {\n                    items: lazyServers,\n                    pageNumber: pageNumber,\n                    totalNumberOfItems: filteredServers.length\n                };\n\n                if (filterText === 'error') {\n                    deferred.reject();\n                } else {\n                    deferred.resolve(response);\n                }\n            }, 300);\n            return deferred.promise;\n        }\n    };\n\n    $scope.sort = rxSortUtil.getDefault('name', false);\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n    $scope.data = { searchText: '' };\n    $scope.clearFilter = function () {\n        $scope.data.searchText = '';\n    };\n    $scope.osFilter = SelectFilter.create({\n        properties: ['os'],\n        available: {\n            os: os\n        }\n    });\n    $scope.serverInterface = serverInterface;\n    $scope.pagedServers = PageTracking.createInstance({ itemsPerPage: 25 });\n});\n",
            "html": "<div ng-controller=\"rxPaginateCtrl\">\n    <h3>UI-Based Pagination</h3>\n    <table class=\"table-striped demo-ui-pagination\">\n        <thead>\n            <tr>\n                <th class=\"column-title\" style=\"width:10em;\">Name</th>\n                <th class=\"column-title\">OS</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"server in servers | orderBy: sorter.predicate:sorter.reverse | Paginate:pager \">\n                <td>\n                    {{server.name}}\n                </td>\n                <td>{{server.os}}</td>\n            </tr>\n        </tbody>\n        <tfoot>\n            <tr class=\"paginate-area\">\n                <td colspan=\"2\">\n                    <rx-paginate page-tracking=\"pager\"></rx-paginate>\n                </td>\n            </tr>\n        </tfoot>\n    </table>\n\n    <p>Use these buttons to adjust the number of pages displayed. The pagination will hide when there is only one page available.</p>\n    <p>\n        <button ng-click=\"removeServers()\" class=\"button sm negative\">Remove first 2 servers</button>\n        <button ng-click=\"addServers()\" class=\"button sm positive\">Add 2 servers</button>\n    </p>\n\n    <h3>API-Based Pagination</h3>\n    <p>The API used by this demo is returning 100 items more than the user's selected <code>itemsPerPage</code>. If the user's <code>itemsPerPage</code> is 25, then the API will return 125 items on each request. This means with the default <code>itemsPerPage</code> of 25, five pages of results are coming back at a time. You should be able to click through pages 1-5 without a loading message, and then the loading message will appear for page 6.</p>\n\n    <p>Click the \"Refresh\" button to see how the current page can be reloaded without the user interacting with the <code>&lt;rx-paginate&gt;</code> buttons.</p>\n\n    <p>Enter a search string of \"error\" to see the default error handling.</p>\n\n    <button ng-click=\"pagedServers.refresh()\" class=\"button sm\">Refresh</button>\n    <table rx-floating-header rx-loading-overlay class=\"table-striped demo-api-pagination\">\n        <thead>\n            <tr>\n                <th colspan=\"2\" class=\"filter-header\">\n                    <form rx-form>\n                        <rx-form-section controlled-width>\n                            <rx-field>\n                                <rx-field-name> Filter Data </rx-field-name>\n                                <rx-field-content>\n                                    <rx-input>\n                                        <rx-search-box rx-placeholder=\"'Filter by any...'\" ng-model=\"data.searchText\"></rx-search-box>\n                                    </rx-input>\n                                </rx-field-content>\n                            </rx-field>\n                            <rx-select-filter filter=\"osFilter\"></rx-select-filter>\n                        </rx-form-section>\n                    </form>\n                </th>\n            </tr>\n            <tr>\n                <th class=\"column-title\" style=\"width:10em;\">\n                    <rx-sortable-column\n                        sort-method=\"sortCol(property)\"\n                        sort-property=\"name\"\n                        predicate=\"sort.predicate\"\n                        reverse=\"sort.reverse\">\n                        Name\n                    </rx-sortable-column>\n                </th>\n                <th class=\"column-title\">\n                    <rx-sortable-column\n                        sort-method=\"sortCol(property)\"\n                        sort-property=\"os\"\n                        predicate=\"sort.predicate\"\n                        reverse=\"sort.reverse\">\n                        OS\n                    </rx-sortable-column>\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"server in pagedServers.items\">\n                <td>\n                    {{server.name}}\n                </td>\n                <td>{{server.os}}</td>\n            </tr>\n        </tbody>\n        <tfoot>\n            <tr class=\"paginate-area\">\n                <td colspan=\"2\">\n                    <rx-paginate\n                        page-tracking=\"pagedServers\"\n                        server-interface=\"serverInterface\"\n                        error-message=\"Error loading page!\"\n                        filter-text=\"data.searchText\"\n                        selections=\"osFilter.selected\"\n                        sort-column=\"sort.predicate\"\n                        sort-direction=\"sort.reverse\">\n                    </rx-paginate>\n                </td>\n            </tr>\n        </tfoot>\n    </table>\n</div>\n",
            "less": "/*\n * rxPaginate\n */\n@paginationColor: #ababab;\n\n.paginate-area {\n    text-align: center;\n    td {\n        padding: 0;\n        background: @white;\n    }\n}\n\n.rx-paginate {\n    .pagination {\n        display: flex;\n        flex-flow: row nowrap;\n        padding-left: 0;\n        width: 100%;\n    }\n\n    .pagination li {\n        display: inline;\n    }\n\n    .pagination li a {\n        cursor: pointer;\n    }\n\n    .pagination li a,\n    .pagination li span {\n        position: relative;\n        float: left;\n        padding: 6px 12px;\n        margin-left: -1px;\n        text-decoration: none;\n        background: @white;\n        border-top: 2px solid transparent;\n        color: @paginationColor;\n    }\n\n    .pagination > li:first-child {\n        order: 1;\n    }\n\n    .pagination > li:first-child > a,\n    .pagination > li:first-child > span {\n        padding-left: 30px;\n        color: @infoBlue;\n        background: transparent;\n        &:before {\n            content: \".\";\n            width: 0;\n            height: 0;\n            font-size: 0;\n            display: block;\n            position: absolute;\n            border: 6px solid transparent;\n            border-bottom-color: @infoBlue;\n            border-top: 0;\n            left: 10px;\n            top: 55%;\n            margin-top: -4px;\n        }\n    }\n\n    .pagination > li:nth-child(2) {\n        order: 2;\n        padding: 6px 12px;\n        border-top: 2px solid transparent;\n        color: @paginationColor;\n    }\n\n    .pagination > .page-links {\n        order: 3;\n        margin: auto;\n        align-self: center;\n    }\n\n    .pagination > li:last-child {\n        order: 4;\n        border-top: 2px solid transparent;\n        padding: 6px 12px;\n        color: @paginationColor;\n        button[disabled] {\n            color: @paginationColor;\n        }\n    }\n\n    .pagination > li > div > ul {\n        float: right;\n        padding-left: 5px;\n        button {\n            padding: 0;\n            border: 0;\n            background: transparent;\n            color: @infoBlue;\n        }\n        span {\n            float: none;\n            background: transparent;\n        }\n        & li + li::before {\n            content: \" | \";\n            margin: 0 1em;\n        }\n    }\n\n    .pagination > li:last-child > a,\n    .pagination > li:last-child > span {\n    }\n\n    .pagination > .page-links > li > a:hover,\n    .pagination > .page-links > li > span:hover,\n    .pagination > .page-links > li > a:focus,\n    .pagination > .page-links > li > span:focus {\n        background: #eeeeee;\n    }\n\n    .pagination > .page-links > .active > a,\n    .pagination > .page-links > .active > span,\n    .pagination > .page-links > .active > a:hover,\n    .pagination > .page-links > .active > span:hover,\n    .pagination > .page-links > .active > a:focus,\n    .pagination > .page-links > .active > span:focus {\n        cursor: default;\n        border-top-color: @black;\n        color: @black;\n        background: @white;\n    }\n\n    .pagination .disabled > span,\n    .pagination .disabled > span:hover,\n    .pagination .disabled > span:focus,\n    .pagination .disabled > a,\n    .pagination .disabled > a:hover,\n    .pagination .disabled > a:focus {\n        visibility: hidden;\n    }\n\n    .pagination-lg > li > a,\n    .pagination-lg > li > span {\n        padding: 10px 16px;\n        font-size: 18px;\n    }\n\n    .pagination-sm > li > a,\n    .pagination-sm > li > span {\n        padding: 5px 10px;\n        font-size: 12px;\n    }\n}\n\n.loading-overlay {\n    z-index: 100;\n    position: absolute;\n    top: -1px;\n    left: -1px;\n    width: ~\"calc(100% + 2px)\";\n    height: ~\"calc(100% + 2px)\";\n    background: rgba(222, 222, 221, 0.8);\n    .loading-text-wrapper {\n        width: 100px;\n        margin: 20% auto;\n    }\n    .loading-text {\n        font-size: 18px;\n        margin-top: 15%;\n        text-align: center;\n        color: #777777;\n    }\n    i {\n        font-size: 30px;\n        margin-left: 25px;\n        color: #777777;\n    }\n}\n",
            "midway": "var Page = require('astrolabe').Page;\n\n// rowFromElement and table are anonymous page objects to assist with table data\nvar rowFromElement = function (rowElement) {\n    return Page.create({\n\n        name: {\n            get: function () {\n                return rowElement.element(by.binding('name')).getText();\n            }\n        },\n\n        os: {\n            get: function () {\n                return rowElement.element(by.binding('os')).getText();\n            }\n        },\n    });\n};\n\nvar repeaterString = 'server in pagedServers.items';\nvar tableSelector = '.demo-api-pagination';\nvar table = Page.create({\n\n    tblResults: {\n        get: function () {\n            return element.all(by.repeater(repeaterString));\n        }\n    },\n\n    count: {\n        value: function () {\n            return this.tblResults.count();\n        }\n    },\n\n    row: {\n        value: function (rowIndex) {\n            return rowFromElement(this.tblResults.get(rowIndex));\n        }\n    },\n\n    column: {\n        value: function (columnName) {\n            var column = element(by.cssContainingText(tableSelector + ' rx-sortable-column', columnName));\n            return encore.rxSortableColumn.initialize(column, repeaterString);\n        }\n    },\n\n    textFilter: {\n        get: function () {\n            return encore.rxSearchBox.main.term;\n        },\n        set: function (filterTerm) {\n            encore.rxSearchBox.main.term = filterTerm;\n        }\n    },\n\n    selectFilter: {\n        value: function (filterData) {\n            encore.rxSelectFilter.main.apply(filterData);\n        }\n    },\n\n    pagination: {\n        get: function () {\n            return encore.rxPaginate.initialize($('.demo-api-pagination .rx-paginate'));\n        }\n    }\n\n});\n\ndescribe('rxPaginate', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxPaginate');\n    });\n\n    describe('UI pagination exercises', encore.exercise.rxPaginate({\n        pageSizes: [3, 50, 200, 350, 500],\n        defaultPageSize: 3,\n        cssSelector: '.demo-ui-pagination .rx-paginate'\n    }));\n\n    describe('API pagination exercises', encore.exercise.rxPaginate({\n        pageSizes: [25, 50, 200, 350, 500],\n        defaultPageSize: 25,\n        pages: 30,\n        instance: table.pagination\n    }));\n\n    describe('Filter and sort tests', function () {\n        var nameColumn = table.column('Name');\n        var osColumn = table.column('OS');\n\n        beforeEach(function () {\n            encore.rxFloatingHeader.scrollToElement(table.tblResults);\n            table.textFilter = '';\n            table.selectFilter({\n                Os: { All: true }\n            });\n            nameColumn.sortAscending();\n        });\n\n        it('should get new items when filter text is entered', function () {\n            table.textFilter = 'Ubuntu';\n            expect(table.row(0).name).to.eventually.equal('Server 3');\n            expect(table.row(0).os).to.eventually.equal('Ubuntu 13.04');\n        });\n\n        it('should get new items when the select filter is used', function () {\n            table.selectFilter({\n                Os: {\n                    All: false,\n                    Centos: true\n                }\n            });\n            expect(table.row(0).name).to.eventually.equal('Server 2');\n            expect(table.row(0).os).to.eventually.equal('CentOS 6.4');\n        });\n\n        it('should sort the Name column descending', function () {\n            nameColumn.sortDescending();\n            expect(table.row(0).name).to.eventually.equal('Server 701');\n        });\n\n        it('should sort the OS column descending', function () {\n            osColumn.sortDescending();\n            expect(table.row(0).os).to.eventually.equal('Ubuntu 13.04');\n        });\n\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\n\nvar rxPaginate = require('./rxPaginate.page').rxPaginate;\n\n/**\n   rxPaginate exercises.\n   @exports encore.exercise.rxPaginate\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxPaginate} [options.instance=] - Component to exercise.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @param {string} [options.pages=6] - Estimated page size in the pagination widget.\n   @param {number[]} [options.pageSizes=50, 200, 350, 500] - Page sizes to validate.\n   @param {number} [options.defaultPageSize=50] - Default page size on page load.\n   @param {number} [options.invalidPageSize=45] - For testing resizing pagination to invalid items per page.\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxPaginate({\n       instance: myPage.pagination, // select one of many pagination instances from your page objects\n       pages: 20 // will exercise full functionality at 6, limited functionality at 2\n   }));\n   ```\n */\nexports.rxPaginate = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        pages: 6,\n        pageSizes: [50, 200, 350, 500],\n        defaultPageSize: 50,\n        invalidPageSize: 45\n    });\n\n    return function () {\n        var pagination;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                pagination = options.instance;\n            } else {\n                pagination = rxPaginate.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                pagination = rxPaginate.initialize($(options.cssSelector));\n            }\n        });\n\n        if (options.pages > 1) {\n            it('should navigate forward one page at a time', function () {\n                pagination.next();\n                expect(pagination.page).to.eventually.equal(2);\n            });\n\n            it('should navigate backwards one page at a time', function () {\n                pagination.previous();\n                expect(pagination.page).to.eventually.equal(1);\n            });\n\n            it('should navigate to the last page', function () {\n                pagination.page.then(function (page) {\n                    var firstPage = page;\n                    pagination.last();\n                    expect(pagination.page).to.eventually.be.above(firstPage);\n                    pagination.first();\n                });\n            });\n        }\n\n        if (options.pages > 5) {\n            it('should jump forward to page 6 using pagination', function () {\n                pagination.page = 6;\n                expect(pagination.page).to.eventually.equal(6);\n            });\n\n            it('should jump backward to page 2 using pagination', function () {\n                pagination.page = 2;\n                expect(pagination.page).to.eventually.equal(2);\n                pagination.page = 1;\n            });\n        }\n\n        it('should not allow navigating `next` the last page', function () {\n            expect(pagination.next).to.throw(pagination.NoSuchPageException);\n        });\n\n        it('should allow attempting to navigate to the last page when already on the last page', function () {\n            pagination.last();\n            pagination.page.then(function (page) {\n                pagination.last();\n                expect(pagination.page).to.eventually.equal(page);\n            });\n        });\n\n        it('should navigate to the first page', function () {\n            pagination.first();\n            expect(pagination.page).to.eventually.equal(1);\n        });\n\n        it('should not allow navigating `prev` the first page', function () {\n            expect(pagination.previous).to.throw(pagination.NoSuchPageException);\n        });\n\n        it('should allow attempting to navigate to the first page when already on the first page', function () {\n            pagination.first();\n            expect(pagination.page).to.eventually.equal(1);\n        });\n\n        it('should have all available page sizes', function () {\n            expect(pagination.pageSizes).to.eventually.eql(options.pageSizes);\n        });\n\n        it('should highlight the current items per page selection', function () {\n            expect(pagination.pageSize).to.eventually.equal(options.defaultPageSize);\n        });\n\n        it('should list the lower bounds of the shown items currently in the table', function () {\n            expect(pagination.shownItems.first).to.eventually.equal(1);\n        });\n\n        it('should list the upper bounds of the shown items currently in the table', function () {\n            expect(pagination.shownItems.last).to.eventually.not.be.above(options.defaultPageSize);\n        });\n\n        it('should know the total number of pages without visiting it', function () {\n            pagination.totalPages.then(function (totalPages) {\n                pagination.last();\n                expect(pagination.page).to.eventually.equal(totalPages);\n                pagination.first();\n            });\n        });\n\n        if (options.pageSizes.length > 1) {\n\n            it('should switch to a different items per page', function () {\n                pagination.pageSize = options.pageSizes[1];\n                expect(pagination.pageSize).to.eventually.equal(options.pageSizes[1]);\n                pagination.pageSize = options.pageSizes[0];\n            });\n\n            if (options.pages > 1) {\n                it('should put the user back on the first page after resizing the items per page', function () {\n                    pagination.page = 2;\n                    pagination.pageSize = options.pageSizes[1];\n                    expect(pagination.page).to.eventually.equal(1);\n                    pagination.pageSize = options.pageSizes[0];\n                });\n            }\n\n        }\n\n        it('should not fail to match the lower bounds of the shown items even if not displayed', function () {\n            expect(pagination.shownItems.first).to.eventually.equal(1);\n        });\n\n        // execute only if the greatest items per page setting can contain all items\n        if (_.first(options.pageSizes) * options.pages < _.last(options.pageSizes)) {\n\n            it('should not fail to match the upper bounds of the shown items even if not displayed', function () {\n                pagination.pageSize = _.last(options.pageSizes);\n                pagination.shownItems.total.then(function (totalItems) {\n                    expect(pagination.shownItems.last).to.eventually.equal(totalItems);\n                    pagination.pageSize = options.defaultPageSize;\n                });\n            });\n        }\n\n        if (options.invalidPageSize) {\n\n            it('should not allow selecting an unavailable items per page', function () {\n                var fn = function () {\n                    var pageSizeFn = pagination.__lookupSetter__('pageSize');\n                    return protractor.promise.fulfilled(pageSizeFn.call(pagination, options.invalidPageSize));\n                };\n                expect(fn()).to.be.rejectedWith(pagination.NoSuchItemsPerPage);\n            });\n\n        }\n\n    };\n};\n"
        }
    },
    {
        "name": "rxPermission",
        "moduleName": "'encore.ui.rxPermission'",
        "displayName": "Rx Permission",
        "srcFiles": [
            "src/rxPermission/rxPermission.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxPermission/templates/rxPermission.html"
        ],
        "dependencies": [
            "rxSession",
            "rxLocalStorage"
        ],
        "stability": "unstable",
        "lastModified": "Oct 27, 2015 @ 10:48 (UTC-0500)",
        "rawLastModified": "2015-10-27 10:48:53 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxPermission component provides functionality to perform checks against existing user permissions in EncoreUI.  </p>\n",
            "js": "angular.module('demoApp')\n.controller('rxPermissionCtrl', function ($scope, Session, rxNotify) {\n    rxNotify.add('Respect My Authority!!', {\n        stack: 'permission',\n        type: 'warning'\n    });\n\n    $scope.storeToken = function () {\n        Session.storeToken({ access: { user: { roles: [{ name: 'test' } ] }}});\n    }\n\n    $scope.clearToken = function () {\n        Session.logout();\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how to the component can be used -->\n<div ng-controller=\"rxPermissionCtrl\">\n    <button class=\"storeToken button\" name=\"button\" ng-click=\"storeToken()\">Store Token</button>\n    <button class=\"clearToken button button-negative\" name=\"button\" ng-click=\"clearToken()\">Clear Token</button>\n\n    <rx-permission role=\"test\">\n        <rx-notifications stack=\"permission\"></rx-notifications>\n    </rx-permission>\n</div>\n",
            "less": "",
            "midway": "var rxPermissionPage = encore.rxPermission;\n\ndescribe('rxPermission', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxPermission');\n    });\n\n    it('rxPermission should display and hide content when appropriate', function () {\n        var rxPermission = rxPermissionPage.rxPermission;\n        expect(rxPermission.isDisplayed()).to.eventually.be.false;\n        demoPage.storeTokenButton.click();\n        expect(rxPermission.isDisplayed()).to.eventually.be.true;\n        demoPage.clearTokenButton.click();\n        expect(rxPermissionPage.rxPermission.isDisplayed()).to.eventually.be.false;\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxRadio",
        "moduleName": "'encore.ui.rxRadio'",
        "displayName": "Rx Radio",
        "srcFiles": [
            "src/rxRadio/rxRadio.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxRadio component wraps a native radio element in markup required for styling purposes.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxRadioCtrl', function ($scope) {\n    $scope.validEnabled = 1;\n    $scope.validDisabled = 1;\n    $scope.validNgDisabled = 1;\n\n    $scope.invalidEnabled = 1;\n    $scope.invalidDisabled = 1;\n    $scope.invalidNgDisabled = 1;\n\n    $scope.radCreateDestroy = 'destroyed';\n    $scope.plainHtmlRadio = 'isChecked';\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxRadioCtrl\">\n  <h3>Examples</h3>\n\n  <h3>Show/Hide Input</h3>\n  <p>\n    <strong>Do you like bacon?</strong>\n    <small ng-show=\"likesbacon\">({{likesbacon}})</small>\n  </p>\n  <p>\n    <input rx-radio\n           id=\"radHateBacon\"\n           value=\"hate it\"\n           ng-model=\"likesbacon\"\n           ng-required=\"true\" />\n    <label for=\"radHateBacon\">I hate bacon</label>\n  </p>\n  <p>\n    <input rx-radio\n           id=\"radLikeBacon\"\n           value=\"like it\"\n           ng-model=\"likesbacon\"\n           ng-required=\"true\" />\n    <label for=\"radLikeBacon\">I like bacon</label>\n  </p>\n  <p ng-show=\"likesbacon && likesbacon !== 'hate it'\">\n    <input rx-radio\n           id=\"radLoveBacon\"\n           value=\"love it\"\n           ng-model=\"likesbacon\"\n           ng-required=\"true\" />\n    <label for=\"radLoveBacon\">Actually, I LOVE bacon</label>\n  </p>\n\n  <br />\n\n  <h3>Destroy Input</h3>\n  <p>Support for <code>$destroy</code> events.</p>\n  <p>\n    <span>\n      <input rx-radio\n             id=\"radDestroyed\"\n             value=\"destroyed\"\n             ng-model=\"radCreateDestroy\" />\n      <label for=\"radDestroy\">Destroyed</label>\n    </span>\n    &nbsp;\n    <span>\n      <input rx-radio\n             id=\"radCreated\"\n             value=\"created\"\n             ng-model=\"radCreateDestroy\" />\n      <label for=\"radCreate\">Created</label>\n    </span>\n  </p>\n  <p>\n    The following radio is <code>{{radCreateDestroy}}</code>:\n    <input rx-radio\n           checked\n           id=\"radTargetCreated\"\n           ng-if=\"radCreateDestroy === 'created'\" />\n  </p>\n\n  <!-- END DEMO CODE -->\n  <!-- END DEMO CODE -->\n  <!-- END DEMO CODE -->\n\n  <h3>Radio States</h3>\n  <table>\n    <thead>\n      <tr>\n        <th></th>\n        <th>Enabled</th>\n        <th>Disabled (ng-disable)</th>\n        <th>Disabled (disabled)</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <th>Valid</th>\n\n        <!-- Valid Enabled -->\n        <td>\n          <p>\n            <input rx-radio\n                   id=\"radValidEnabledOne\"\n                   value=\"1\"\n                   ng-model=\"validEnabled\" />\n            <label for=\"radValidEnabledOne\">Selected</label>\n          </p>\n          <p>\n            <input rx-radio\n                   id=\"radValidEnabledTwo\"\n                   value=\"2\"\n                   ng-model=\"validEnabled\" />\n            <label for=\"radValidEnabledTwo\">Unselected</label>\n          </p>\n        </td>\n\n        <!-- Valid NG-Disabled -->\n        <td>\n          <p>\n            <input rx-radio\n                   id=\"radValidNgDisabledOne\"\n                   value=\"1\"\n                   ng-disabled=\"true\"\n                   ng-model=\"validNgDisabled\" />\n            <label for=\"radValidNgDisabledOne\">Selected</label>\n          </p>\n          <p>\n            <input rx-radio\n                   id=\"radValidNgDisabledTwo\"\n                   value=\"2\"\n                   ng-disabled=\"true\"\n                   ng-model=\"validNgDisabled\" />\n            <label for=\"radValidNgDisabledTwo\">Unselected</label>\n          </p>\n        </td>\n\n        <!-- Valid Disabled -->\n        <td>\n          <p>\n            <input rx-radio\n                   id=\"radValidDisabledOne\"\n                   value=\"1\"\n                   disabled\n                   ng-model=\"validDisabled\" />\n            <label for=\"radValidDisabledOne\">Selected</label>\n          </p>\n          <p>\n            <input rx-radio\n                   id=\"radValidDisabledTwo\"\n                   value=\"2\"\n                   disabled\n                   ng-model=\"validDisabled\" />\n            <label for=\"radValidDisabledTwo\">Unselected</label>\n          </p>\n        </td>\n      </tr>\n      <tr>\n        <th>Invalid</th>\n\n        <!-- Invalid Enabled -->\n        <td>\n          <p>\n            <input rx-radio\n                   id=\"radInvalidEnabledOne\"\n                   value=\"1\"\n                   ng-model=\"invalidEnabled\"\n                   always-invalid />\n            <label for=\"radInvalidEnabledOne\">Selected</label>\n          </p>\n          <p>\n            <input rx-radio\n                   id=\"radInvalidEnabledTwo\"\n                   value=\"2\"\n                   ng-model=\"invalidEnabled\"\n                   always-invalid />\n            <label for=\"radInvalidEnabledTwo\">Unselected</label>\n          </p>\n        </td>\n\n        <!-- Invalid NG-Disabled -->\n        <td>\n          <p>\n            <input rx-radio\n                   id=\"radInvalidNgDisabledOne\"\n                   value=\"1\"\n                   ng-disabled=\"true\"\n                   ng-model=\"invalidNgDisabled\"\n                   always-invalid />\n            <label for=\"radInvalidNgDisabledOne\">Selected</label>\n          </p>\n          <p>\n            <input rx-radio\n                   id=\"radInvalidNgDisabledTwo\"\n                   value=\"2\"\n                   ng-disabled=\"true\"\n                   ng-model=\"invalidNgDisabled\"\n                   always-invalid />\n            <label for=\"radInvalidNgDisabledTwo\">Unselected</label>\n          </p>\n        </td>\n\n        <!-- Invalid Disabled -->\n        <td>\n          <p>\n            <input rx-radio\n                   id=\"radInvalidDisabledOne\"\n                   value=\"1\"\n                   disabled\n                   ng-model=\"invalidDisabled\"\n                   always-invalid />\n            <label for=\"radInvalidDisabledOne\">Selected</label>\n          </p>\n          <p>\n            <input rx-radio\n                   id=\"radInvalidDisabledTwo\"\n                   value=\"2\"\n                   disabled\n                   ng-model=\"invalidDisabled\"\n                   always-invalid />\n            <label for=\"radInvalidDisabledTwo\">Unselected</label>\n          </p>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <h3>Plain HTML Radios (for comparison)</h3>\n  <p>\n    <input type=\"radio\"\n           id=\"plainHtmlNormal\"\n           ng-model=\"plainHtmlRadio\"\n           value=\"plain\"\n           ng-required=\"true\" />\n    <label for=\"plainHtmlNormal\">A plain radio</label>\n  </p>\n  <p>\n    <input type=\"radio\"\n           id=\"plainHtmlDisabled\"\n           value=\"disabled\"\n           ng-model=\"plainHtmlRadio\"\n           disabled />\n    <label for=\"plainHtmlDisabled\">A plain radio (disabled)</label>\n  </p>\n  <p>\n    <input type=\"radio\"\n           id=\"plainHtmlChecked\"\n           value=\"isChecked\"\n           ng-model=\"plainHtmlRadio\" />\n    <label for=\"plainHtmlChecked\">A plain radio (checked)</label>\n  </p>\n  <p>\n    <input type=\"radio\"\n           id=\"plainRadRemoveRadio\"\n           value=\"shows\"\n           ng-model=\"plainHtmlRadio\"/>\n    <label for=\"plainRadRemoveRadio\">Add Following Radio:</label>\n\n    <input type=\"radio\"\n           id=\"plainRadRemoveable\"\n           value=\"hidden\"\n           ng-if=\"plainHtmlRadio === 'shows'\" />\n  </p>\n</div>\n",
            "less": "/*\n * rxRadio\n */\n.rxRadio {\n    display: inline-block;\n    width: @rxRadio-size;\n    height: @rxRadio-size;\n    background-color: transparent;\n    position: relative;\n\n    input[type=\"radio\"],\n    .fake-radio {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: block;\n        margin: 0px;\n        padding: 0px;\n        border: 0px;\n        outline: 0px;\n    }\n\n    .fake-radio {\n        .box-sizing(border-box);\n        z-index: 0;\n        width: 100%;\n        height: 100%;\n        .border-radius(100%);\n        overflow: hidden;\n        border: @rxRadio-border-width solid @inputBorderColor;\n        background-color: @rxRadio-background-color;\n\n        // perfect center alignment for tick\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: center;\n\n        .tick {\n            flex: 0 0 auto;\n            .box-sizing(border-box);\n            .border-radius(@rxRadio-tick-border-radius);\n            width: @rxRadio-tick-size;\n            height: @rxRadio-tick-size;\n            background-color: transparent;\n        }\n    }//.fake-radio\n\n    &.rx-disabled + label {\n        color: @inputColorDisabled;\n    }\n\n    input[type=\"radio\"] {\n        z-index: 1;\n        height: 110%;\n        width: 110%;\n        opacity: 0;\n        cursor: pointer;\n\n        // enabled checked\n        &:checked + .fake-radio {\n            border-color: @rxRadio-color-selected;\n\n            .tick {\n                background-color: @rxRadio-color-selected;\n            }\n        }\n\n        .disabled() {\n            cursor: not-allowed;\n\n            // disabled, unchecked\n            & + .fake-radio {\n                border: 1px solid @inputBackgroundDisabled;\n\n                .tick {\n                    width: @rxRadio-tick-size;\n                    height: @rxRadio-tick-size;\n                }\n            }\n\n            &:checked + .fake-radio .tick {\n                background: @inputBackgroundDisabled;\n            }\n        }//.disabled()\n\n        &.ng-invalid.ng-dirty {\n            // enabled unchecked error\n            & + .fake-radio {\n                border: @rxRadio-border-width-invalid solid @rxRadio-color-error;\n\n                .tick {\n                    .border-radius(@rxRadio-tick-border-radius-invalid);\n                    width: @rxRadio-tick-size-invalid;\n                    height: @rxRadio-tick-size-invalid;\n                }\n            }\n\n            &:checked + .fake-radio .tick {\n                background: @rxRadio-color-error;\n            }\n\n            // disabled trumps invalid\n            &[disabled] {\n                .disabled();\n            }\n        }\n\n        // disabled trumps invalid\n        &[disabled] {\n            .disabled();\n        }\n    }//input\n}//.rxRadio\n",
            "midway": "var rxRadioPage = encore.rxRadio;\n\ndescribe('rxRadio', function () {\n    var subject;\n\n    before(function () {\n        demoPage.go('#/components/rxRadio');\n    });\n\n    describe('(State) Valid Enabled Selected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radValidEnabledOne')),\n        disabled: false,\n        selected: true,\n        valid: true\n    }));\n\n    describe('(State) Valid Enabled Unselected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radValidEnabledTwo')),\n        disabled: false,\n        selected: false,\n        valid: true\n    }));\n\n    describe('(State) Valid Disabled Selected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radValidDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: true\n    }));\n\n    describe('(State) Valid Disabled Unselected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radValidDisabledTwo')),\n        disabled: true,\n        selected: false,\n        valid: true\n    }));\n\n    describe('(State) Valid NG-Disabled Selected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radValidNgDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: true\n    }));\n\n    describe('(State) Valid NG-Disabled Unselected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radValidNgDisabledTwo')),\n        disabled: true,\n        selected: false,\n        valid: true\n    }));\n\n    describe('(State) Invalid Enabled Selected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radInvalidEnabledOne')),\n        disabled: false,\n        selected: true,\n        valid: false\n    }));\n\n    describe('(State) Invalid Enabled Unselected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radInvalidEnabledTwo')),\n        disabled: false,\n        selected: false,\n        valid: false\n    }));\n\n    describe('(State) Invalid Disabled Selected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radInvalidDisabledOne')),\n        disabled: true,\n        selected: true,\n        valid: false\n    }));\n\n    describe('(State) Invalid Disabled Unselected', encore.exercise.rxRadio({\n        instance: encore.rxRadio.initialize($('#radInvalidDisabledTwo')),\n        disabled: true,\n        selected: false,\n        valid: false\n    }));\n\n    describe('(State) Invalid NG-Disabled Selected', encore.exercise.rxRadio({\n        cssSelector: '#radInvalidNgDisabledOne',\n        disabled: true,\n        selected: true,\n        valid: false\n    }));\n\n    describe('(State) Invalid NG-Disabled Unselected', encore.exercise.rxRadio({\n        cssSelector: '#radInvalidNgDisabledTwo',\n        disabled: true,\n        selected: false,\n        valid: false\n    }));\n\n    describe('plain HTML radio buttons', function () {\n        describe('Valid Enabled Unchecked', encore.exercise.rxRadio({\n            instance: encore.rxRadio.initialize($(\"#plainHtmlNormal\")),\n            disabled: false,\n            selected: false\n        }));\n\n        describe('Valid Disabled Unchecked', encore.exercise.rxRadio({\n            cssSelector: \"#plainHtmlDisabled\",\n            disabled: true,\n            selected: false\n        }));\n\n        describe('Valid Enabled Checked', encore.exercise.rxRadio({\n            cssSelector: \"#plainHtmlChecked\",\n            disabled: false,\n            selected: true\n        }));\n\n    });\n\n    describe('Show/Hide Input', function () {\n        var radHate, radLike, radLove;\n\n        before(function () {\n            radHate = rxRadioPage.initialize($('#radHateBacon'));\n            radLike = rxRadioPage.initialize($('#radLikeBacon'));\n            radLove = rxRadioPage.initialize($('#radLoveBacon'));\n        });\n\n        describe('\"I hate bacon\"', function () {\n            before(function () {\n                subject = radHate;\n            });\n\n            it('should be visible', function () {\n                expect(subject.isDisplayed()).to.eventually.be.true;\n            });\n\n            it('should not be valid', function () {\n                expect(subject.isValid()).to.eventually.be.false;\n            });\n        });\n\n        describe('\"Actually, I LOVE bacon\"', function () {\n            before(function () {\n                subject = radLove;\n            });\n\n            it('should not be visible', function () {\n                expect(subject.isDisplayed()).to.eventually.be.false;\n            });\n\n            it('should not be valid', function () {\n                expect(subject.isValid()).to.eventually.be.false;\n            });\n        });\n\n        describe('\"I like bacon\"', function () {\n            before(function () {\n                subject = radLike;\n            });\n\n            it('should be visible', function () {\n                expect(subject.isDisplayed()).to.eventually.be.true;\n            });\n\n            it('should not be valid', function () {\n                expect(subject.isValid()).to.eventually.be.false;\n            });\n\n            describe('when selected', function () {\n                before(function () {\n                    subject.select();\n                });\n\n                it('should be valid', function () {\n                    expect(subject.isValid()).to.eventually.be.true;\n                });\n\n                describe('\"I hate bacon\"', function () {\n                    it('should be valid', function () {\n                        expect(radHate.isValid()).to.eventually.be.true;\n                    });\n                });\n\n                describe('\"Actually, I LOVE bacon\"', function () {\n                    before(function () {\n                        subject = radLove;\n                    });\n\n                    it('should be visible', function () {\n                        expect(subject.isDisplayed()).to.eventually.be.true;\n                    });\n\n                    it('should be valid', function () {\n                        expect(subject.isValid()).to.eventually.be.true;\n                    });\n                });\n            });\n        });\n\n        describe('plain HTML radio buttons', function () {\n            var willHide;\n            var willBeHidden;\n            var otherRadio;\n\n            before(function () {\n                willHide = encore.rxRadio.initialize($('#plainRadRemoveRadio'));\n                willBeHidden = encore.rxRadio.initialize($('#plainRadRemoveable'));\n                otherRadio = encore.rxRadio.initialize($('#plainHtmlNormal'));\n            });\n\n            it('should show the radio button by default', function () {\n                expect(willBeHidden.isPresent()).to.eventually.be.false;\n            });\n\n            it('should remove the radio button from the DOM', function () {\n                willHide.select();\n                expect(willBeHidden.isDisplayed()).to.eventually.be.true;\n                expect(willBeHidden.isPresent()).to.eventually.be.true;\n            });\n\n            it('should put the radio button back', function () {\n                otherRadio.select();\n                expect(willBeHidden.isPresent()).to.eventually.be.false;\n            });\n\n        });\n    });//Show/Hide Input\n\n    describe('Destroy Input', function () {\n        var radCreated, radDestroyed, radTargetCreated;\n\n        before(function () {\n            radCreated = rxRadioPage.initialize($('#radCreated'));\n            radDestroyed = rxRadioPage.initialize($('#radDestroyed'));\n            radTargetCreated = rxRadioPage.initialize($('#radTargetCreated'));\n        });\n\n        it('\"Destroyed\" should be selected', function () {\n            expect(radDestroyed.isSelected()).to.eventually.be.true;\n        });\n\n        it('\"Created\" should not be selected', function () {\n            expect(radCreated.isSelected()).to.eventually.be.false;\n        });\n\n        it('target radio should not be present', function () {\n            radTargetCreated = rxRadioPage.initialize($('#radTargetCreated'));\n            expect(radTargetCreated.isPresent()).to.eventually.be.false;\n        });\n\n        describe('when \"Created\" is selected', function () {\n            before(function () {\n                radCreated.select();\n            });\n\n            it('\"Destroyed\" should not be selected', function () {\n                expect(radDestroyed.isSelected()).to.eventually.be.false;\n            });\n\n            it('target radio should be present', function () {\n                radTargetCreated = rxRadioPage.initialize($('#radTargetCreated'));\n                expect(radTargetCreated.isPresent()).to.eventually.be.true;\n            });\n        });\n\n        describe('when \"Destroyed\" is selected again', function () {\n            before(function () {\n                radDestroyed.select();\n            });\n\n            it('\"Created\" should not be selected', function () {\n                expect(radCreated.isSelected()).to.eventually.be.false;\n            });\n\n            it('target radio should not be present', function () {\n                radTargetCreated = rxRadioPage.initialize($('#radTargetCreated'));\n                expect(radTargetCreated.isPresent()).to.eventually.be.false;\n            });\n        });\n    });//Destroy Input\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxRadio = require('./rxRadio.page').rxRadio;\n\n/**\n * @description rxRadio exercises\n * @exports encore.exercise.rxRadio\n * @param {Object} [options=] - Test options. Used to build valid tests.\n * @param {rxRadio} [options.instance=] - Component to exercise.\n * @param {String} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n * @param {Boolean} [options.disabled=false] - Determines if the radio is disabled.\n * @param {Boolean} [options.selected=false] - Determines if the radio is selected.\n * @param {Boolean} [options.visible=true] - Determines if the radio is visible.\n * @param {Boolean} [options.valid=true] - Determines if the radio is valid.\n */\nexports.rxRadio = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        disabled: false,\n        selected: false,\n        visible: true,\n        valid: true\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxRadio.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should be present', function () {\n            expect(component.isPresent()).to.eventually.be.true;\n        });\n\n        it('should be a radio button', function () {\n            expect(component.isRadio()).to.eventually.be.true;\n        });\n\n        it('should ' + (options.visible ? 'be' : 'not be') + ' visible', function () {\n            expect(component.isDisplayed()).to.eventually.eq(options.visible);\n        });\n\n        it('should ' + (options.disabled ? 'be' : 'not be') + ' disabled', function () {\n            expect(component.isDisabled()).to.eventually.eq(options.disabled);\n        });\n\n        it('should ' + (options.selected ? 'be' : 'not be') + ' selected', function () {\n            expect(component.isSelected()).to.eventually.eq(options.selected);\n        });\n\n        it('should ' + (options.valid ? 'be' : 'not be') + ' valid', function () {\n            expect(component.isValid()).to.eventually.eq(options.valid);\n        });\n    };\n};\n"
        }
    },
    {
        "name": "rxSearchBox",
        "moduleName": "'encore.ui.rxSearchBox'",
        "displayName": "Rx Search Box",
        "srcFiles": [
            "src/rxSearchBox/rxSearchBox.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxSearchBox/templates/rxSearchBox.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 28, 2015 @ 11:50 (UTC-0500)",
        "rawLastModified": "2015-10-28 11:50:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>The rxSearchBox component provides functionality around creating a search input box.</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxSearchBoxCtrl', function ($scope) {\n    $scope.searchModel = '';\n    $scope.filterPlaceholder = 'Filter by any...';\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxSearchBoxCtrl\">\n    <h4>Default</h4>\n    <rx-search-box\n      class=\"default-search-box\"\n      ng-model=\"searchModel\"></rx-search-box>\n\n    <h4>Disabled (shared search model)</h4>\n    <rx-search-box\n        class=\"disabled-search-box\"\n        ng-model=\"searchModel\"\n        ng-disabled=\"true\"></rx-search-box>\n\n    <h4>Customized (100% width, custom placeholder text)</h4>\n    <style>\n      .wide-search-box { width: 100%; }\n    </style>\n    <rx-search-box\n        class=\"wide-search-box\"\n        ng-model=\"customSearchModel\"\n        rx-placeholder=\"filterPlaceholder\"></rx-search-box>\n</div>\n",
            "less": "/*\n * rxSearchBox\n */\nrx-search-box {\n    display: inline-block;\n    width: @rxSearchBox-width;\n    min-width: @rxSearchBox-min-width;\n\n    // wrapper fits full width\n    .rxSearchBox-wrapper {\n        .box-sizing(border-box);\n        border: @rxSearchBox-border;\n        min-height: @rxSearchBox-min-height;\n        min-width: @rxSearchBox-min-width;\n        padding: 0;\n\n        background: @rxSearchBox-background;\n        color: @rxSearchBox-color;\n\n        // as flex container\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-start;\n\n        .rxSearchBox-input {\n            .ResetFormInput();\n            flex: 1 1;\n            .box-sizing(border-box);\n\n            background: transparent;\n            padding: @rxSearchBox-padding-vertical @rxSearchBox-padding-horizontal;\n\n            /*\n             * This gets around FireFox setting the min-width to a value\n             * that overflows content out of the .rxSearch container.\n             */\n            min-width: (@rxSearchBox-min-width - @rxSearchBox-clear-width - (2 * @rxSearchBox-padding-horizontal));\n\n            &[disabled] {\n                color: @rxSearchBox-color-disabled;\n                background: @rxSearchBox-background-disabled;\n                cursor: not-allowed;\n            }\n        }//.rxSearchBox-input\n\n        .rxSearchBox-clear {\n            .box-sizing(border-box);\n            cursor: pointer;\n            //font-size: 0.75em;\n            color: @rxSearchBox-color-icon;\n\n            // as flex item\n            flex: 0 0 @rxSearchBox-clear-width;\n\n            // as flex container\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            .rxSearchBox-clear-icon {\n                min-width: @rxSearchBox-clear-width;\n            }\n        }//.rxSearchBox-clear\n    }//.rxSearchBox-wrapper\n}//rx-search-box\n",
            "midway": "describe('rxSearchBox', function () {\n    before(function () {\n        demoPage.go('#/components/rxSearchBox');\n    });\n\n    describe('default rxSearchBox', encore.exercise.rxSearchBox({\n        instance: encore.rxSearchBox.initialize($('.default-search-box'))\n    }));\n\n    describe('disabled rxSearchBox', encore.exercise.rxSearchBox({\n        instance: encore.rxSearchBox.initialize($('.disabled-search-box')),\n        disabled: true\n    }));\n\n    describe('custom, wide rxSearchBox', encore.exercise.rxSearchBox({\n        cssSelector: '.wide-search-box',\n        placeholder: 'Filter by any...'\n    }));\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxSearchBox = require('./rxSearchBox.page').rxSearchBox;\n\n/**\n   rxSearchBox exercises.\n   @exports encore.exercise.rxSearchBox\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxSearchBox} [options.instance=] - Component to exercise.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @param {boolean} [options.disabled=false] - Determines if the search box is disabled\n   @param {string} [options.placeholder='Search...'] - Expected placeholder value\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxSearchBox({\n       instance: myPage.searchText, // select one of many widgets from your page objects\n   }));\n   ```\n */\nexports.rxSearchBox = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        disabled: false,\n        placeholder: 'Search...'\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxSearchBox.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxSearchBox.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should show the element', function () {\n            expect(component.isDisplayed()).to.eventually.be.true;\n        });\n\n        if (options.placeholder) {\n            it('should have a placeholder', function () {\n                expect(component.placeholder).to.eventually.equal(options.placeholder);\n            });\n        }\n\n        if (options.disabled) {\n            describe('when disabled', function () {\n                it('should not display the clear button', function () {\n                    expect(component.isClearable()).to.eventually.be.false;\n                });\n\n                it('should not be searchable', function () {\n                    expect(component.isSearchable()).to.eventually.be.false;\n                });\n            });//when disabled\n        } else {\n            describe('when enabled', function () {\n                it('should be searchable', function () {\n                    expect(component.isSearchable()).to.eventually.be.true;\n                });\n\n                it('should update the search term', function () {\n                    component.term = 'testing';\n                    expect(component.term).to.eventually.equal('testing');\n                });\n\n                it('should be clearable', function () {\n                    expect(component.isClearable()).to.eventually.be.true;\n                });\n\n                it('should clear the search term', function () {\n                    component.clear();\n                    expect(component.term).to.eventually.equal('');\n                });\n\n                it('should not be clearable', function () {\n                    expect(component.isClearable()).to.eventually.be.false;\n                });\n            });//when enabled\n        }\n    };\n};\n"
        }
    },
    {
        "name": "rxSelect",
        "moduleName": "'encore.ui.rxSelect'",
        "displayName": "Rx Select",
        "srcFiles": [
            "src/rxSelect/rxSelect.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>A component that wraps a native <code>&lt;select&gt;</code> element in markup required for\nstyling purposes.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxSelectCtrl', function ($scope) {\n    $scope.radCreateDestroy = 'destroyed';\n\n    $scope.validEnabled = 3;\n    $scope.validNgDisabled = 'na';\n    $scope.validDisabled = 'na';\n\n    $scope.invalidEnabled = 4;\n    $scope.invalidNgDisabled = 'na';\n    $scope.invalidDisabled = 'na';\n\n    $scope.htmlSelectAlternativeValue = 'second';\n});\n",
            "html": "<style>\n  .demoContainer { width: 400px; }\n</style>\n\n<div ng-controller=\"rxSelectCtrl\">\n  <div class=\"demoContainer\">\n    <h3>Examples</h3>\n\n    <h3>With Validation</h3>\n    <p>\n      <strong>How do you like your bacon?</strong>\n      <small ng-if=\"baconPrep\">({{baconPrep}})</small>\n      <br />\n      <select rx-select\n              id=\"selBaconPrep\"\n              ng-model=\"baconPrep\"\n              ng-required=\"true\">\n        <option value=\"\">I do not like bacon</option>\n        <option value=\"thin\">Thin (light and crispy)</option>\n        <option value=\"medium\">Medium (perfect balance of flavor)</option>\n        <option value=\"thick\">Thick (borderline jerky)</option>\n        <option value=\"crumbled\">Crumbled (great on salads)</option>\n      </select>\n    </p>\n    <br />\n\n    <h3>Show/Hide Select</h3>\n    <p>\n      <input rx-checkbox id=\"chkShow\" ng-model=\"isShown\" />\n      <label for=\"chkShow\">Show?</label><br />\n      <span ng-show=\"isShown\">\n        <select rx-select id=\"selTargetShow\">\n          <option>I'm visible!</option>\n        </select>\n      </span>\n    </p>\n\n    <h3>Destroy Select</h3>\n    <p>Support for <code>$destroy</code> events.</p>\n    <p>\n      <span>\n        <input rx-radio\n               id=\"radDestroyed\"\n               value=\"destroyed\"\n               ng-model=\"radCreateDestroy\" />\n        <label for=\"radDestroyed\">Destroyed</label>\n      </span>\n      <span>\n        <input rx-radio\n               id=\"radCreated\"\n               value=\"created\"\n               ng-model=\"radCreateDestroy\" />\n        <label for=\"radCreated\">Created</label>\n      </span>\n    </p>\n    <p>\n      The following select is <code>{{radCreateDestroy}}</code>:\n      <select rx-select\n              id=\"selTargetCreated\"\n              ng-if=\"radCreateDestroy === 'created'\">\n        <option>CREATED!</option>\n      </select>\n    </p>\n    <br />\n  </div>\n\n  <h3>Select States</h3>\n  <table>\n    <thead>\n      <tr>\n        <th></th>\n        <th>Enabled</th>\n        <th>Disabled (ng-disabled)</th>\n        <th>Disabled (disabled)</th>\n      </tr>\n    </thead>\n    <tbody>\n      <!-- Valid -->\n      <tr>\n        <th>Valid</th>\n        <!-- Valid Enabled -->\n        <td>\n          <select rx-select\n                  id=\"selValidEnabled\"\n                  ng-model=\"validEnabled\">\n            <option value=\"1\">First</option>\n            <option value=\"2\">Second</option>\n            <option value=\"3\">Third</option>\n            <option value=\"4\">Fourth</option>\n          </select>\n        </td>\n        <!-- Valid Ng-Disabled -->\n        <td>\n          <select rx-select\n                  id=\"selValidNgDisabled\"\n                  ng-model=\"validNgDisabled\"\n                  ng-disabled=\"true\">\n            <option value=\"na\">Disabled by 'ng-disabled' attribute</option>\n          </select>\n        </td>\n\n        <!-- Valid Disabled -->\n        <td>\n          <select rx-select\n                  id=\"selValidDisabled\"\n                  disabled\n                  ng-model=\"validDisabled\">\n            <option value=\"na\">Disabled by 'disabled' attribute</option>\n          </select>\n        </td>\n      </tr>\n\n      <!-- Invalid -->\n      <tr>\n        <th>Invalid</th>\n        <!-- Invalid Enabled -->\n        <td>\n          <select rx-select\n                  id=\"selInvalidEnabled\"\n                  always-invalid\n                  ng-model=\"invalidEnabled\">\n            <option value=\"1\">First</option>\n            <option value=\"2\">Second</option>\n            <option value=\"3\">Third</option>\n            <option value=\"4\">Fourth</option>\n          </select>\n        </td>\n\n        <!-- Invalid Ng-Disabled -->\n        <td>\n          <select rx-select\n                  id=\"selInvalidNgDisabled\"\n                  always-invalid\n                  ng-model=\"invalidNgDisabled\"\n                  ng-disabled=\"true\">\n            <option value=\"na\">Disabled by 'ng-disabled' attribute</option>\n          </select>\n        </td>\n\n        <!-- Invalid Disabled -->\n        <td>\n          <select rx-select\n                  id=\"selInvalidDisabled\"\n                  disabled\n                  always-invalid\n                  ng-model=\"invalidDisabled\">\n            <option value=\"na\">Disabled by 'disabled' attribute</option>\n          </select>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n    <h3>Plain HTML Select Boxes (for comparison)</h3>\n  <p>\n    <select id=\"plainHtmlNormal\" ng-required=\"true\">\n      <option value=\"\">Plain HTML Select Option</option>\n      <option value=\"first\">First Option</option>\n      <option value=\"second\">Second Option</option>\n      <option value=\"third\">Third Option</option>\n      <option value=\"fourth\">Fourth Option</option>\n    </select>\n  </p>\n  <p>\n    <select id=\"plainHtmlDisabled\" disabled>\n      <option value=\"\">Disabled HTML Select Option</option>\n      <option value=\"first\">First Option</option>\n      <option value=\"second\">Second Option</option>\n      <option value=\"third\">Third Option</option>\n      <option value=\"fourth\">Fourth Option</option>\n    </select>\n  </p>\n  <p>\n    <select id=\"plainHtmlSecondSelected\"\n            ng-model=\"htmlSelectAlternativeValue\">\n      <option value=\"\">Starts on Second Option</option>\n      <option value=\"first\">First Option</option>\n      <option value=\"second\">Non Default Starting Option</option>\n      <option value=\"third\">Third Option</option>\n      <option value=\"fourth\">Fourth Option</option>\n    </select>\n  </p>\n  <p>\n    <select id=\"plainSelShowSelect\"\n            ng-model=\"plainHtmlSelect\">\n      <option value=\"hide\">Hide Next Select Box</option>\n      <option value=\"show\">Show Next Select Box</option>\n    </select>\n\n    <select id=\"plainSelRemoveable\"\n            value=\"hidden\"\n            ng-if=\"plainHtmlSelect !== 'hide'\">\n      <option value=\"\">Is Present</option>\n    </select>\n  </p>\n</div>\n",
            "less": "/*\n * rxSelect\n */\n.rxSelect {\n    .box-sizing(border-box);\n    display: block;\n    position: relative;\n    color: @rxSelect-color;\n    background: @rxSelect-background;\n    .border-radius(@rxSelect-border-radius);\n\n    // Element should be resizable via wrapper alone\n    min-width: @rxSelect-min-width;\n    height: @rxSelect-height;\n\n    &.rx-disabled {\n        color: @inputColorDisabled;\n        background: @inputBackgroundDisabled;\n    }\n\n    // position elements in wrapper\n    select,\n    rx-multi-select,\n    .fake-select {\n        .box-sizing(border-box);\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n\n    select,\n    rx-multi-select {\n        z-index: 0;\n        cursor: pointer;\n\n        // reset native styling\n        border: none !important;\n        outline: none !important;\n        background: transparent;\n        &:-moz-focusring {\n            // FF uses text color to draw ring. Make it transparent\n            color: transparent;\n            // However, we still need to display our select <option> text\n            text-shadow: 0 0 0 @rxSelect-color;\n        }\n\n        & + .fake-select {\n            border-color: @inputBorderColor;\n            border-width: 1px;\n        }\n\n        .disabled() {\n            cursor: not-allowed ;\n\n            & + .fake-select {\n                border-color: @rxSelect-border-color-disabled;\n                border-width: 1px;\n\n                .select-trigger {\n                    background: @rxSelect-background-disabled;\n                    border-left-width: 0px;\n                    border-left-color: @rxSelect-color-disabled;\n                    color: @rxSelect-trigger-color-disabled;\n                }\n            }\n        }//.disabled()\n\n        &.ng-invalid.ng-dirty {\n            & + .fake-select {\n                border-color: @rxSelect-border-color-invalid;\n                border-width: 2px;\n\n                .select-trigger {\n                    color: @rxSelect-trigger-color-invalid;\n                }\n            }\n\n            &[disabled] {\n                .disabled();\n            }\n        }\n\n        // Disabled Trumps All\n        &[disabled] {\n            .disabled();\n        }\n    }//select\n\n    .fake-select {\n        z-index: 10;\n        border: @rxSelect-border-width solid @rxSelect-border-color;\n        overflow: hidden;\n        .border-radius(@rxSelect-border-radius);\n        display: flex;\n        justify-content: flex-end;\n        flex-flow: row nowrap;\n\n        // This allow pointer events to pass THROUGH to the\n        // native <select> element\n        pointer-events: none !important;\n\n        // Custom trigger button will cover native <select> button\n        .select-trigger {\n            .box-sizing(border-box);\n            width: @rxSelect-trigger-width;\n            background: @rxSelect-trigger-background;\n            color: @rxSelect-trigger-color;\n\n            // perfectly center the trigger icon\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }//.select-trigger\n    }//.fake-select\n}//.rxSelect\n",
            "midway": "describe('rxSelect', function () {\n    var subject;\n\n    before(function () {\n        demoPage.go('#/components/rxSelect');\n    });\n\n    describe('(State) Valid Enabled', encore.exercise.rxSelect({\n        instance: encore.rxSelect.initialize($('#selValidEnabled')),\n        disabled: false,\n        visible: true,\n        valid: true,\n        selectedText: 'Third'\n    }));\n\n    describe('(State) Valid NG-Disabled', encore.exercise.rxSelect({\n        instance: encore.rxSelect.initialize($('#selValidNgDisabled')),\n        disabled: true,\n        visible: true,\n        valid: true,\n        selectedText: \"Disabled by 'ng-disabled' attribute\"\n    }));\n\n    describe('(State) Valid Disabled', encore.exercise.rxSelect({\n        instance: encore.rxSelect.initialize($('#selValidDisabled')),\n        disabled: true,\n        visible: true,\n        valid: true,\n        selectedText: \"Disabled by 'disabled' attribute\"\n    }));\n\n    describe('(State) Invalid Enabled', encore.exercise.rxSelect({\n        instance: encore.rxSelect.initialize($('#selInvalidEnabled')),\n        disabled: false,\n        visible: true,\n        valid: false,\n        selectedText: 'Fourth'\n    }));\n\n    describe('(State) Invalid NG-Disabled', encore.exercise.rxSelect({\n        instance: encore.rxSelect.initialize($('#selInvalidNgDisabled')),\n        disabled: true,\n        visible: true,\n        valid: false,\n        selectedText: \"Disabled by 'ng-disabled' attribute\"\n    }));\n\n    describe('(State) Invalid Disabled', encore.exercise.rxSelect({\n        instance: encore.rxSelect.initialize($('#selInvalidDisabled')),\n        disabled: true,\n        visible: true,\n        valid: false,\n        selectedText: \"Disabled by 'disabled' attribute\"\n    }));\n\n    describe('plain HTML select elements', function () {\n        describe('Enabled Default Starting Value', encore.exercise.rxSelect({\n            instance: encore.rxSelect.initialize($('#plainHtmlNormal')),\n            disabled: false,\n            valid: false,\n            selectedText: 'Plain HTML Select Option'\n        }));\n\n        describe('Disabled', encore.exercise.rxSelect({\n            instance: encore.rxSelect.initialize($('#plainHtmlDisabled')),\n            disabled: true,\n            valid: false,\n            selectedText: 'Disabled HTML Select Option'\n        }));\n\n        describe('Valid Enabled Non-Default Starting Value', encore.exercise.rxSelect({\n            cssSelector: '#plainHtmlSecondSelected',\n            disabled: false,\n            valid: true,\n            selectedText: 'Non Default Starting Option'\n        }));\n\n    });\n\n    describe('How do you like your bacon?', function () {\n        before(function () {\n            subject = encore.rxSelect.initialize($('#selBaconPrep'));\n        });\n\n        it('should be invalid', function () {\n            expect(subject.isValid()).to.eventually.be.false;\n        });\n\n        it('should have 5 options', function () {\n            expect(subject.optionCount()).to.eventually.equal(5);\n        });\n\n        it('should contain desired option', function () {\n            expect(subject.optionExists('Thick (borderline jerky)')).to.eventually.be.true;\n        });\n\n        it('should not contain undesired option', function () {\n            expect(subject.optionExists('no preference')).to.eventually.be.false;\n        });\n\n        it('should not report a different option as selected', function () {\n            expect(subject.option('Thick (borderline jerky)').isSelected()).to.eventually.be.false\n        });\n\n        it('should have expected options', function () {\n            var opts = [\n                'I do not like bacon',\n                'Thin (light and crispy)',\n                'Medium (perfect balance of flavor)',\n                'Thick (borderline jerky)',\n                'Crumbled (great on salads)',\n            ];\n            expect(subject.options).to.eventually.eql(opts);\n        });\n\n        it('should have expected values', function () {\n            var vals = [ '', 'thin', 'medium', 'thick', 'crumbled' ];\n            expect(subject.values).to.eventually.eql(vals);\n        });\n\n        it('should have a selected option by default', function () {\n            /* redundant test, but moved from rxForm.midway.js */\n            expect(subject.selectedOption.isSelected()).to.eventually.be.true;\n        });\n\n        describe('selecting \"Thin (light and crispy)\"', function () {\n            var txt = 'Thin (light and crispy)';\n            var val = 'thin';\n\n            beforeEach(function () {\n                subject.select(txt);\n            });\n\n            afterEach(function () {\n                var slowClick = false;\n                subject.select('I do not like bacon', slowClick);\n            });\n\n            it('should be valid', function () {\n                expect(subject.isValid()).to.eventually.be.true;\n            });\n\n            it('should display correct text', function () {\n                expect(subject.selectedOption.text).to.eventually.eq(txt);\n            });\n\n            it('should have correct value', function () {\n                expect(subject.selectedOption.value).to.eventually.eq(val);\n            });\n        });\n\n        describe('Selecting \"I do not like bacon\"', function () {\n            before(function () {\n                subject.select('I do not like bacon');\n            });\n\n            it('should not be valid', function () {\n                expect(subject.isValid()).to.eventually.be.false;\n            });\n        });\n\n        describe('plain HTML select elements', function () {\n            var willHide;\n            var willBeHidden;\n\n            before(function () {\n                willHide = encore.rxSelect.initialize($('#plainSelShowSelect'));\n                willBeHidden = encore.rxSelect.initialize($('#plainSelRemoveable'));\n            });\n\n            it('should show the select element by default', function () {\n                expect(willBeHidden.isPresent()).to.eventually.be.true;\n                expect(willBeHidden.isDisplayed()).to.eventually.be.true;\n            });\n\n            it('should remove the select element to the DOM', function () {\n                var slowClick = false;\n                willHide.select('Hide Next Select Box', slowClick);\n                expect(willBeHidden.isPresent()).to.eventually.be.false;\n            });\n\n            it('should add the select element back', function () {\n                willHide.select('Show Next Select Box');\n                expect(willBeHidden.isPresent()).to.eventually.be.true;\n                expect(willBeHidden.isDisplayed()).to.eventually.be.true;\n            });\n\n        });\n    });\n\n    describe('Show/Hide Select', function () {\n        var checkbox;\n\n        before(function () {\n            checkbox = encore.rxCheckbox.initialize($('#chkShow'));\n            subject = encore.rxSelect.initialize($('#selTargetShow'));\n        });\n\n        describe('when checkbox checked', function () {\n            before(function () {\n                checkbox.select();\n            });\n\n            it('should be visible', function () {\n                expect(subject.isDisplayed()).to.eventually.be.true;\n            });\n        });\n\n        describe('when checkbox unchecked', function () {\n            before(function () {\n                checkbox.deselect();\n            });\n\n            it('should not be visible', function () {\n                expect(subject.isDisplayed()).to.eventually.be.false;\n            });\n        });\n    });\n\n    describe('Destroy Select', function () {\n        var radDestroyed, radCreated;\n\n        before(function () {\n            radDestroyed = encore.rxRadio.initialize($('#radDestroyed'));\n            radCreated = encore.rxRadio.initialize($('#radCreated'));\n            subject = encore.rxSelect.initialize($('#selTargetCreated'));\n        });\n\n        describe('when created', function () {\n            before(function () {\n                radCreated.select();\n            });\n\n            it('should be present', function () {\n                expect(subject.isPresent()).to.eventually.be.true;\n            });\n        });\n\n        describe('when destroyed', function () {\n            before(function () {\n                radDestroyed.select();\n            });\n\n            it('should not be present', function () {\n                expect(subject.isPresent()).to.eventually.be.false;\n            });\n        });\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxSelect = require('./rxSelect.page').rxSelect;\n\n/**\n * @description rxSelect exercises\n * @exports encore.exercise.rxSelect\n * @param {Object} [options=] - Test options. Used to build valid tests.\n * @param {rxSelect} [options.instance=] - Component to exercise.\n * @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n * @param {Boolean} [options.disabled=false] - Determines if the select is disabled\n * @param {Boolean} [options.visible=true] - Determines if the select is visible\n * @param {Boolean} [options.valid=true] - Determines if the select is valid\n * @param {String} selectedText - The expected selected text of the dropdown.\n */\nexports.rxSelect = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        disabled: false,\n        visible: true,\n        valid: true\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxSelect.initialize($(options.cssSelector));\n            }\n        });\n\n        it('should be present', function () {\n            expect(component.isPresent()).to.eventually.be.true;\n        });\n\n        it('should ' + (options.visible ? 'be' : 'not be') + ' visible', function () {\n            expect(component.isDisplayed()).to.eventually.eq(options.visible);\n        });\n\n        it('should ' + (options.disabled ? 'be' : 'not be') + ' disabled', function () {\n            expect(component.isDisabled()).to.eventually.eq(options.disabled);\n        });\n\n        it('should ' + (options.valid ? 'be' : 'not be') + ' valid', function () {\n            expect(component.isValid()).to.eventually.eq(options.valid);\n        });\n\n        if (options.selectedText) {\n            it('should have the correct selected option already chosen', function () {\n                expect(component.selectedOption.text).to.eventually.equal(options.selectedText);\n            });\n        }\n    };\n};\n"
        }
    },
    {
        "name": "rxSelectFilter",
        "moduleName": "'encore.ui.rxSelectFilter'",
        "displayName": "Rx Select Filter",
        "srcFiles": [
            "src/rxSelectFilter/rxSelectFilter.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxSelectFilter/templates/rxSelectFilter.html"
        ],
        "dependencies": [
            "rxMisc",
            "rxSessionStorage",
            "rxSelect"
        ],
        "stability": "experimental",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>  A component that provides a multi-select dropdown interface intended for\n  table filtering.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxSelectFilterCtrl', function ($scope, SelectFilter) {\n    $scope.filter = SelectFilter.create({\n        properties: ['account', 'status'],\n        selected: {\n            account: ['A']\n        }\n    });\n\n    $scope.tickets = [\n        { account: 'A', status: 'NEW', description: 'A new ticket' },\n        { account: 'A', status: 'IN_PROGRESS', description: 'Fix all the bugs' },\n        { account: 'B', status: 'TRANSFERRED', description: 'Don\\'t stop believing' },\n        { account: 'B', status: 'VENDOR', description: 'Hold on to that feeling' },\n        { account: 'A', status: 'TRANSFERRED', description: 'qwertyuiop' }\n    ];\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxSelectFilterCtrl\">\n    <h3>Filtered Table</h3>\n    <table class=\"table-striped\">\n        <thead>\n            <th colspan=\"3\" class=\"filter-header\">\n                <form rx-form>\n                    <rx-form-section controlled-width>\n                        <rx-select-filter filter=\"filter\"></rx-select-filter>\n                    </rx-form-section>\n                </form>\n            </th>\n            <tr>\n                <th>Account</th>\n                <th>Status</th>\n                <th>Description</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"ticket in (filteredTickets = (tickets | Apply:filter))\">\n                <td>{{ticket.account}}</td>\n                <td>{{ticket.status}}</td>\n                <td>{{ticket.description}}</td>\n            </tr>\n            <tr ng-if=\"filteredTickets.length === 0\">\n                <td colspan=\"6\">\n                    <div ng-if=\"tickets.length === 0\">No tickets were found.</div>\n                    <div ng-if=\"tickets.length !== 0\">No results match those criteria.</div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n",
            "less": "/*\n * rxSelectFilter\n */\nrx-select-filter {\n    flex: 1;\n    display: flex;\n    flex-flow: row wrap;\n    word-break: break-all;\n}\n",
            "midway": "var Page = require('astrolabe').Page;\nvar _ = require('lodash');\n\nvar table = Page.create({\n    getDataForColumn: {\n        value: function (column) {\n            return element.all(by.repeater('ticket in').column(column)).map(function (cell) {\n                return cell.getText();\n            }).then(_.uniq).then(_.sortBy);\n        }\n    },\n\n    accounts: {\n        get: function () {\n            return this.getDataForColumn('ticket.account');\n        }\n    },\n\n    statuses: {\n        get: function () {\n            return this.getDataForColumn('ticket.status');\n        }\n    }\n});\n\ndescribe('rxSelectFilter', function () {\n    var rxSelectFilter;\n\n    before(function () {\n        demoPage.go('#/components/rxSelectFilter');\n        rxSelectFilter = encore.rxSelectFilter.main;\n    });\n\n    it('shows all the table data', function () {\n        rxSelectFilter.apply({\n            Account: { All: true },\n            Status: { All: true }\n        });\n\n        expect(table.accounts).to.eventually.eql(['A', 'B']);\n        expect(table.statuses).to.eventually.eql(['IN_PROGRESS', 'NEW', 'TRANSFERRED', 'VENDOR']);\n    });\n\n    it('filters the table data by the status', function () {\n        rxSelectFilter.apply({\n            Status: { All: false, Transferred: true }\n        });\n\n        expect(table.accounts).to.eventually.eql(['A', 'B']);\n        expect(table.statuses).to.eventually.eql(['TRANSFERRED']);\n    });\n\n    it('filters the table data by the account', function () {\n        rxSelectFilter.apply({\n            Account: { All: false, B: true },\n            Status: { All: true }\n        });\n\n        expect(table.accounts).to.eventually.eql(['B']);\n        expect(table.statuses).to.eventually.eql(['TRANSFERRED', 'VENDOR']);\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar rxMultiSelect = require('./rxSelectFilter.page').rxMultiSelect;\nvar _ = require('lodash');\n\n/**\n   rxMultiSelect exercises.\n   @exports encore.exercise.rxMultiSelect\n   @param {Object} [options=] - Test options. Used to build valid tests.\n   @param {rxMultiSelect} [options.instance=] - Component to exercise.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @param {Object} [options.inputs=[]] - The options of the select input.\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxMultiSelect({\n       instance: myPage.subscriptionList, // select one of many widgets from your page objects\n   }));\n   ```\n */\nexports.rxMultiSelect = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        inputs: []\n    });\n\n    return function () {\n        var component;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxMultiSelect.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxMultiSelect.initialize($(options.cssSelector));\n            }\n        });\n\n        it('hides the menu initially', function () {\n            expect(component.isOpen()).to.eventually.be.false;\n        });\n\n        it('shows the menu when clicked', function () {\n            component.openMenu();\n            expect(component.isOpen()).to.eventually.be.true;\n        });\n\n        it('selects no options', function () {\n            component.deselect(['Select All']);\n            expect(component.selectedOptions).to.eventually.be.empty;\n            expect(component.preview).to.eventually.equal('None');\n        });\n\n        it('selects a single option', function () {\n            var input = _.first(options.inputs);\n            component.select([input]);\n            expect(component.selectedOptions).to.eventually.eql([input]);\n            expect(component.preview).to.eventually.equal(input);\n        });\n\n        if (options.inputs.length > 2) {\n            it('selects multiple options', function () {\n                var inputs = options.inputs.slice(0, 2);\n                component.select(inputs);\n                expect(component.selectedOptions).to.eventually.eql(inputs);\n                expect(component.preview).to.eventually.equal('2 Selected');\n            });\n        }\n\n        it('selects all options', function () {\n            component.select(['Select All']);\n            expect(component.selectedOptions).to.eventually.eql(['Select All'].concat(options.inputs));\n            expect(component.preview).to.eventually.equal('All Selected');\n        });\n\n        it('deselects all options', function () {\n            component.deselect(['Select All']);\n            expect(component.selectedOptions).to.eventually.be.empty;\n            expect(component.preview).to.eventually.equal('None');\n        });\n\n        it('hides the menu when another element is clicked', function () {\n            component.rootElement.element(by.xpath('../..')).click();\n            expect(component.isOpen()).to.eventually.be.false;\n        });\n\n    };\n};\n"
        }
    },
    {
        "name": "rxSession",
        "moduleName": "'encore.ui.rxSession'",
        "displayName": "Rx Session",
        "srcFiles": [
            "src/rxSession/rxSession.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxLocalStorage"
        ],
        "stability": "unstable",
        "lastModified": "Oct 5, 2015 @ 15:24 (UTC-0500)",
        "rawLastModified": "2015-10-05 15:24:41 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>A component that manages user session</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxSessionCtrl', function ($scope, Session) {\n    $scope.isAuthenticated = function () {\n        alert(Session.isAuthenticated());\n    };\n});\n",
            "html": "<div ng-controller=\"rxSessionCtrl\">\n    <button ng-click=\"isAuthenticated()\" class=\"button\">Is Authenticated</button>\n</div>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxSessionStorage",
        "moduleName": "'encore.ui.rxSessionStorage'",
        "displayName": "Rx Session Storage",
        "srcFiles": [
            "src/rxSessionStorage/rxSessionStorage.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 5, 2015 @ 15:28 (UTC-0500)",
        "rawLastModified": "2015-10-05 15:28:51 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>A component that provides a simple wrapper around the global\n<code>sessionStorage</code> object for interacting with session storage.</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxSessionStorageCtrl', function ($scope, SessionStorage) {\n    $scope.setSideKick = function () {\n        SessionStorage.setItem('Batman', 'Robin');\n    };\n\n    $scope.getSideKick = function () {\n        alert(SessionStorage.getItem('Batman'));\n    };\n});\n",
            "html": "<div ng-controller=\"rxSessionStorageCtrl\">\n    <label>Who is Batman's side kick?</label>\n    <button ng-click=\"setSideKick()\" class=\"button button-positive\">Store Answer</button>\n    <button ng-click=\"getSideKick()\" class=\"button\">Answer?</button>\n</div>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxSortableColumn",
        "moduleName": "'encore.ui.rxSortableColumn'",
        "displayName": "Rx Sortable Column",
        "srcFiles": [
            "src/rxSortableColumn/rxSortableColumn.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxSortableColumn/templates/rxSortableColumn.html"
        ],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxSortableColumn component provides functionality to sort a table on a single property value.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxSortableColumnCtrl', function ($scope, PageTracking, rxSortUtil) {\n    $scope.sort = rxSortUtil.getDefault('name');\n    $scope.sort = rxSortUtil.getDefault('name', false);\n    $scope.pager = PageTracking.createInstance();\n\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n\n    $scope.talentPool = [\n        {\n            name: 'Andrew Yurisich',\n            jobTitle: 'Mailroom Associate IV'\n        },\n        {\n            name: 'Patrick Deuley',\n            jobTitle: 'Design Chaplain'\n        },\n        {\n            name: null,\n            jobTitle: 'Chief Mastermind'\n        },\n        {\n            jobTitle: 'Assistant Chief Mastermind'\n        },\n        {\n            name: 'Hussam Dawood',\n            jobTitle: 'Evangelist of Roger Enriquez'\n        },\n        {\n            name: 'Kerry Bowley',\n            jobTitle: 'Dev Mom'\n        },\n    ];\n});\n",
            "html": "<div ng-controller=\"rxSortableColumnCtrl\">\n    <p>Note: The demo table is also using <code>rx-floating-header</code>, which is not required. We've only done this to illustrate that <code>rxSortableColumn</code> works properly with <code>rxFloatingHeader</code>. The table is also using <code>rxSortEmptyTop</code>.</p>\n    <table rx-floating-header>\n        <thead>\n            <tr>\n                <th scope=\"col\">\n                    <rx-sortable-column\n                        sort-method=\"sortCol(property)\"\n                        sort-property=\"name\"\n                        predicate=\"sort.predicate\"\n                        reverse=\"sort.reverse\">\n                        Name\n                    </rx-sortable-column>\n                </th>\n                <th scope=\"col\">\n                    <rx-sortable-column\n                        sort-method=\"sortCol(property)\"\n                        sort-property=\"jobTitle\"\n                        predicate=\"sort.predicate\"\n                        reverse=\"sort.reverse\">\n                        Occupation\n                    </rx-sortable-column>\n                </th>\n                <th scope=\"col\">\n                    <rx-sortable-column\n                        sort-method=\"sortCol\"\n                        sort-property=\"none\"\n                        predicate=\"sort.predicate\"\n                        reverse=\"sort.reverse\">\n                        Testing Sort Errors (see Protractor Tab)\n                    </rx-sortable-column>\n                </th>\n            </tr>\n        </thead>\n        <tbody id=\"talentPoolData\">\n            <tr ng-repeat=\"resource in talentPool | rxSortEmptyTop:sort.predicate:sort.reverse\">\n                <th scope=\"row\" class=\"talent-name\">\n                    {{resource.name}}\n                </th>\n                <td class=\"talent-job\">\n                    {{resource.jobTitle}}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n",
            "less": "/*\n * rxSortableColumn\n */\n.rx-sortable-column {\n    position: relative;\n\n    .btn-link {\n        // This needs to be set explicitly, otherwise `.table-filters button`\n        // applies a font size of 93% and sortable columns have smaller headers.\n        font-size: 13px;\n    }\n\n    .sort-action {\n        display: block;\n        width: 100%;\n        margin: 0;\n        text-align: left;\n        &:focus {\n            // since we underline on focus, we can remove the outline rectangle that sticks around\n            outline: none;\n        }\n    }\n\n    .sort-icon {\n        display: block;\n        height: 0;\n        width: 0;\n        border: solid transparent;\n        border-width: 6px 5px;\n        position: absolute;\n        right: 0;\n        top: 50%;\n\n        &.asc {\n            margin-top: -9px;\n            border-bottom-color: #4a4a4a;\n        }\n        &.desc {\n            margin-top: -3px;\n            border-top-color: #4a4a4a;\n        }\n    }\n}\n\n",
            "midway": "var rxSortableColumn = encore.rxSortableColumn;\n\nvar column = function (columnName, repeaterString) {\n    var columnElement = element(by.cssContainingText('rx-sortable-column', columnName));\n    return rxSortableColumn.initialize(columnElement, repeaterString);\n};\n\ndescribe('rxSortableColumn', function () {\n    var sorts = rxSortableColumn.sortDirections;\n    var columnNames = ['Name', 'Occupation', 'Testing Sort Errors (see Protractor Tab)'];\n    var columns, nameColumn, roleColumn;\n\n    before(function () {\n        demoPage.go('#/components/rxSortableColumn');\n        columns = rxSortableColumn.byTable($('.component-demo table'));\n        nameColumn = column('Name', 'resource in talentPool');\n        roleColumn = column('Occupation');\n    });\n\n    // https://github.com/rackerlabs/encore-ui/issues/694 -- See \"End odd behavior\".\n    it('should have every column', function () {\n        expect(columns.names).to.eventually.eql(columnNames);\n    });\n\n    it('should apply a custom function to each column', function () {\n        var doesNotUseBoldText = function (columnElement) {\n            return columnElement.getText().then(function (text) {\n                return text.indexOf('Occupation') > -1;\n            });\n        };\n        expect(columns.getNamesUsing(doesNotUseBoldText)).to.eventually.eql([false, true, false]);\n    });\n\n    it('should return all sorts in the table', function () {\n        expect(columns.sorts).to.eventually.eql([sorts.ascending, sorts.notSorted, sorts.notSorted]);\n    });\n    // https://github.com/rackerlabs/encore-ui/issues/694 -- End odd behavior.\n\n    it('should display some sortable columns', function () {\n        expect(nameColumn.rootElement.isDisplayed()).to.eventually.eq.true;\n        expect(roleColumn.rootElement.isDisplayed()).to.eventually.eq.true;\n    });\n\n    it('should have an ascending sort shown by default for the name column', function () {\n        expect(nameColumn.currentSortDirection).to.eventually.eq(sorts.ascending);\n    });\n\n    it('should have no sort shown by default for the job title column', function () {\n        expect(roleColumn.currentSortDirection).to.eventually.eq(sorts.notSorted);\n    });\n\n    it('should not throw an error if the column responds to sorting clicks', function () {\n        var error = nameColumn.ColumnSortRequestUnresponsiveError;\n        expect(nameColumn.sort({ isAscending: true })).to.not.be.rejectedWith(error);\n    });\n\n    it('should support sorting columns ascending', function () {\n        nameColumn.sortAscending();\n        expect(nameColumn.currentSortDirection).to.eventually.eq(sorts.ascending);\n    });\n\n    it('should have empty names appearing at the top in ascending sort', function () {\n        var names = ['', '', 'Andrew Yurisich', 'Hussam Dawood', 'Kerry Bowley', 'Patrick Deuley'];\n        nameColumn.sortAscending();\n        expect(nameColumn.data).to.eventually.eql(names);\n    });\n\n    it('should support sorting columns descending', function () {\n        nameColumn.sortDescending();\n        expect(nameColumn.currentSortDirection).to.eventually.eq(sorts.descending);\n    });\n\n    it('should have empty names appearing at the bottom in descending sort', function () {\n        nameColumn.sortDescending();\n        var names = ['Patrick Deuley', 'Kerry Bowley', 'Hussam Dawood', 'Andrew Yurisich', '', ''];\n        expect(nameColumn.data).to.eventually.eql(names);\n    });\n\n    it('should remove all other sorts when sorting an unsorted column', function () {\n        roleColumn.sortAscending();\n        expect(nameColumn.currentSortDirection).to.eventually.eq(sorts.notSorted);\n    });\n\n    it('should have a name', function () {\n        expect(nameColumn.name).to.eventually.eq('Name');\n        expect(roleColumn.name).to.eventually.eq('Occupation');\n    });\n\n    describe('column data', function () {\n\n        beforeEach(function () {\n            nameColumn.sortAscending();\n        });\n\n        it('should throw an error if attempting to access cell data without a repeater string', function () {\n            expect(roleColumn.data).to.be.rejectedWith(roleColumn.CellUndiscoverableError);\n        });\n\n        it('should return all names as data', function () {\n            var names = ['', '', 'Andrew Yurisich', 'Hussam Dawood', 'Kerry Bowley', 'Patrick Deuley'];\n            expect(nameColumn.data).to.eventually.eql(names);\n        });\n\n        it('should apply a custom map function to cells', function () {\n            var mapFn = function sortsMail (cellElements) {\n                return cellElements.map(function (cellElement) {\n                    return cellElement.getText().then(function (name) {\n                        return name === 'Andrew Yurisich';\n                    });\n                });\n            };\n\n            expect(nameColumn.getDataUsing(mapFn)).to.eventually.eql([false, false, true, false, false, false]);\n        });\n\n        it('should apply a custom reduce function to cells', function () {\n            var reduceFn = function hasNamedState (cellElements) {\n                return cellElements.reduce(function (acc, cellElement) {\n                    return cellElement.getText().then(function (text) {\n                        if (text === 'Hussam Dawood') {\n                            acc[text] = 'Republic of Dawood';\n                        }\n                        return acc;\n                    });\n                }, {});\n            };\n\n            expect(nameColumn.getDataUsing(reduceFn)).to.eventually.eql({ 'Hussam Dawood': 'Republic of Dawood' });\n        });\n\n    });\n\n    describe('unresponsive column sorting', function () {\n        var errorColumn;\n\n        before(function () {\n            errorColumn = column('Testing Sort Errors');\n        });\n\n        it('should throw an error if the column does not respond to sorting clicks', function () {\n            var error = errorColumn.ColumnSortRequestUnresponsiveError;\n            expect(errorColumn.sort({ isAscending: true })).to.be.rejectedWith(error);\n        });\n\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxSpinner",
        "moduleName": "'encore.ui.rxSpinner'",
        "displayName": "Rx Spinner",
        "srcFiles": [
            "src/rxSpinner/rxSpinner.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>A component adds a spinner icon to any element</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxSpinnerCtrl', function ($scope) {\n    $scope.loading = true;\n});\n",
            "html": "<div ng-controller=\"rxSpinnerCtrl\">\n    <button rx-toggle=\"loading\" class=\"button\">Toggle Loading</button>\n    <div rx-spinner toggle=\"loading\" class=\"rxSpinnerExample\">Spinning = {{loading}}</div>\n</div>\n<style type=\"text/css\">\n.rxSpinnerExample {\n    background: #00ac31;\n    padding: 20px;\n    color: white;\n    line-height: 20px;\n}\n</style>\n",
            "less": "@import \"vars\";\n\n/*********************************************************\n *  CSS3 Animation spinner\n *\n *  Based on: http://cssdeck.com/labs/css3-animation-spinner\n *  Copyright 2013 - birkof.ro\n *********************************************************/\n.rx-spinner {\n    background-color: transparent;\n    border: 2px solid white;\n    border-top-color: transparent;\n    border-left-color: transparent;\n    .border-radius(150px);\n    display: inline-block;\n    width: 12px;\n    height: 12px;\n    margin-bottom: 3px;\n    vertical-align: middle;\n    -webkit-animation: spin 0.8s infinite linear;\n    -moz-animation: spin 0.8s infinite linear;\n    -ms-animation: spin 0.8s infinite linear;\n    -o-animation: spin 0.8s infinite linear;\n    animation: spin 0.8s infinite linear;\n}\n.rx-spinner.dark {\n    border-bottom-color: @appTextColor;\n    border-right-color: @appTextColor;\n}\n.rx-spinner.mini {\n    border-width: 2px;\n    width: 4px;\n    height: 4px;\n}\n.rx-spinner.small {\n    border-width: 2px;\n    width: 8px;\n    height: 8px;\n}\n.rx-spinner.large {\n    border-width: 3px;\n    width: 22px;\n    height: 22px;\n}\n.rx-spinner.extra-large {\n    border-width: 4px;\n    width: 32px;\n    height: 32px;\n}\n@-webkit-keyframes spin { /* Safari and Chrome */\n    from {\n        -webkit-transform: rotate(0deg);\n    }\n    to {\n        -webkit-transform: rotate(360deg);\n    }\n}\n@-moz-keyframes spin { /* Firefox */\n    from {\n        -moz-transform: rotate(0deg);\n    }\n    to {\n        -moz-transform: rotate(360deg);\n    }\n}\n@-ms-keyframes spin { /* IE */\n    from {\n        -ms-transform: rotate(0deg);\n    }\n    to {\n        -ms-transform: rotate(360deg);\n    }\n}\n@-o-keyframes spin { /* Opera */\n    from {\n        -o-transform: rotate(0deg);\n    }\n    to {\n        -o-transform: rotate(360deg);\n    }\n}\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n}\n",
            "midway": "var rxSpinnerPage = encore.rxSpinner;\n\ndescribe('rxSpinner', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxSpinner');\n    });\n\n    it.skip('should show element', function () {\n        expect(rxSpinnerPage.rxSpinnerElement.isDisplayed()).toEqual(true);\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxStatus",
        "moduleName": "'encore.ui.rxStatus'",
        "displayName": "Rx Status",
        "srcFiles": [
            "src/rxStatus/rxStatus.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxNotify"
        ],
        "stability": "stable",
        "lastModified": "Oct 2, 2015 @ 12:07 (UTC-0500)",
        "rawLastModified": "2015-10-02 12:07:43 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>A component that manages notifications for rxNotify</p>\n",
            "js": "angular.module('demoApp')\n.controller('rxStatusCtrl', function ($scope, $rootScope, Status) {\n    Status.setScope($scope);\n\n    $scope.triggerRouteChangeSuccess = function () {\n        $rootScope.$broadcast('$routeChangeSuccess');\n    };\n\n    $scope.clear = function () {\n        Status.clear();\n        $scope.notify = undefined;\n    };\n\n    $scope.setLoading = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setLoading(msg);\n    };\n\n    $scope.setSuccess = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setSuccess(msg);\n    };\n\n    $scope.setSuccessNext = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setSuccessNext(msg);\n    };\n\n    $scope.setSuccessImmediate = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setSuccessImmediate(msg);\n    };\n\n    $scope.setWarning = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setWarning(msg);\n    };\n\n    $scope.setInfo = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setInfo(msg);\n    };\n\n    $scope.setError = function (msg) {\n        Status.clear();\n        $scope.notify = Status.setError(msg);\n    };\n\n    $scope.dismiss = function () {\n        $scope.notify && Status.dismiss($scope.notify);\n        $scope.notify = undefined;\n    };\n});\n",
            "html": "<div ng-controller=\"rxStatusCtrl\">\n    <div style=\"clear: left;\">\n        <ol>\n            <li>\n                <button class=\"button\" ng-click=\"setLoading('This should set a spinner')\">setLoading</button>\n                should set a spinner\n            </li>\n            <li>&nbsp;</li>\n            <li>\n                <button class=\"button\" ng-click=\"setSuccess('This should show a success on $routeChangeSuccess')\">setSuccess</button>\n                should show a success on <strong>$routeChangeSuccess</strong> -\n                <button class=\"button\" ng-click=\"triggerRouteChangeSuccess()\">Trigger it!</button>\n            </li>\n            <li>&nbsp;</li>\n            <li>\n                <button class=\"button\" ng-click=\"setSuccessNext('This should show a success on $routeChangeSuccess')\">setSuccessNext</button>\n                should show a success on <strong>$routeChangeSuccess</strong> -\n                <button class=\"button\" ng-click=\"triggerRouteChangeSuccess()\">Trigger it!</button>\n            </li>\n            <li>&nbsp;</li>\n            <li>\n                <button class=\"button\" ng-click=\"setSuccessImmediate('This should show a success immediately')\">setSuccessImmediate</button>\n                should show a <strong>success immediately</strong>\n            </li>\n            <li>&nbsp;</li>\n            <li>\n                <button class=\"button\" ng-click=\"setWarning('This should set a warning')\">setWarning</button>\n                should set a <strong>warning</strong>\n            </li>\n            <li>&nbsp;</li>\n            <li>\n                <button class=\"button\" ng-click=\"setInfo('This should set an informational')\">setInfo</button>\n                should set an <strong>informational</strong>\n            </li>\n            <li>&nbsp;</li>\n            <li>\n                <button class=\"button\" ng-click=\"setError('This should set an error')\">setError</button>\n                should set an <strong>error</strong>\n            </li>\n        </ol>\n\n        <hr ng-show=\"!!notify\" />\n        <p ng-show=\"!!notify\">\n            <button class=\"button\" ng-click=\"dismiss()\">Dismiss</button>\n            the message shown\n        </p>\n\n        <p ng-show=\"notify\">\n            <button class=\"button\" ng-click=\"clear()\">Clear</button>\n            all shown messages\n        </p>\n    </div>\n</div>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxStatusColumn",
        "moduleName": "'encore.ui.rxStatusColumn'",
        "displayName": "Rx Status Column",
        "srcFiles": [
            "src/rxStatusColumn/rxStatusColumn.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxStatusColumn/templates/rxStatusColumn.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 27, 2015 @ 10:48 (UTC-0500)",
        "rawLastModified": "2015-10-27 10:48:53 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>This component provides directives and styles for putting status columns into tables.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxStatusColumnCtrl', function ($scope, rxStatusMappings, rxSortUtil) {\n    $scope.servers = [\n        { status: 'ACTIVE', title: 'ACTIVE status' },\n        { status: 'ERROR', title: 'ERROR status' },\n        { status: 'DISABLED', title: 'DISABLED status' },\n        { status: 'DELETED', title: 'DELETED status mapped to ERROR' },\n        { status: 'UNKNOWN', title: 'UNKNOWN status mapped to ERROR' },\n        { status: 'RESCUE', title: 'RESCUE status mapped to INFO' },\n        { status: 'SUSPENDED', title: 'SUSPENDED status mapped to WARNING' },\n        { status: 'REBUILD', title: 'REBUILD status mapped to PENDING' },\n        { status: 'RESIZE', title: 'RESIZE status mapped to PENDING' },\n        { status: 'MIGRATING', title: 'MIGRATING status mapped to PENDING' },\n        { status: 'DELETING', title: 'DELETING status mapped to PENDING, using `fooApi` mapping', api:'fooApi' }\n    ];\n\n    // We have a few different ways of adding mappings. We've tried to show them all here\n    rxStatusMappings.addGlobal({\n        'DELETING': 'PENDING'\n    });\n    rxStatusMappings.mapToInfo('RESCUE');\n    rxStatusMappings.mapToWarning('SUSPENDED');\n    rxStatusMappings.mapToPending(['REBUILD','RESIZE','MIGRATING']);\n    rxStatusMappings.mapToError(['DELETED', 'UNKNOWN']);\n    rxStatusMappings.addAPI('fooApi', { 'DELETING': 'PENDING' });\n    rxStatusMappings.mapToPending('SomeApiSpecificStatus', 'fooApi');\n    $scope.sortCol = function (predicate) {\n        return rxSortUtil.sortCol($scope, predicate);\n    };\n    $scope.sort = rxSortUtil.getDefault('status');\n});\n",
            "html": "<div ng-controller=\"rxStatusColumnCtrl\">\n    <table class=\"table-striped demo-status-column-table\">\n        <thead>\n            <tr>\n                <th rx-status-header>\n                    <rx-sortable-column\n                      sort-method=\"sortCol(property)\"\n                      sort-property=\"status\"\n                      predicate=\"sort.predicate\"\n                      reverse=\"sort.reverse\">\n                        Status\n                    </rx-sortable-column>\n                </th>\n                <th class=\"column-title\">\n                    Title\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"server in servers | orderBy: sort.predicate:sort.reverse \">\n                <!-- Both `api` and `tooltip-content` are optional -->\n                <td rx-status-column status=\"{{ server.status }}\" api=\"{{ server.api }}\" tooltip-content=\"{{ server.status }}\"></td>\n                <td>{{ server.title }}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<style>\n.demo-status-column-table {\n    max-width: 500px;\n}\n</style>\n",
            "less": "/*\n * rxStatusColumn\n */\n\nth.rx-status-header {\n    width: 55px;\n}\n\ntd.rx-status-column {\n    text-align: center;\n    i {\n        padding-left: 2px;\n    }\n    &.status-ACTIVE {\n        background: #ddffd3;\n    }\n    &.status-PENDING {\n        background: #fdbc3c;\n        background-image: url(\"images/status-pending.gif\");\n    }\n    &.status-WARNING {\n        background: #fdbc3c;\n        i {\n            color: @orange;\n        }\n    }\n    &.status-ERROR {\n        background: #eb2124;\n        i {\n            color: #861212;\n        }\n    }\n    &.status-INFO {\n        background: @light-blue;\n        i {\n            color: #287bbd;\n        }\n    }\n    &.status-DISABLED {\n        background: @disabled-gray;\n    }\n\n    .fa-exclamation-circle {\n        color: transparent;\n    }\n\n\n}\n",
            "midway": "var _ = require('lodash');\nvar Page = require('astrolabe').Page;\n\nvar rxStatusColumn = encore.rxStatusColumn;\nvar rxSortableColumn = encore.rxSortableColumn;\n\n// an anonymous page object to demonstrate table and cell creation\nvar repeaterString = 'server in servers';\nvar tablePageObject = Page.create({\n\n    rootElement: {\n        get: function () {\n            return $('.demo-status-column-table');\n        }\n    },\n\n    tblServers: {\n        get: function () {\n            return this.rootElement.all(by.repeater(repeaterString));\n        }\n    },\n\n    column: {\n        value: function (columnName) {\n            // Only 'Status' is supported -- 'Title' is unsortable.\n            if (columnName === 'Status') {\n                var columnElement = this.rootElement.$('rx-sortable-column[sort-property=\"status\"]');\n                return rxSortableColumn.initialize(columnElement, repeaterString);\n            }\n        }\n    },\n\n    row: {\n        value: function (rowIndex) {\n            var rowElement = this.tblServers.get(rowIndex);\n            return Page.create({\n                // The tests below focus heavily on this table row property\n                status: {\n                    get: function () {\n                        return rxStatusColumn.initialize(rowElement.$('[rx-status-column]'));\n                    }\n                },\n\n                // goo.gl/OJdysF\n                title: {\n                    get: function () {\n                        return rowElement.$('td+td').getText();\n                    }\n                }\n            });\n        }\n    }\n\n});\n\nvar statuses = rxStatusColumn.statuses;\nvar icons = rxStatusColumn.icons;\nvar colors = rxStatusColumn.colors;\ndescribe('rxStatusColumn', function () {\n\n    before(function () {\n        demoPage.go('#/components/rxStatusColumn');\n    });\n\n    describe('rows', function () {\n        var status;\n\n        describe('active cell', function () {\n\n            before(function () {\n                status = tablePageObject.row(0).status;\n            });\n\n            it('should have a status by type', function () {\n                expect(status.byType).to.eventually.equal(statuses.active);\n            });\n\n            it('should not have a status by icon', function () {\n                expect(status.byIcon).to.eventually.be.null;\n            });\n\n            it('should have a status by color', function () {\n                expect(status.byColor).to.eventually.equal(colors.active);\n            });\n\n            it('should not have an api ', function () {\n                expect(status.api).to.eventually.be.null;\n            });\n\n            it('should not have a tooltip', function () {\n                expect(status.tooltip.exists).to.eventually.be.true;\n            });\n\n            it('should have tooltip text', function () {\n                expect(status.tooltip.text).to.eventually.equal('ACTIVE');\n            });\n\n        });\n\n        describe('disabled cell', function () {\n\n            before(function () {\n                status = tablePageObject.row(3).status;\n            });\n\n            it('should have a status by type', function () {\n                expect(status.byType).to.eventually.equal(statuses.disabled);\n            });\n\n            it('should not have a status by icon', function () {\n                expect(status.byIcon).to.eventually.be.null;\n            });\n\n            it('should have a status by color', function () {\n                expect(status.byColor).to.eventually.equal(colors.disabled);\n            });\n\n            it('should not have an api ', function () {\n                expect(status.api).to.eventually.be.null;\n            });\n\n            it('should not have a tooltip', function () {\n                expect(status.tooltip.exists).to.eventually.be.true;\n            });\n\n            it('should have tooltip text', function () {\n                expect(status.tooltip.text).to.eventually.equal('DISABLED');\n            });\n\n        });\n\n        describe('error cell', function () {\n\n            before(function () {\n                status = tablePageObject.row(4).status;\n            });\n\n            it('should have a status by type', function () {\n                expect(status.byType).to.eventually.equal(statuses.error);\n            });\n\n            it('should not have a status by icon', function () {\n                expect(status.byIcon).to.eventually.equal(statuses.error);\n            });\n\n            it('should have a status by color', function () {\n                expect(status.byColor).to.eventually.equal(colors.error);\n            });\n\n            it('should have a tooltip', function () {\n                expect(status.tooltip.exists).to.eventually.be.true;\n            });\n\n            it('should have tooltip text', function () {\n                expect(status.tooltip.text).to.eventually.equal('ERROR');\n            });\n\n        });\n\n        describe('info cells', function () {\n\n            describe('rescue cell', function () {\n\n                before(function () {\n                    status = tablePageObject.row(7).status;\n                });\n\n                it('should have a status by type', function () {\n                    expect(status.byType).to.eventually.equal(statuses.rescue);\n                });\n\n                it('should not have a status by icon', function () {\n                    expect(status.byIcon).to.eventually.equal(icons.info);\n                });\n\n                it('should have a status by color', function () {\n                    expect(status.byColor).to.eventually.equal(colors.info);\n                });\n\n            });\n\n        });\n\n        describe('pending cells', function () {\n\n            describe('migrating cell', function () {\n\n                before(function () {\n                    status = tablePageObject.row(5).status;\n                });\n\n                it('should have a status by type', function () {\n                    expect(status.byType).to.eventually.equal(statuses.migrating);\n                });\n\n                it('should have a status by icon', function () {\n                    expect(status.byIcon).to.eventually.be.null;\n                });\n\n                it('should have a status by color', function () {\n                    expect(status.byColor).to.eventually.equal(colors.pending);\n                });\n\n            });\n\n            describe('deleting cell', function () {\n\n                before(function () {\n                    status = tablePageObject.row(2).status;\n                });\n\n                it('should have a status by type', function () {\n                    expect(status.byType).to.eventually.equal(statuses.deleting);\n                });\n\n                it('should have a status by icon', function () {\n                    expect(status.byIcon).to.eventually.be.null;\n                });\n\n                it('should have a status by color', function () {\n                    expect(status.byColor).to.eventually.equal(colors.pending);\n                });\n\n                it('should be using an api', function () {\n                    expect(status.api).to.eventually.equal('fooApi');\n                });\n\n                it('should have tooltip text', function () {\n                    expect(status.tooltip.text).to.eventually.equal('DELETING');\n                });\n\n            });\n\n        });\n\n    });\n\n    describe('sorting', function () {\n        var column;\n        var ascendingOrder = _.values(statuses).sort();\n\n        var statusCellData = function (cellElements) {\n            return cellElements.map(function (cellElement) {\n                return rxStatusColumn.initialize(cellElement).byType;\n            });\n        };\n\n        before(function () {\n            column = tablePageObject.column('Status');\n        });\n\n        it('should support sorting ascending', function () {\n            column.sortAscending();\n            expect(column.getDataUsing(statusCellData, '[rx-status-column]')).to.eventually.eql(ascendingOrder);\n        });\n\n        it('should support sorting descending', function () {\n            var descendingOrder = ascendingOrder.reverse();\n            column.sortDescending();\n            expect(column.getDataUsing(statusCellData, '[rx-status-column]')).to.eventually.eql(descendingOrder);\n        });\n\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxTags",
        "moduleName": "'encore.ui.rxTags'",
        "displayName": "Rx Tags",
        "srcFiles": [
            "src/rxTags/rxTags.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxTags/templates/rxTags.html"
        ],
        "dependencies": [
            "rxMisc",
            "rxSessionStorage"
        ],
        "stability": "experimental",
        "lastModified": "Oct 23, 2015 @ 17:45 (UTC-0500)",
        "rawLastModified": "2015-10-23 17:45:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p>A component used to apply predetermined descriptions to an entity.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxTagsCtrl', function ($scope) {\n    $scope.tagOptions = [\n        { text: 'apple', category: 'fruit' },\n        { text: 'orange', category: 'fruit' },\n        { text: 'banana', category: 'fruit' },\n        { text: 'squash', category: 'vegetable' }\n    ];\n    $scope.tags = ['apple'];\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxTagsCtrl\">\n    <h4>Standard:</h4>\n    <rx-tags\n        id=\"standard-tags\"\n        ng-model=\"tags\"\n        options=\"tagOptions\"\n        key=\"text\"></rx-tags>\n\n    <h4>Disabled:</h4>\n    <rx-tags\n        id=\"disabled-tags\"\n        ng-model=\"tagOptions\"\n        disabled></rx-tags>\n</div>\n",
            "less": "/*\n * rxTags\n */\nrx-tags {\n    display: block;\n\n    &[disabled] .rx-tags {\n        border: 0;\n\n        .fa-times {\n            display: none;\n        }\n\n        &:hover {\n            cursor: default;\n        }\n    }\n}\n.rx-tags {\n    background-color: @white;\n    border: 1px solid @rxForm-input-border-color;\n\n    &:hover {\n        cursor: text;\n    }\n\n    input {\n        width: 200px;\n        padding: 3px 5px;\n        margin: 8px 0;\n    }\n\n    .tag {\n        display: inline-block;\n        margin: 6px 10px;\n        line-height: @rxTag-height;\n        border-radius: @rxTag-height / 2;\n        vertical-align: top;\n        background-color: #e0e0e0;\n        &:hover {\n            cursor: default;\n        }\n\n        &:focus {\n            background-color: #007bff;\n            outline: none;\n            .fa,\n            .text,\n            .category {\n                color: @white;\n            }\n        }\n\n        & > * {\n            vertical-align: middle;\n        }\n\n        .text {\n            font-size: 12px;\n            margin: 0 7px 0 10px;\n            color: #727272;\n        }\n\n        .category {\n            font-size: 10px;\n            margin-right: 20px;\n            color: #878787;\n        }\n\n        .fa-tag {\n            margin-left: @rxTag-height / 2;\n            color: #999999;\n        }\n\n        .fa-times {\n            margin-right: @rxTag-height / 2;\n            color: #b8b8b8;\n            &:hover {\n                cursor: pointer;\n                color: @warnRedHover;\n            }\n        }\n    }\n}\n",
            "midway": "describe('rxTags', function () {\n\n    before(function () {\n        demoPage.go('#/component/rxTags');\n    });\n\n    describe('exercises', encore.exercise.rxTags({\n        instance: encore.rxTags.initialize($('#standard-tags')),\n        sampleText: 'orange'\n    }));\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar rxTags = require('./rxTags.page').rxTags;\n\n/**\n * rxTags exercises\n * @exports encore.exercise.rxTags\n * @param {Object} [options=] - Test options. Used to build valid tests.\n * @param {rxTags} [options.instance=] - Component to Exercise.\n * @param {string} options.sampleText - A tag that can be added.\n * @example\n * <pre>\n * describe('default exercises', encore.exercise.rxTags({\n *     instance: encore.rxTags.initialize('.demo rx-tags') // select one of many widgets on page\n * }));\n * </pre>\n */\nexports.rxTags = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        sampleText: undefined\n    });\n\n    return function () {\n        var component, tag, numTags;\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxTags.main;\n            }\n\n            component.count().then(function (num) {\n                numTags = num;\n            });\n        });\n\n        if (!_.isUndefined(options.sampleText)) {\n            describe('after adding tag', function () {\n                before(function () {\n                    tag = component.addTag(options.sampleText);\n                });\n\n                it('should have expected value', function () {\n                    expect(tag.text).to.eventually.equal(options.sampleText);\n                });\n\n                it('should increment total tags by 1', function () {\n                    expect(component.count()).to.eventually.equal(numTags + 1);\n                });\n\n                it('should not focus last tag', function () {\n                    expect(tag.isFocused()).to.eventually.be.false;\n                });\n\n                describe('and clicking the tag X', function () {\n                    before(function () {\n                        tag.remove();\n                    });\n\n                    it('should no longer exist', function () {\n                        expect(tag.exists()).to.eventually.be.false;\n                    });\n\n                    it('should decrement total tags by 1', function () {\n                        expect(component.count()).to.eventually.equal(numTags);\n                    });\n                });\n            });\n\n            describe('after adding temporary tag for removal', function () {\n                before(function () {\n                    tag = component.addTag(options.sampleText);\n                });\n\n                describe('and typing backspace from input', function () {\n                    before(function () {\n                        component.sendBackspace();\n                    });\n\n                    it('should focus the last tag', function () {\n                        expect(tag.isFocused()).to.eventually.be.true;\n                    });\n\n                    describe('and typing backspace with focused tag', function () {\n                        before(function () {\n                            tag.sendBackspace();\n                        });\n\n                        it('should no longer exist', function () {\n                            expect(component.byText(options.sampleText).exists()).to.eventually.be.false;\n                        });\n\n                        it('should decrement count by 1', function () {\n                            expect(component.count()).to.eventually.equal(numTags);\n                        });\n                    });\n                });\n            });\n        }\n    };\n};\n"
        }
    },
    {
        "name": "rxToggle",
        "moduleName": "'encore.ui.rxToggle'",
        "displayName": "Rx Toggle",
        "srcFiles": [
            "src/rxToggle/rxToggle.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "stable",
        "lastModified": "Oct 6, 2015 @ 10:49 (UTC-0500)",
        "rawLastModified": "2015-10-06 10:49:42 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/stable.svg\" alt=\"stable\"></a></p>\n<p>This component provides an attribute directive to handle toggling a boolean\nscope property for show/hide purposes (normally used in conjunction with\nng-show to toggle hidden content).</p>\n",
            "js": "",
            "html": "<div>\n    <button rx-toggle=\"visible\" id=\"vacillator\" class=\"button\">Toggle Div</button>\n\n    <p>Current state: {{visible}}</p>\n\n    <div ng-show=\"visible\" id=\"vacillated\">Shows when $scope.visibile == true</div>\n</div>",
            "less": "",
            "midway": "describe('rxToggle', function () {\n    var rxToggle, rxToggleContent;\n\n    before(function () {\n        demoPage.go('#/components/rxToggle');\n        rxToggle = $('#vacillator');\n        rxToggleContent = $('#vacillated');\n    });\n\n    it('should toggle content on show', function () {\n        expect(rxToggleContent.isDisplayed()).to.eventually.be.false;\n\n        rxToggle.click();\n\n        expect(rxToggleContent.isDisplayed()).to.eventually.be.true;\n\n        rxToggle.click();\n\n        expect(rxToggleContent.isDisplayed()).to.eventually.be.false;\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxToggleSwitch",
        "moduleName": "'encore.ui.rxToggleSwitch'",
        "displayName": "Rx Toggle Switch",
        "srcFiles": [
            "src/rxToggleSwitch/rxToggleSwitch.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [
            "templates/rxToggleSwitch/templates/rxToggleSwitch.html"
        ],
        "dependencies": [],
        "stability": "experimental",
        "lastModified": "Oct 27, 2015 @ 10:48 (UTC-0500)",
        "rawLastModified": "2015-10-27 10:48:53 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/experimental.svg\" alt=\"experimental\"></a></p>\n<p> A component that creates a boolean toggle switch</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('rxToggleSwitchCtrl', function ($scope, $timeout, rxNotify) {\n    $scope.toggle3 = true;\n    $scope.toggle5 = true;\n\n    $scope.attemptChange = function (value) {\n        $scope.loading = true;\n        rxNotify.clear('page');\n        rxNotify.add('Saving...', {\n            loading: true\n        });\n\n        // Simulate an API request\n        $timeout(function () {\n            $scope.loading = false;\n            rxNotify.clear('page');\n            rxNotify.add('Change saved', {\n                type: 'success'\n            });\n        }, 1000);\n    };\n\n    $scope.attemptFailedChange = function (value) {\n        $scope.loading5 = true;\n        rxNotify.clear('page');\n        rxNotify.add('Attempting to activate...', {\n            loading: true\n        });\n\n        // Simulate a failed API request\n        $timeout(function () {\n            $scope.loading5 = false;\n            rxNotify.clear('page');\n            rxNotify.add('Asynchronous operation failed', {\n                type: 'error',\n            });\n            \n            // Reset toggle switch to original value to simulate failed async operation\n            $scope.toggle5 = !value;\n        }, 1000);\n    };\n});\n",
            "html": "<!-- Sample HTML goes here as a live example of how the component can be used -->\n<div ng-controller=\"rxToggleSwitchCtrl\">\n    <p>\n        <h3>Simple use</h3>\n        <rx-toggle-switch class=\"demo-default-values\" ng-model=\"encoreSuperpowers\"></rx-toggle-switch>\n        <span>Do you have powers? {{ encoreSuperpowers }}</span>\n    </p>\n    <p>\n        <h3>Specific model values</h3>\n        <rx-toggle-switch class=\"demo-model-values\"\n            ng-model=\"toggle2\"\n            true-value=\"active\"\n            false-value=\"disabled\">\n        </rx-toggle-switch>\n        <span>Model value: {{ toggle2 }}</span>\n    </p>\n    <p>\n        <h3>Performing an asynchronous operation</h3>\n        <rx-toggle-switch class=\"demo-post-hook\"\n            ng-model=\"toggle3\"\n            post-hook=\"attemptChange(value)\"\n            disabled=\"loading\">\n        </rx-toggle-switch>\n    </p>\n    <p>\n        <h3>Attempting a failed asynchronous operation</h3>\n        <rx-toggle-switch class=\"demo-failed-async\"\n            ng-model=\"toggle5\"\n            post-hook=\"attemptFailedChange()\"\n            true-value=\"active\"\n            disabled=\"loading5\">\n        </rx-toggle-switch>\n    </p>\n    <p>\n        <h3>Disabled</h3>\n        <rx-toggle-switch class=\"demo-disabled\" ng-model=\"toggle4\" disabled=\"true\"></rx-toggle-switch>\n    </p>\n</div>\n",
            "less": "/*\n * rxToggleSwitch\n */\n@textColor: @white;\n@offStateColor: #b3b3b3;\n@borderColor: darken(@offStateColor, 10%);\n@onStateColor: #00ac31;\n@knobColor: @white;\n@knobBorderColor: darken(@knobColor, 10%);\n@knobSize: 1.2em;\n@edgeSpacing: @knobSize * 0.9;\n@lineHeight: @knobSize * 1.25;\n@blurDist: @edgeSpacing;\n@blurSpread: (@edgeSpacing/3) * -1;\n\n.rx-toggle-switch {\n    font-size: 0.8em;\n    line-height: @lineHeight;\n\n    display: inline-block;\n\n    border: 1px @borderColor solid;\n    border-radius: 9px;\n    background-color: @offStateColor;\n    color: @textColor;\n\n    padding: 0 @edgeSpacing 0 @edgeSpacing;\n\n    width: 5em;\n\n    cursor: pointer;\n    position: relative;\n    text-align: right;\n\n    .box-shadow(inset 1px 2px @blurDist @blurSpread rgba(0,0,0,0.50));\n    .user-select(none);\n    .box-sizing(border-box);\n\n    &[disabled] {\n        background-color: desaturate(lighten(@offStateColor, 7%), 80%);\n        color: #666666;\n        &.on {\n            background-color: desaturate(lighten(@onStateColor, 33%), 80%);\n        }\n        cursor: not-allowed;\n        .knob {\n            background-color: #adadad;\n            border: 1px #999999 solid;\n        }\n    }\n    &.on {\n        background-color: @onStateColor;\n        text-align: left;\n        .knob {\n            left: 100%;\n            -webkit-transform: translate(-100%, 0);\n            -moz-transform: translate(-100%, 0);\n            transform: translate(-100%, 0);\n        }\n    }\n    .knob {\n        .transition-value(all 0.1s ease-out);\n\n        position: absolute;\n        display: inline-block;\n        top: 0;\n        left: 0;\n\n        width: @knobSize;\n        height: @knobSize;\n        border-radius: (@knobSize/2)+1;\n        background-color: @knobColor;\n        border: 1px @knobBorderColor solid;\n\n        .box-shadow(0 0 @blurDist @blurSpread rgba(0,0,0,0.55));\n        overflow: hidden;\n    }\n\n}\n",
            "midway": "describe('rxToggleSwitch', function () {\n    var rxToggleSwitch;\n\n    before(function () {\n        demoPage.go('#/components/rxToggleSwitch');\n    });\n\n    describe('defaults', encore.exercise.rxToggleSwitch({\n        instance: encore.rxToggleSwitch.initialize($('.demo-default-values'))\n    }));\n\n    describe('specific model values', encore.exercise.rxToggleSwitch({\n        instance: encore.rxToggleSwitch.initialize($('.demo-model-values'))\n    }));\n\n    describe('post hook', encore.exercise.rxToggleSwitch({\n        instance: encore.rxToggleSwitch.initialize($('.demo-post-hook'))\n    }));\n\n    describe('disabled', encore.exercise.rxToggleSwitch({\n        cssSelector: '.demo-disabled',\n        disabled: true\n    }));\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\nvar _ = require('lodash');\nvar rxToggleSwitch = require('./rxToggleSwitch.page').rxToggleSwitch;\n\n/**\n   rxToggleSwitch exercises.\n   @exports encore.exercise.rxToggleSwitch\n   @param {Object} [options] - Test options. Used to build valid tests.\n   @param {rxToggleSwitch} [options.instance=] - Component to exercise.\n   @param {string} [options.cssSelector=] - DEPRECATED: Fallback selector string to initialize widget with.\n   @param {boolean} [options.disabled=false] - Determines if the switch can be toggled\n   @example\n   ```js\n   describe('default exercises', encore.exercise.rxToggleSwitch({\n       cssSelector: myPage.emailPreference // select one of many widgets from your page objects\n   }));\n   ```\n */\nexports.rxToggleSwitch = function (options) {\n    if (options === undefined) {\n        options = {};\n    }\n\n    options = _.defaults(options, {\n        disabled: false\n    });\n\n    return function () {\n        var component;\n        var initialState;\n\n        var getText = function (isEnabled) {\n            return isEnabled ? 'ON' : 'OFF';\n        };\n\n        var toggle = function () {\n            return component.isEnabled().then(function (enabled) {\n                enabled ? component.disable() : component.enable();\n            });\n        };\n\n        before(function () {\n            if (options.instance !== undefined) {\n                component = options.instance;\n            } else {\n                component = rxToggleSwitch.main;\n            }\n\n            if (options.cssSelector !== undefined) {\n                console.warn('Deprecated exercise option `cssSelector` will be removed in favor of `instance`');\n                component = rxToggleSwitch.initialize($(options.cssSelector));\n            }\n\n            component.isEnabled().then(function (isEnabled) {\n                initialState = isEnabled;\n            });\n        });\n\n        it('should show the element', function () {\n            expect(component.isDisplayed()).to.eventually.be.true;\n        });\n\n        if (options.disabled) {\n            it('does not change state when clicked', function () {\n                toggle();\n                expect(component.isEnabled()).to.eventually.equal(initialState);\n                expect(component.text).to.eventually.equal(getText(initialState));\n            });\n        } else {\n            it('is in the ' + getText(initialState) + ' state', function () {\n                expect(component.text).to.eventually.equal(getText(initialState));\n            });\n\n            it('changes to ' + getText(!initialState) + ' when clicked', function () {\n                toggle();\n                expect(component.isEnabled()).to.eventually.equal(!initialState);\n                expect(component.text).to.eventually.equal(getText(!initialState));\n            });\n\n            it('returns to the ' + getText(initialState) + ' when clicked again', function () {\n                toggle();\n                expect(component.isEnabled()).to.eventually.equal(initialState);\n                expect(component.text).to.eventually.equal(getText(initialState));\n            });\n        }\n\n    };\n};\n"
        }
    },
    {
        "name": "rxTokenInterceptor",
        "moduleName": "'encore.ui.rxTokenInterceptor'",
        "displayName": "Rx Token Interceptor",
        "srcFiles": [
            "src/rxTokenInterceptor/rxTokenInterceptor.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxSession",
            "rxLocalStorage"
        ],
        "stability": "unstable",
        "lastModified": "Oct 6, 2015 @ 16:05 (UTC-0500)",
        "rawLastModified": "2015-10-06 16:05:07 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxTokenInterceptor component adds an authorization token to all http requests.  This allows access to system services for authenticated users.</p>\n",
            "js": "",
            "html": "<pre>\n    <code>\n        angular.module('encoreApp', ['encore.ui'])\n            .config(function ($httpProvider) {\n                $httpProvider.interceptors.push('TokenInterceptor');\n            });\n    </code>\n</pre>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "rxUnauthorizedInterceptor",
        "moduleName": "'encore.ui.rxUnauthorizedInterceptor'",
        "displayName": "Rx Unauthorized Interceptor",
        "srcFiles": [
            "src/rxUnauthorizedInterceptor/rxUnauthorizedInterceptor.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [
            "rxSession",
            "rxLocalStorage"
        ],
        "stability": "unstable",
        "lastModified": "Oct 7, 2015 @ 11:35 (UTC-0500)",
        "rawLastModified": "2015-10-07 11:35:53 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The rxUnauthorizedInterceptor component redirects users to the login page, when user authentication fails during a system service request.</p>\n",
            "js": "",
            "html": "<pre>\n    <code>\n        angular.module('encoreApp', ['encore.ui'])\n            .config(function ($httpProvider) {\n                $httpProvider.interceptors.push('UnauthorizedInterceptor');\n            });\n    </code>\n</pre>\n",
            "less": "",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "tabs",
        "moduleName": "'encore.ui.tabs'",
        "displayName": "Tabs",
        "srcFiles": [
            "src/tabs/tabs.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 22, 2015 @ 14:23 (UTC-0500)",
        "rawLastModified": "2015-10-22 14:23:05 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This component provides styles and a demo for the <a href=\"https://github.com/angular-ui/bootstrap/tree/master/src/tabs\">the Angular-UI Bootstrap Tabs plugin</a>, which is included as a dependency for EncoreUI.</p>\n",
            "js": "",
            "html": "<div>\n    <h2>Alternative Lorem Ipsums</h2>\n    <tabset id=\"tabs\">\n        <tab heading=\"Bacon Ipsum\">\n            <p>Bacon ipsum dolor sit amet salami jowl corned beef, andouille flank tongue ball tip kielbasa pastrami tri-tip meatloaf short loin beef biltong. Cow bresaola ground round strip steak fatback meatball shoulder leberkas pastrami sausage corned beef t-bone pork belly drumstick.</p>\n        </tab>\n        <tab heading=\"Veggie Ipsum\">\n            <p>Veggies sunt bona vobis, proinde vos postulo esse magis grape pea sprouts horseradish courgette maize spinach prairie turnip jícama coriander quandong gourd broccoli seakale gumbo. Parsley corn lentil zucchini radicchio maize burdock avocado sea lettuce. Garbanzo tigernut earthnut pea fennel.</p>\n        </tab>\n        <tab>\n            <tab-heading>Cat Ipsum <span class=\"subdued\">(meow)</span></tab-heading>\n            <p>Cat ipsum dolor sit amet, hunt anything that moves or hopped up on goofballs hide when guests come over. Hide when guests come over intrigued by the shower, or stare at ceiling climb leg for stretch and use lap as chair. Hunt anything that moves flop over, leave dead animals as gifts for chase imaginary bugs, chase mice for stare at ceiling yet hopped up on goofballs.</p>\n        </tab>\n        <tab>\n            <tab-heading>Tupac Ipsum</tab-heading>\n            <p>I give a holla to my sisters on welfare 2Pac cares, if don't nobody else care And, I know they like to beat you down a lot When you come around the block, brothers clown a lot But please don't cry, dry your eyes, never let up Forgive but don't forget, girl, keep your head up And when he tells you you ain't nothin', don't believe him And if he can't learn to love you, you should leave him Cause sister, you don't need him And I ain't tryin' to gas ya up, I just call 'em how I see 'em</p>\n        </tab>\n    </tabset>\n</div>\n",
            "less": "@import \"vars\";\n\n.nav-tabs {\n    display: flex;\n    border-bottom: 9px solid @tabBorder;\n    clear: both;\n\n    li {\n        flex: 0 0 auto;\n        font-size: 14px;\n        margin-right: 1px;\n    }\n\n    a {\n        display: block;\n        background: #3f6085;\n        color: #cccccc;\n        padding: 10px 20px;\n\n        .subdued {\n            color: @subduedTextHover;\n        }\n\n        &:hover:not(.active),\n        &:focus:not(.active) {\n            cursor: pointer;\n            color: @white;\n            text-decoration: none;\n\n            .subdued {\n                color: @subduedText;\n            }\n        }\n    }\n\n    .active a {\n        background: @tabBorder;\n        color: @white;\n\n        .subdued {\n            color: @subduedText;\n        }\n    }\n}\n\n.tab-pane {\n    clear: both;\n    display: none;\n    background: @white;\n    padding: 10px;\n    border-left: 2px solid @tabBorder;\n    border-right: 2px solid @tabBorder;\n    border-bottom: 2px solid @tabBorder;\n\n    &.active {\n        display: block;\n    }\n\n    // If the title is the first part of the tab-pane, remove its top border so there isn't so much space\n    .title:first-child {\n        margin-top: 0;\n    }\n}\n",
            "midway": "var tabsPage = encore.tabs;\n\ndescribe('tabs', function () {\n    var tabs;\n    var tabNames = ['Bacon Ipsum', 'Veggie Ipsum', 'Cat Ipsum (meow)', 'Tupac Ipsum'];\n\n    before(function () {\n        demoPage.go('#/components/tabs');\n        tabs = tabsPage.initialize($('#tabs'));\n    });\n\n    it('should show element', function () {\n        expect(tabs.isDisplayed()).to.eventually.be.true;\n    });\n\n    it('should count all the tabs', function () {\n        expect(tabs.count()).to.eventually.equal(tabNames.length);\n    });\n\n    it('should still have all tabs match the test data', function () {\n        expect(tabs.names).to.eventually.eql(tabNames);\n    });\n\n    it('should not find tabs that are not represented', function () {\n        expect(tabs.hasTab('Yankovipsum')).to.eventually.be.false;\n    });\n\n    it('should find tabs that represent', function () {\n        expect(tabs.hasTab('Tupac Ipsum')).to.eventually.be.true;\n    });\n\n    it('should have an active tab', function () {\n        expect(tabs.activeTab.name).to.eventually.equal('Bacon Ipsum');\n    });\n\n    it('should get a tab by index', function () {\n        expect(tabs.byIndex(1).name).to.eventually.equal('Veggie Ipsum');\n    });\n\n    it('should report null for tabs missing subtitles', function () {\n        expect(tabs.byIndex(-1).subtitle).to.eventually.be.null;\n    });\n\n    describe('tab', function () {\n        var tab;\n\n        before(function () {\n            tab = tabs.byName('Cat Ipsum');\n        });\n\n        it('should be displayed', function () {\n            expect(tab.isDisplayed()).to.eventually.be.true;\n        });\n\n        it('should still not be the active tab', function () {\n            expect(tab.isActive()).to.eventually.be.false;\n        });\n\n        it('should report that it is the active tab after visiting it', function () {\n            tab.visit();\n            expect(tab.isActive()).to.eventually.be.true;\n        });\n\n        it('should be the active tab in the tabs group', function () {\n            expect(tabs.activeTab.name).to.eventually.equal('Cat Ipsum');\n        });\n\n        it('should have a full name', function () {\n            expect(tab.fullName).to.eventually.equal('Cat Ipsum (meow)');\n        });\n\n        it('should have a name', function () {\n            expect(tab.name).to.eventually.equal('Cat Ipsum');\n        });\n\n        it('should have a subtitle', function () {\n            expect(tab.subtitle).to.eventually.equal('(meow)');\n        });\n\n    });\n\n    describe('main tabs', function () {\n\n        before(function () {\n            demoPage.go('#/components/hotkeys');\n        });\n\n        it('should find the only tabs on the page', function () {\n            expect(tabsPage.main.names).to.eventually.eql(['Demo', 'Markup', 'JavaScript', 'Protractor']);\n        });\n\n    });\n\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "tooltips",
        "moduleName": "'encore.ui.tooltips'",
        "displayName": "Tooltips",
        "srcFiles": [
            "src/tooltips/tooltips.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 27, 2015 @ 10:48 (UTC-0500)",
        "rawLastModified": "2015-10-27 10:48:53 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>The tooltips component provides styles to raw HTML elements and custom directive templates.</p>\n",
            "js": "/* jshint unused:false */\nangular.module('demoApp')\n.controller('tooltipsCtrl', function ($scope) {\n    $scope.dynamicTooltip = 'I was defined in the controller!';\n});\n",
            "html": "<div ng-controller=\"tooltipsCtrl\">\n    <ul>\n        <li><span tooltip=\"Right tooltip\" tooltip-placement=\"right\">Hover over me for a right-side tooltip</span></li>\n        <li><span tooltip=\"A top tooltip\" tooltip-placement=\"top\"><rx-button default-msg=\"Top tooltip\"></rx-button></span></li>\n        <li><span tooltip=\"A bottom tooltip\" tooltip-placement=\"bottom\"><rx-button default-msg=\"Bottom tooltip\"></rx-button></span></li>\n        <li><span tooltip=\"{{dynamicTooltip}}\"><rx-button default-msg=\"Hover to see text coming from the controller\"></rx-button></span></li>\n        <li><span tooltip-html-unsafe=\"<span class='tooltip-header'>A Tooltip Title</span><p>You can use HTML</p>\"><span>Hover over this text to see HTML in a tooltip</span></li>\n    </ul>\n</div>\n",
            "less": "@import \"vars\";\n\n//\n// Tooltips\n// --------------------------------------------------\n\n@zindexTooltip: 1070;\n@tooltipMaxWidth: 200px;\n@tooltipHeaderColor: @white;\n@tooltipColor: #f1f1f1;\n@tooltipBg: #878787;\n@tooltipOpacity: 1;\n\n//** Tooltip arrow width\n@tooltipArrowWidth: 5px;\n//** Tooltip arrow color\n@tooltipArrowColor: @tooltipBg;\n\n// Base class\n.tooltip {\n    position: absolute;\n    z-index: @zindexTooltip;\n    display: block;\n    visibility: visible;\n    font-size: @appFontSize;\n    line-height: @appLineHeight;\n    .opacity(0);\n\n    &.in {\n        .opacity(@tooltipOpacity);\n    }\n\n    &.top {\n        margin-top: -3px;\n        padding: @tooltipArrowWidth 0;\n    }\n\n    &.right {\n        margin-left: 3px;\n        padding: 0 @tooltipArrowWidth;\n    }\n\n    &.bottom {\n        margin-top: 3px;\n        padding: @tooltipArrowWidth 0;\n    }\n\n    &.left {\n        margin-left: -3px;\n        padding: 0 @tooltipArrowWidth;\n    }\n}\n\n// Wrapper for the tooltip content\n.tooltip-inner {\n    max-width: @tooltipMaxWidth;\n    color: @tooltipColor;\n    text-align: center;\n    text-decoration: none;\n    background-color: @tooltipBg;\n    .border-radius(4px);\n    box-shadow: rgba(0, 0, 0, 0.35) 1px 1px 4px 0px;\n    padding: 1em;\n\n    .tooltip-header {\n        color: @tooltipHeaderColor;\n        text-align: left;\n        font-size: 15px;\n        padding-bottom: 5px;\n        font-weight: 600;\n    }\n}\n\n// Arrows\n.tooltip-arrow {\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-color: transparent;\n    border-style: solid;\n    text-shadow: rgba(0, 0, 0, 0.09) 1px 1px 1px;\n}\n.tooltip {\n    &.top .tooltip-arrow {\n        bottom: 0;\n        left: 50%;\n        margin-left: -@tooltipArrowWidth;\n        border-width: @tooltipArrowWidth @tooltipArrowWidth 0;\n        border-top-color: @tooltipArrowColor;\n    }\n    &.top-left .tooltip-arrow {\n        bottom: 0;\n        left: @tooltipArrowWidth;\n        border-width: @tooltipArrowWidth @tooltipArrowWidth 0;\n        border-top-color: @tooltipArrowColor;\n    }\n    &.top-right .tooltip-arrow {\n        bottom: 0;\n        right: @tooltipArrowWidth;\n        border-width: @tooltipArrowWidth @tooltipArrowWidth 0;\n        border-top-color: @tooltipArrowColor;\n    }\n    &.right .tooltip-arrow {\n        top: 50%;\n        left: 0;\n        margin-top: -@tooltipArrowWidth;\n        border-width: @tooltipArrowWidth @tooltipArrowWidth @tooltipArrowWidth 0;\n        border-right-color: @tooltipArrowColor;\n    }\n    &.left .tooltip-arrow {\n        top: 50%;\n        right: 0;\n        margin-top: -@tooltipArrowWidth;\n        border-width: @tooltipArrowWidth 0 @tooltipArrowWidth @tooltipArrowWidth;\n        border-left-color: @tooltipArrowColor;\n    }\n    &.bottom .tooltip-arrow {\n        top: 0;\n        left: 50%;\n        margin-left: -@tooltipArrowWidth;\n        border-width: 0 @tooltipArrowWidth @tooltipArrowWidth;\n        border-bottom-color: @tooltipArrowColor;\n    }\n    &.bottom-left .tooltip-arrow {\n        top: 0;\n        left: @tooltipArrowWidth;\n        border-width: 0 @tooltipArrowWidth @tooltipArrowWidth;\n        border-bottom-color: @tooltipArrowColor;\n    }\n    &.bottom-right .tooltip-arrow {\n        top: 0;\n        right: @tooltipArrowWidth;\n        border-width: 0 @tooltipArrowWidth @tooltipArrowWidth;\n        border-bottom-color: @tooltipArrowColor;\n    }\n}\n",
            "midway": "\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    },
    {
        "name": "typeahead",
        "moduleName": "'encore.ui.typeahead'",
        "displayName": "Typeahead",
        "srcFiles": [
            "src/typeahead/typeahead.js"
        ],
        "tplFiles": [],
        "tplJsFiles": [],
        "dependencies": [],
        "stability": "unstable",
        "lastModified": "Oct 28, 2015 @ 11:50 (UTC-0500)",
        "rawLastModified": "2015-10-28 11:50:57 -0500",
        "docs": {
            "md": "<p><a href=\"http://github.com/badges/stability-badges\"><img src=\"http://badges.github.io/stability-badges/dist/unstable.svg\" alt=\"unstable\"></a></p>\n<p>This component provides styles and a demo for the <a href=\"https://github.com/angular-ui/bootstrap/tree/master/src/typeahead\">the Angular-UI Bootstrap Typeahead plugin</a>, which is included as a dependency for EncoreUI.</p>\n",
            "js": "/*jshint unused:false*/\nangular.module('demoApp')\n.controller('typeaheadCtrl', function ($scope) {\n    $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut',\n        'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas',\n        'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n        'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York',\n        'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Republic of Dawood',\n        'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia',\n        'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n});\n",
            "html": "<div ng-controller=\"typeaheadCtrl\">\n  <div rx-form>\n    <h3>Standard Use</h3>\n    <rx-form-section stacked>\n      <rx-field>\n        <rx-field-name>States:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\"\n              ng-model=\"selected1\"\n              typeahead=\"state for state in states | filter:$viewValue | limitTo:8\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n\n    <h3>Show List on Focus</h3>\n    <rx-form-section stacked>\n      <rx-field>\n        <rx-field-name>States:</rx-field-name>\n        <rx-field-content>\n          <rx-input>\n            <input type=\"text\"\n              id=\"typeahead\"\n              ng-model=\"selected2\"\n              typeahead=\"state for state in states | filter:$viewValue:allowEmpty\" />\n          </rx-input>\n        </rx-field-content>\n      </rx-field>\n    </rx-form-section>\n  </div>\n</div>\n",
            "less": "@import \"vars\";\n\n.dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    margin-top: -1px;\n    display: none;\n    list-style: none;\n    background: @white;\n    border: 1px solid #cccccc;\n    padding: 6px 0;\n    z-index: 3; // Will display over a textarea element\n    max-height: 300px;\n    overflow-y: auto;\n\n    a {\n        display: block;\n        margin: 0;\n        padding: 5px 10px;\n        color: @inputColor;\n    }\n    .active a {\n        background: @optionHighlightBg;\n        color: @white;\n    }\n}\n",
            "midway": "var typeaheadPage = encore.typeahead;\n\ndescribe('typeahead', function () {\n    var typeahead;\n\n    before(function () {\n        demoPage.go('#/components/typeahead');\n        typeahead = typeaheadPage.initialize($('#typeahead'));\n    });\n\n    it('should show element', function () {\n        expect(typeahead.isDisplayed()).to.eventually.be.true;\n    });\n\n    it('should hide the menu initially', function () {\n        expect(typeahead.isOpen()).to.eventually.be.false;\n    });\n\n    it('should show the menu when clicked', function () {\n        typeahead.focus();\n        expect(typeahead.isOpen()).to.eventually.be.true;\n    });\n\n    it('should hide the menu when the input loses focus', function () {\n        typeahead.rootElement.element(by.xpath('../..')).click();\n        expect(typeahead.isOpen()).to.eventually.be.false;\n    });\n});\n\n// this component's exercise.js file, if it exists, is below\n\n"
        }
    }
]);